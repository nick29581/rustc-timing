commit 833b03ad52f1d5381d65ad866ab79cb9a68b0e7f
Merge: cfa668f 516d105
Author: bors <bors@rust-lang.org>
Date:   Thu Dec 15 09:26:25 2016 +0000

    Auto merge of #38185 - jsgf:test-list, r=alexcrichton
    
    libtest: add --list option to list tests and benchmarks
    
    This option lists all the tests and benchmarks a binary provides without running any of them.
    By default the listing is sent to stdout (intended for human consumption), but if `--logfile` is also specified, it is also written there in an easily parsable form.
    
    If filters are specified, they're applied before the output is emitted. The human output will also include a summary unless `-q` is specified.
rustc: ./syntex-0.42.2@000-base
cargo rustc -p syntex_syntax  -- -Ztime-passes -Zinput-stats
time: 0.091; rss: 71MB	parsing
Lines of code:             33687
Pre-expansion node count:  223115
time: 0.000; rss: 71MB	recursion limit
time: 0.000; rss: 71MB	crate injection
time: 0.000; rss: 71MB	plugin loading
time: 0.000; rss: 71MB	plugin registration
time: 0.241; rss: 147MB	expansion
time: 0.000; rss: 147MB	maybe building test harness
time: 0.006; rss: 147MB	maybe creating a macro crate
Post-expansion node count: 638863
time: 0.000; rss: 147MB	checking for inline asm in case the target doesn't support it
time: 0.012; rss: 147MB	complete gated feature checking
time: 0.023; rss: 147MB	early lint checks
time: 0.007; rss: 147MB	AST validation
time: 0.075; rss: 161MB	name resolution
time: 0.059; rss: 195MB	lowering ast -> hir
time: 0.010; rss: 187MB	indexing hir
time: 0.006; rss: 187MB	attribute checking
time: 0.002; rss: 150MB	language item collection
time: 0.011; rss: 150MB	lifetime resolution
time: 0.000; rss: 150MB	looking for entry point
time: 0.000; rss: 150MB	looking for plugin registrar
time: 0.046; rss: 169MB	region resolution
time: 0.007; rss: 169MB	loop checking
time: 0.002; rss: 169MB	static item recursion checking
time: 0.381; rss: 171MB	compute_incremental_hashes_map
time: 0.000; rss: 171MB	load_dep_graph
time: 0.008; rss: 171MB	stability index
time: 0.016; rss: 171MB	stability checking
time: 0.048; rss: 176MB	type collecting
time: 0.001; rss: 176MB	variance inference
time: 0.002; rss: 176MB	impl wf inference
time: 0.017; rss: 178MB	coherence checking
time: 0.082; rss: 180MB	wf checking
time: 0.183; rss: 184MB	item-types checking
time: 3.372; rss: 235MB	item-bodies checking
time: 0.000; rss: 235MB	drop-impl checking
time: 0.261; rss: 245MB	const checking
time: 0.054; rss: 245MB	privacy checking
time: 0.016; rss: 245MB	intrinsic checking
time: 0.013; rss: 245MB	effect checking
time: 0.046; rss: 245MB	match checking
time: 0.046; rss: 252MB	liveness checking
time: 0.169; rss: 252MB	rvalue checking
time: 0.568; rss: 427MB	MIR dump
  time: 0.059; rss: 433MB	SimplifyCfg
  time: 0.075; rss: 433MB	QualifyAndPromoteConstants
  time: 0.107; rss: 433MB	TypeckMir
  time: 0.004; rss: 433MB	SimplifyBranches
  time: 0.031; rss: 433MB	SimplifyCfg
time: 0.276; rss: 433MB	MIR cleanup and validation
time: 0.469; rss: 436MB	borrow checking
time: 0.024; rss: 436MB	reachability checking
time: 0.037; rss: 436MB	death checking
time: 0.000; rss: 436MB	unused lib feature checking
time: 0.181; rss: 436MB	lint checking
time: 0.000; rss: 436MB	resolving dependency formats
  time: 0.003; rss: 436MB	NoLandingPads
  time: 0.027; rss: 436MB	SimplifyCfg
  time: 0.075; rss: 443MB	EraseRegions
  time: 0.011; rss: 443MB	AddCallGuards
  time: 0.308; rss: 464MB	ElaborateDrops
  time: 0.003; rss: 464MB	NoLandingPads
  time: 0.054; rss: 464MB	SimplifyCfg
  time: 0.029; rss: 464MB	InstCombine
  time: 0.012; rss: 464MB	Deaggregator
  time: 0.002; rss: 464MB	CopyPropagation
  time: 0.035; rss: 464MB	SimplifyLocals
  time: 0.010; rss: 464MB	AddCallGuards
  time: 0.002; rss: 464MB	PreTrans
time: 0.572; rss: 464MB	MIR optimisations
  time: 0.085; rss: 472MB	write metadata
  time: 0.404; rss: 485MB	translation item collection
  time: 0.062; rss: 489MB	codegen unit partitioning
  time: 0.053; rss: 745MB	internalize symbols
time: 5.144; rss: 745MB	translation
time: 0.000; rss: 745MB	assert dep graph
time: 0.000; rss: 745MB	serialize dep graph
  time: 0.537; rss: 428MB	llvm function passes [0]
  time: 0.304; rss: 435MB	llvm module passes [0]
  time: 10.517; rss: 426MB	codegen passes [0]
  time: 0.000; rss: 426MB	codegen passes [0]
time: 12.147; rss: 426MB	LLVM passes
time: 0.000; rss: 426MB	serialize work products
time: 0.365; rss: 117MB	linking
done
