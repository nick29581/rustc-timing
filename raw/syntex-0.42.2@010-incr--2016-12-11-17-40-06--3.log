commit 3db197aa9d343c7974b06a9b18ae5f78d5c64637
Merge: 6d5ec58 fbc3f11
Author: bors <bors@rust-lang.org>
Date:   Sun Dec 11 21:19:34 2016 +0000

    Auto merge of #38265 - bluss:mir-deaggregator-loop, r=nagisa
    
    Reinstate while loop in deaggregator pass
    
    A previous commit must have removed the `while let` loop here by
    mistake; for each basic block, it should find and deaggregate multiple
    statements in their index order, and the `curr` index tracks the
    progress through the block.
    
    This fixes both the case of deaggregating statements in separate
    basic blocks (preserving `curr` could prevent that) as well
    as multiple times in the same block (missing loop prevented that).
    
    The loop was lost in commit bda46c21fe30377b9587b584c64ffe99da6c14ce.
rustc: ./syntex-0.42.2@010-incr
find . -name '*.rs' | xargs touch
RUSTFLAGS="-Z incremental=incr" \
    cargo rustc -p syntex_syntax  -- \
    -Ztime-passes -Zinput-stats -Z incremental-info
time: 0.092; rss: 75MB	parsing
Lines of code:             33687
Pre-expansion node count:  223115
time: 0.000; rss: 75MB	recursion limit
time: 0.000; rss: 75MB	crate injection
time: 0.000; rss: 75MB	plugin loading
time: 0.000; rss: 75MB	plugin registration
time: 0.241; rss: 151MB	expansion
time: 0.000; rss: 151MB	maybe building test harness
time: 0.006; rss: 151MB	maybe creating a macro crate
Post-expansion node count: 638863
time: 0.000; rss: 151MB	checking for inline asm in case the target doesn't support it
time: 0.012; rss: 151MB	complete gated feature checking
time: 0.023; rss: 151MB	early lint checks
time: 0.007; rss: 151MB	AST validation
time: 0.075; rss: 166MB	name resolution
time: 0.058; rss: 199MB	lowering ast -> hir
time: 0.010; rss: 192MB	indexing hir
time: 0.006; rss: 192MB	attribute checking
time: 0.002; rss: 154MB	language item collection
time: 0.011; rss: 156MB	lifetime resolution
time: 0.000; rss: 156MB	looking for entry point
time: 0.000; rss: 156MB	looking for plugin registrar
time: 0.046; rss: 176MB	region resolution
time: 0.007; rss: 176MB	loop checking
time: 0.002; rss: 176MB	static item recursion checking
time: 0.384; rss: 178MB	compute_incremental_hashes_map
time: 0.000; rss: 178MB	load_dep_graph
time: 0.009; rss: 178MB	stability index
time: 0.021; rss: 181MB	stability checking
time: 0.056; rss: 190MB	type collecting
time: 0.004; rss: 190MB	variance inference
time: 0.006; rss: 193MB	impl wf inference
time: 0.025; rss: 197MB	coherence checking
time: 0.087; rss: 199MB	wf checking
time: 0.198; rss: 208MB	item-types checking
time: 3.559; rss: 266MB	item-bodies checking
time: 0.000; rss: 266MB	drop-impl checking
time: 0.214; rss: 277MB	const checking
time: 0.057; rss: 277MB	privacy checking
time: 0.020; rss: 283MB	intrinsic checking
time: 0.016; rss: 283MB	effect checking
time: 0.049; rss: 283MB	match checking
time: 0.046; rss: 290MB	liveness checking
time: 0.174; rss: 292MB	rvalue checking
time: 0.413; rss: 478MB	MIR dump
  time: 0.058; rss: 480MB	SimplifyCfg
  time: 0.074; rss: 481MB	QualifyAndPromoteConstants
  time: 0.180; rss: 497MB	TypeckMir
  time: 0.005; rss: 497MB	SimplifyBranches
  time: 0.033; rss: 497MB	SimplifyCfg
time: 0.349; rss: 497MB	MIR cleanup and validation
time: 0.472; rss: 499MB	borrow checking
time: 0.024; rss: 499MB	reachability checking
time: 0.038; rss: 499MB	death checking
time: 0.000; rss: 499MB	unused lib feature checking
time: 0.178; rss: 499MB	lint checking
time: 0.000; rss: 499MB	resolving dependency formats
  time: 0.004; rss: 499MB	NoLandingPads
  time: 0.027; rss: 499MB	SimplifyCfg
  time: 0.064; rss: 508MB	EraseRegions
  time: 0.011; rss: 508MB	AddCallGuards
  time: 0.293; rss: 525MB	ElaborateDrops
  time: 0.004; rss: 525MB	NoLandingPads
  time: 0.053; rss: 525MB	SimplifyCfg
  time: 0.029; rss: 525MB	InstCombine
  time: 0.013; rss: 525MB	Deaggregator
  time: 0.004; rss: 525MB	CopyPropagation
  time: 0.035; rss: 525MB	SimplifyLocals
  time: 0.010; rss: 525MB	AddCallGuards
  time: 0.003; rss: 525MB	PreTrans
time: 0.548; rss: 525MB	MIR optimisations
  time: 0.088; rss: 532MB	write metadata
  time: 0.418; rss: 544MB	translation item collection
  time: 0.076; rss: 548MB	codegen unit partitioning
  time: 0.053; rss: 1444MB	internalize symbols
time: 13.862; rss: 1444MB	translation
time: 0.000; rss: 1444MB	assert dep graph
time: 2.116; rss: 1473MB	serialize dep graph
incremental: re-using 0 out of 50 modules
time: 0.000; rss: 1190MB	llvm function passes [0]
time: 0.000; rss: 1190MB	llvm module passes [0]
time: 0.001; rss: 1202MB	llvm function passes [1]
time: 0.000; rss: 1202MB	llvm module passes [1]
time: 0.001; rss: 1202MB	llvm function passes [4]
time: 0.000; rss: 1202MB	llvm module passes [4]
time: 0.003; rss: 1202MB	llvm function passes [6]
time: 0.003; rss: 1202MB	llvm function passes [2]
time: 0.000; rss: 1202MB	llvm module passes [2]
time: 0.007; rss: 1209MB	llvm function passes [5]
time: 0.009; rss: 1209MB	llvm module passes [6]
time: 0.010; rss: 1213MB	codegen passes [0]
time: 0.001; rss: 1213MB	llvm function passes [9]
time: 0.000; rss: 1213MB	llvm module passes [9]
time: 0.016; rss: 1213MB	llvm function passes [3]
time: 0.014; rss: 1213MB	codegen passes [1]
time: 0.008; rss: 1213MB	llvm module passes [3]
time: 0.021; rss: 1213MB	llvm module passes [5]
time: 0.019; rss: 1213MB	llvm function passes [0]
time: 0.029; rss: 1215MB	codegen passes [2]
time: 0.025; rss: 1215MB	llvm function passes [10]
time: 0.008; rss: 1215MB	llvm module passes [0]
time: 0.033; rss: 1221MB	codegen passes [9]
time: 0.046; rss: 1221MB	codegen passes [4]
time: 0.016; rss: 1221MB	llvm module passes [10]
time: 0.014; rss: 1232MB	llvm function passes [9]
time: 0.000; rss: 1236MB	llvm function passes [12]
time: 0.000; rss: 1236MB	llvm module passes [12]
time: 0.001; rss: 1236MB	codegen passes [12]
time: 0.003; rss: 1238MB	llvm function passes [12]
time: 0.008; rss: 1238MB	llvm module passes [9]
time: 0.001; rss: 1238MB	llvm module passes [12]
time: 0.067; rss: 1240MB	llvm function passes [1]
time: 0.032; rss: 1248MB	llvm function passes [13]
time: 0.088; rss: 1250MB	codegen passes [6]
time: 0.000; rss: 1252MB	llvm function passes [14]
time: 0.000; rss: 1252MB	llvm module passes [14]
time: 0.016; rss: 1254MB	llvm module passes [13]
time: 0.079; rss: 1260MB	llvm function passes [4]
time: 0.001; rss: 1262MB	llvm function passes [15]
time: 0.000; rss: 1262MB	llvm module passes [15]
time: 0.067; rss: 1262MB	llvm module passes [1]
time: 0.035; rss: 1261MB	llvm module passes [4]
time: 0.054; rss: 1260MB	codegen passes [14]
time: 0.000; rss: 1260MB	llvm function passes [14]
time: 0.000; rss: 1260MB	llvm module passes [14]
time: 0.003; rss: 1261MB	codegen passes [14]
time: 0.121; rss: 1260MB	codegen passes [12]
time: 0.000; rss: 1264MB	llvm function passes [16]
time: 0.000; rss: 1264MB	llvm module passes [16]
time: 0.084; rss: 1264MB	codegen passes [15]
time: 0.001; rss: 1264MB	codegen passes [16]
time: 0.062; rss: 1265MB	llvm function passes [14]
time: 0.236; rss: 1265MB	llvm function passes [8]
time: 0.037; rss: 1268MB	llvm module passes [14]
time: 0.296; rss: 1270MB	llvm function passes [7]
time: 0.302; rss: 1274MB	llvm function passes [2]
time: 0.236; rss: 1275MB	llvm function passes [6]
time: 0.034; rss: 1274MB	llvm function passes [23]
time: 0.064; rss: 1274MB	llvm function passes [20]
time: 0.341; rss: 1274MB	llvm function passes [11]
time: 0.174; rss: 1280MB	llvm function passes [17]
time: 0.047; rss: 1281MB	llvm function passes [29]
time: 0.002; rss: 1282MB	llvm module passes [29]
time: 0.068; rss: 1283MB	llvm module passes [23]
time: 0.095; rss: 1283MB	llvm function passes [22]
time: 0.068; rss: 1283MB	llvm module passes [20]
time: 0.028; rss: 1284MB	llvm module passes [17]
time: 0.006; rss: 1285MB	llvm module passes [22]
time: 0.073; rss: 1287MB	llvm function passes [25]
time: 0.289; rss: 1288MB	llvm function passes [12]
time: 0.149; rss: 1288MB	llvm module passes [6]
time: 0.087; rss: 1289MB	llvm function passes [26]
time: 0.307; rss: 1293MB	llvm function passes [15]
time: 0.486; rss: 1294MB	codegen passes [5]
time: 0.305; rss: 1294MB	llvm function passes [18]
time: 0.063; rss: 1295MB	llvm module passes [26]
time: 0.049; rss: 1295MB	llvm function passes [34]
time: 0.275; rss: 1299MB	llvm function passes [21]
time: 0.032; rss: 1299MB	llvm function passes [5]
time: 0.298; rss: 1300MB	llvm function passes [19]
time: 0.007; rss: 1300MB	llvm module passes [5]
time: 0.003; rss: 1300MB	codegen passes [37]
time: 0.159; rss: 1300MB	llvm function passes [30]
time: 0.008; rss: 1300MB	llvm function passes [36]
time: 0.001; rss: 1300MB	llvm module passes [36]
time: 0.409; rss: 1302MB	llvm function passes [16]
time: 0.309; rss: 1306MB	llvm module passes [2]
time: 0.169; rss: 1307MB	llvm module passes [25]
time: 0.044; rss: 1307MB	llvm module passes [30]
time: 0.417; rss: 1307MB	llvm module passes [8]
time: 0.362; rss: 1308MB	llvm module passes [7]
time: 0.071; rss: 1308MB	llvm function passes [35]
time: 0.266; rss: 1308MB	llvm function passes [28]
time: 0.174; rss: 1309MB	llvm function passes [32]
time: 0.186; rss: 1309MB	llvm module passes [12]
time: 0.004; rss: 1310MB	codegen passes [36]
time: 0.011; rss: 1310MB	llvm module passes [35]
time: 0.131; rss: 1310MB	llvm module passes [34]
time: 0.209; rss: 1313MB	llvm module passes [15]
time: 0.167; rss: 1314MB	llvm module passes [19]
time: 0.182; rss: 1317MB	llvm module passes [21]
time: 0.375; rss: 1319MB	llvm function passes [27]
time: 0.356; rss: 1328MB	llvm function passes [31]
time: 0.373; rss: 1331MB	codegen passes [29]
time: 0.224; rss: 1334MB	llvm module passes [16]
time: 0.334; rss: 1335MB	llvm function passes [33]
time: 0.361; rss: 1339MB	llvm module passes [18]
time: 0.254; rss: 1338MB	llvm module passes [32]
time: 0.557; rss: 1339MB	llvm function passes [24]
time: 0.309; rss: 1352MB	llvm module passes [28]
time: 0.267; rss: 1357MB	codegen passes [5]
time: 0.912; rss: 1356MB	codegen passes [9]
time: 0.235; rss: 1360MB	llvm module passes [33]
time: 0.289; rss: 1360MB	llvm module passes [31]
time: 0.712; rss: 1362MB	llvm module passes [11]
time: 0.464; rss: 1366MB	llvm module passes [27]
time: 1.102; rss: 1362MB	codegen passes [0]
time: 0.901; rss: 1382MB	codegen passes [22]
time: 1.312; rss: 1380MB	codegen passes [3]
time: 0.775; rss: 1408MB	llvm module passes [24]
time: 1.119; rss: 1418MB	codegen passes [23]
time: 0.960; rss: 1421MB	codegen passes [35]
time: 1.505; rss: 1437MB	codegen passes [26]
time: 2.253; rss: 1428MB	codegen passes [10]
time: 1.723; rss: 1428MB	codegen passes [30]
time: 1.740; rss: 1429MB	codegen passes [20]
time: 1.740; rss: 1430MB	codegen passes [34]
time: 2.168; rss: 1426MB	codegen passes [4]
time: 2.619; rss: 1399MB	codegen passes [13]
time: 2.269; rss: 1436MB	codegen passes [17]
time: 2.210; rss: 1424MB	codegen passes [12]
time: 2.386; rss: 1422MB	codegen passes [25]
time: 2.548; rss: 1491MB	codegen passes [32]
time: 2.479; rss: 1474MB	codegen passes [21]
time: 3.063; rss: 1537MB	codegen passes [19]
time: 3.556; rss: 1537MB	codegen passes [14]
time: 3.920; rss: 1600MB	codegen passes [1]
time: 4.102; rss: 1687MB	codegen passes [6]
time: 3.845; rss: 1652MB	codegen passes [18]
time: 4.107; rss: 1637MB	codegen passes [28]
time: 4.351; rss: 1635MB	codegen passes [33]
time: 4.286; rss: 1640MB	codegen passes [16]
time: 4.420; rss: 1596MB	codegen passes [7]
time: 4.729; rss: 1546MB	codegen passes [31]
time: 4.382; rss: 1503MB	codegen passes [15]
time: 4.261; rss: 1497MB	codegen passes [27]
time: 4.793; rss: 1486MB	codegen passes [2]
time: 4.767; rss: 1438MB	codegen passes [8]
time: 4.545; rss: 1361MB	codegen passes [24]
time: 6.047; rss: 1299MB	codegen passes [11]
time: 8.507; rss: 1298MB	LLVM passes
time: 0.000; rss: 1298MB	serialize work products
time: 1.058; rss: 272MB	linking
done
