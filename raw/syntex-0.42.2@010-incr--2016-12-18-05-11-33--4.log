commit 8327b5afafde7cdd6fd4e939d9a8fe12f76503ef
Merge: d54e723 ff59474
Author: bors <bors@rust-lang.org>
Date:   Sun Dec 18 07:59:32 2016 +0000

    Auto merge of #37429 - camlorn:univariant_layout_optimization, r=eddyb
    
    struct field reordering and optimization
    
    This is work in progress.  The goal is to divorce the order of fields in source code from the order of fields in the LLVM IR, then optimize structs (and tuples/enum variants)by always ordering fields from least to most aligned.  It does not work yet.  I intend to check compiler memory usage as a benchmark, and a crater run will probably be required.
    
    I don't know enough of the compiler to complete this work unaided.  If you see places that still need updating, please mention them.  The only one I know of currently is debuginfo, which I'm putting off intentionally until a bit later.
    
    r? @eddyb
rustc: ./syntex-0.42.2@010-incr
find . -name '*.rs' | xargs touch
RUSTFLAGS="-Z incremental=incr" \
    cargo rustc -p syntex_syntax  -- \
    -Ztime-passes -Zinput-stats -Z incremental-info
time: 0.092; rss: 75MB	parsing
Lines of code:             33687
Pre-expansion node count:  223115
time: 0.000; rss: 75MB	recursion limit
time: 0.000; rss: 75MB	crate injection
time: 0.000; rss: 75MB	plugin loading
time: 0.000; rss: 75MB	plugin registration
time: 0.242; rss: 151MB	expansion
time: 0.000; rss: 151MB	maybe building test harness
time: 0.006; rss: 151MB	maybe creating a macro crate
Post-expansion node count: 638863
time: 0.000; rss: 151MB	checking for inline asm in case the target doesn't support it
time: 0.012; rss: 151MB	complete gated feature checking
time: 0.023; rss: 151MB	early lint checks
time: 0.007; rss: 151MB	AST validation
time: 0.076; rss: 166MB	name resolution
time: 0.059; rss: 199MB	lowering ast -> hir
time: 0.010; rss: 192MB	indexing hir
time: 0.006; rss: 192MB	attribute checking
time: 0.002; rss: 153MB	language item collection
time: 0.011; rss: 156MB	lifetime resolution
time: 0.000; rss: 156MB	looking for entry point
time: 0.000; rss: 156MB	looking for plugin registrar
time: 0.047; rss: 176MB	region resolution
time: 0.008; rss: 176MB	loop checking
time: 0.002; rss: 176MB	static item recursion checking
time: 0.381; rss: 178MB	compute_incremental_hashes_map
time: 0.000; rss: 178MB	load_dep_graph
time: 0.009; rss: 178MB	stability index
time: 0.021; rss: 181MB	stability checking
time: 0.056; rss: 189MB	type collecting
time: 0.004; rss: 189MB	variance inference
time: 0.006; rss: 193MB	impl wf inference
time: 0.025; rss: 196MB	coherence checking
time: 0.088; rss: 199MB	wf checking
time: 0.197; rss: 207MB	item-types checking
time: 3.571; rss: 266MB	item-bodies checking
time: 0.000; rss: 266MB	drop-impl checking
time: 0.221; rss: 276MB	const checking
time: 0.068; rss: 276MB	privacy checking
time: 0.020; rss: 283MB	intrinsic checking
time: 0.016; rss: 283MB	effect checking
time: 0.051; rss: 283MB	match checking
time: 0.050; rss: 290MB	liveness checking
time: 0.176; rss: 292MB	rvalue checking
time: 0.365; rss: 481MB	MIR dump
  time: 0.056; rss: 483MB	SimplifyCfg
  time: 0.075; rss: 483MB	QualifyAndPromoteConstants
  time: 0.120; rss: 499MB	TypeckMir
  time: 0.005; rss: 499MB	SimplifyBranches
  time: 0.033; rss: 499MB	SimplifyCfg
time: 0.288; rss: 499MB	MIR cleanup and validation
time: 0.603; rss: 499MB	borrow checking
time: 0.031; rss: 499MB	reachability checking
time: 0.048; rss: 499MB	death checking
time: 0.000; rss: 499MB	unused lib feature checking
time: 0.250; rss: 499MB	lint checking
time: 0.000; rss: 499MB	resolving dependency formats
  time: 0.005; rss: 499MB	NoLandingPads
  time: 0.040; rss: 499MB	SimplifyCfg
  time: 0.075; rss: 509MB	EraseRegions
  time: 0.011; rss: 509MB	AddCallGuards
  time: 0.273; rss: 531MB	ElaborateDrops
  time: 0.004; rss: 531MB	NoLandingPads
  time: 0.052; rss: 531MB	SimplifyCfg
  time: 0.029; rss: 530MB	InstCombine
  time: 0.012; rss: 530MB	Deaggregator
  time: 0.004; rss: 530MB	CopyPropagation
  time: 0.035; rss: 530MB	SimplifyLocals
  time: 0.010; rss: 530MB	AddCallGuards
  time: 0.003; rss: 530MB	PreTrans
time: 0.553; rss: 530MB	MIR optimisations
  time: 0.065; rss: 538MB	write metadata
  time: 0.398; rss: 551MB	translation item collection
  time: 0.074; rss: 553MB	codegen unit partitioning
  time: 0.048; rss: 1457MB	internalize symbols
time: 11.952; rss: 1457MB	translation
time: 0.000; rss: 1457MB	assert dep graph
time: 1.443; rss: 1485MB	serialize dep graph
incremental: re-using 0 out of 50 modules
time: 0.001; rss: 1199MB	llvm function passes [0]
time: 0.000; rss: 1199MB	llvm module passes [0]
time: 0.002; rss: 1210MB	llvm function passes [1]
time: 0.000; rss: 1212MB	llvm module passes [1]
time: 0.002; rss: 1212MB	llvm function passes [3]
time: 0.000; rss: 1212MB	llvm module passes [3]
time: 0.002; rss: 1212MB	llvm function passes [2]
time: 0.000; rss: 1212MB	llvm module passes [2]
time: 0.003; rss: 1212MB	llvm function passes [5]
time: 0.002; rss: 1214MB	llvm module passes [5]
time: 0.007; rss: 1216MB	codegen passes [1]
time: 0.001; rss: 1216MB	llvm function passes [1]
time: 0.000; rss: 1216MB	llvm module passes [1]
time: 0.010; rss: 1216MB	llvm function passes [4]
time: 0.011; rss: 1216MB	codegen passes [0]
time: 0.004; rss: 1216MB	llvm module passes [4]
time: 0.015; rss: 1216MB	llvm function passes [6]
time: 0.004; rss: 1216MB	llvm module passes [6]
time: 0.024; rss: 1232MB	llvm function passes [0]
time: 0.013; rss: 1232MB	llvm module passes [0]
time: 0.048; rss: 1234MB	codegen passes [3]
time: 0.044; rss: 1241MB	codegen passes [1]
time: 0.000; rss: 1245MB	llvm function passes [1]
time: 0.000; rss: 1245MB	llvm module passes [1]
time: 0.001; rss: 1245MB	codegen passes [1]
time: 0.055; rss: 1247MB	codegen passes [2]
time: 0.020; rss: 1255MB	llvm function passes [16]
time: 0.014; rss: 1255MB	llvm function passes [11]
time: 0.007; rss: 1255MB	llvm module passes [16]
time: 0.062; rss: 1255MB	llvm function passes [13]
time: 0.009; rss: 1259MB	llvm module passes [11]
time: 0.082; rss: 1259MB	codegen passes [5]
time: 0.008; rss: 1259MB	llvm module passes [13]
time: 0.000; rss: 1269MB	llvm function passes [18]
time: 0.000; rss: 1271MB	llvm function passes [17]
time: 0.000; rss: 1271MB	llvm module passes [17]
time: 0.001; rss: 1271MB	codegen passes [17]
time: 0.049; rss: 1273MB	llvm function passes [1]
time: 0.001; rss: 1273MB	llvm module passes [1]
time: 0.007; rss: 1275MB	llvm module passes [18]
time: 0.004; rss: 1275MB	codegen passes [18]
time: 0.050; rss: 1281MB	llvm function passes [8]
time: 0.000; rss: 1281MB	llvm module passes [8]
time: 0.032; rss: 1287MB	llvm function passes [19]
time: 0.056; rss: 1291MB	llvm function passes [12]
time: 0.000; rss: 1291MB	llvm module passes [12]
time: 0.014; rss: 1291MB	llvm module passes [19]
time: 0.086; rss: 1291MB	llvm function passes [10]
time: 0.017; rss: 1300MB	codegen passes [12]
time: 0.064; rss: 1302MB	llvm function passes [17]
time: 0.144; rss: 1302MB	llvm function passes [15]
time: 0.182; rss: 1302MB	llvm function passes [7]
time: 0.030; rss: 1302MB	llvm module passes [10]
time: 0.021; rss: 1302MB	llvm module passes [17]
time: 0.077; rss: 1307MB	codegen passes [8]
time: 0.054; rss: 1316MB	llvm module passes [15]
time: 0.118; rss: 1320MB	codegen passes [1]
time: 0.037; rss: 1320MB	llvm function passes [23]
time: 0.070; rss: 1319MB	llvm module passes [7]
time: 0.021; rss: 1319MB	llvm function passes [21]
time: 0.020; rss: 1319MB	llvm module passes [23]
time: 0.055; rss: 1319MB	llvm function passes [8]
time: 0.013; rss: 1319MB	llvm module passes [21]
time: 0.263; rss: 1319MB	llvm function passes [14]
time: 0.020; rss: 1323MB	llvm module passes [8]
time: 0.092; rss: 1335MB	llvm function passes [22]
time: 0.026; rss: 1342MB	llvm module passes [22]
time: 0.206; rss: 1348MB	llvm function passes [20]
time: 0.026; rss: 1358MB	llvm function passes [25]
time: 0.017; rss: 1367MB	llvm module passes [25]
time: 0.258; rss: 1367MB	llvm function passes [18]
time: 0.034; rss: 1365MB	llvm function passes [26]
time: 0.020; rss: 1373MB	llvm module passes [26]
time: 0.133; rss: 1373MB	llvm module passes [14]
time: 0.075; rss: 1376MB	llvm module passes [20]
time: 0.019; rss: 1374MB	llvm function passes [29]
time: 0.002; rss: 1374MB	llvm module passes [29]
time: 0.325; rss: 1377MB	llvm function passes [5]
time: 0.069; rss: 1384MB	llvm module passes [18]
time: 0.284; rss: 1382MB	llvm function passes [12]
time: 0.039; rss: 1395MB	codegen passes [29]
time: 0.233; rss: 1394MB	llvm function passes [1]
time: 0.408; rss: 1394MB	llvm function passes [2]
time: 0.004; rss: 1394MB	llvm module passes [1]
time: 0.434; rss: 1395MB	llvm function passes [9]
time: 0.019; rss: 1395MB	llvm function passes [33]
time: 0.043; rss: 1397MB	llvm function passes [29]
time: 0.188; rss: 1393MB	llvm function passes [24]
time: 0.000; rss: 1394MB	codegen passes [37]
time: 0.140; rss: 1392MB	llvm function passes [27]
time: 0.014; rss: 1389MB	llvm function passes [36]
time: 0.000; rss: 1389MB	llvm module passes [36]
time: 0.057; rss: 1392MB	llvm module passes [29]
time: 0.176; rss: 1392MB	llvm function passes [28]
time: 0.522; rss: 1400MB	llvm function passes [3]
time: 0.034; rss: 1403MB	codegen passes [36]
time: 0.168; rss: 1403MB	llvm module passes [5]
time: 0.098; rss: 1399MB	llvm module passes [33]
time: 0.063; rss: 1403MB	llvm module passes [27]
time: 0.117; rss: 1399MB	llvm function passes [35]
time: 0.135; rss: 1400MB	llvm module passes [24]
time: 0.095; rss: 1399MB	llvm module passes [28]
time: 0.204; rss: 1398MB	llvm module passes [2]
time: 0.248; rss: 1397MB	llvm function passes [30]
time: 0.082; rss: 1401MB	llvm module passes [35]
time: 0.654; rss: 1397MB	codegen passes [4]
time: 0.299; rss: 1399MB	llvm module passes [12]
time: 0.206; rss: 1413MB	llvm module passes [3]
time: 0.195; rss: 1411MB	codegen passes [33]
time: 0.116; rss: 1410MB	llvm module passes [30]
time: 0.376; rss: 1417MB	llvm function passes [34]
time: 0.422; rss: 1424MB	llvm function passes [32]
time: 0.110; rss: 1444MB	llvm module passes [34]
time: 0.567; rss: 1449MB	llvm module passes [9]
time: 0.397; rss: 1439MB	codegen passes [1]
time: 0.626; rss: 1439MB	llvm function passes [31]
time: 0.244; rss: 1449MB	llvm module passes [32]
time: 1.358; rss: 1450MB	codegen passes [11]
time: 1.250; rss: 1469MB	codegen passes [21]
time: 1.437; rss: 1470MB	codegen passes [6]
time: 1.514; rss: 1464MB	codegen passes [13]
time: 0.795; rss: 1452MB	llvm module passes [31]
time: 1.493; rss: 1445MB	codegen passes [16]
time: 1.514; rss: 1443MB	codegen passes [0]
time: 0.995; rss: 1424MB	codegen passes [35]
time: 1.717; rss: 1458MB	codegen passes [23]
time: 1.854; rss: 1453MB	codegen passes [19]
time: 1.798; rss: 1443MB	codegen passes [25]
time: 2.123; rss: 1462MB	codegen passes [10]
time: 2.274; rss: 1467MB	codegen passes [17]
time: 2.045; rss: 1463MB	codegen passes [29]
time: 2.211; rss: 1439MB	codegen passes [8]
time: 1.745; rss: 1454MB	codegen passes [30]
time: 2.654; rss: 1514MB	codegen passes [26]
time: 2.541; rss: 1538MB	codegen passes [22]
time: 2.100; rss: 1527MB	codegen passes [32]
time: 3.137; rss: 1592MB	codegen passes [5]
time: 3.406; rss: 1599MB	codegen passes [15]
time: 3.566; rss: 1658MB	codegen passes [18]
time: 3.757; rss: 1636MB	codegen passes [2]
time: 3.733; rss: 1625MB	codegen passes [27]
time: 3.892; rss: 1669MB	codegen passes [34]
time: 4.123; rss: 1660MB	codegen passes [12]
time: 4.273; rss: 1607MB	codegen passes [20]
time: 4.353; rss: 1591MB	codegen passes [7]
time: 3.687; rss: 1549MB	codegen passes [28]
time: 4.691; rss: 1556MB	codegen passes [3]
time: 3.964; rss: 1510MB	codegen passes [31]
time: 4.892; rss: 1445MB	codegen passes [24]
time: 4.997; rss: 1387MB	codegen passes [14]
time: 5.418; rss: 1325MB	codegen passes [9]
time: 7.677; rss: 1321MB	LLVM passes
time: 0.000; rss: 1321MB	serialize work products
time: 1.059; rss: 287MB	linking
done
