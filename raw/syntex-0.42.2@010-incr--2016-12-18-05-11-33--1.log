commit 8327b5afafde7cdd6fd4e939d9a8fe12f76503ef
Merge: d54e723 ff59474
Author: bors <bors@rust-lang.org>
Date:   Sun Dec 18 07:59:32 2016 +0000

    Auto merge of #37429 - camlorn:univariant_layout_optimization, r=eddyb
    
    struct field reordering and optimization
    
    This is work in progress.  The goal is to divorce the order of fields in source code from the order of fields in the LLVM IR, then optimize structs (and tuples/enum variants)by always ordering fields from least to most aligned.  It does not work yet.  I intend to check compiler memory usage as a benchmark, and a crater run will probably be required.
    
    I don't know enough of the compiler to complete this work unaided.  If you see places that still need updating, please mention them.  The only one I know of currently is debuginfo, which I'm putting off intentionally until a bit later.
    
    r? @eddyb
rustc: ./syntex-0.42.2@010-incr
find . -name '*.rs' | xargs touch
RUSTFLAGS="-Z incremental=incr" \
    cargo rustc -p syntex_syntax  -- \
    -Ztime-passes -Zinput-stats -Z incremental-info
time: 0.092; rss: 75MB	parsing
Lines of code:             33687
Pre-expansion node count:  223115
time: 0.000; rss: 75MB	recursion limit
time: 0.000; rss: 75MB	crate injection
time: 0.000; rss: 75MB	plugin loading
time: 0.000; rss: 75MB	plugin registration
time: 0.241; rss: 151MB	expansion
time: 0.000; rss: 151MB	maybe building test harness
time: 0.006; rss: 151MB	maybe creating a macro crate
Post-expansion node count: 638863
time: 0.000; rss: 151MB	checking for inline asm in case the target doesn't support it
time: 0.012; rss: 151MB	complete gated feature checking
time: 0.023; rss: 151MB	early lint checks
time: 0.007; rss: 151MB	AST validation
time: 0.075; rss: 166MB	name resolution
time: 0.058; rss: 200MB	lowering ast -> hir
time: 0.010; rss: 192MB	indexing hir
time: 0.006; rss: 192MB	attribute checking
time: 0.002; rss: 154MB	language item collection
time: 0.011; rss: 156MB	lifetime resolution
time: 0.000; rss: 156MB	looking for entry point
time: 0.000; rss: 156MB	looking for plugin registrar
time: 0.046; rss: 177MB	region resolution
time: 0.007; rss: 177MB	loop checking
time: 0.002; rss: 177MB	static item recursion checking
time: 0.381; rss: 178MB	compute_incremental_hashes_map
time: 0.000; rss: 178MB	load_dep_graph
time: 0.009; rss: 178MB	stability index
time: 0.021; rss: 181MB	stability checking
time: 0.055; rss: 189MB	type collecting
time: 0.004; rss: 189MB	variance inference
time: 0.006; rss: 193MB	impl wf inference
time: 0.026; rss: 197MB	coherence checking
time: 0.087; rss: 199MB	wf checking
time: 0.197; rss: 207MB	item-types checking
time: 3.572; rss: 267MB	item-bodies checking
time: 0.000; rss: 267MB	drop-impl checking
time: 0.221; rss: 276MB	const checking
time: 0.066; rss: 276MB	privacy checking
time: 0.020; rss: 283MB	intrinsic checking
time: 0.014; rss: 283MB	effect checking
time: 0.049; rss: 283MB	match checking
time: 0.047; rss: 290MB	liveness checking
time: 0.173; rss: 292MB	rvalue checking
time: 0.361; rss: 481MB	MIR dump
  time: 0.056; rss: 483MB	SimplifyCfg
  time: 0.074; rss: 483MB	QualifyAndPromoteConstants
  time: 0.120; rss: 499MB	TypeckMir
  time: 0.004; rss: 499MB	SimplifyBranches
  time: 0.031; rss: 499MB	SimplifyCfg
time: 0.285; rss: 499MB	MIR cleanup and validation
time: 0.470; rss: 500MB	borrow checking
time: 0.024; rss: 500MB	reachability checking
time: 0.038; rss: 500MB	death checking
time: 0.000; rss: 500MB	unused lib feature checking
time: 0.177; rss: 500MB	lint checking
time: 0.000; rss: 500MB	resolving dependency formats
  time: 0.004; rss: 500MB	NoLandingPads
  time: 0.027; rss: 500MB	SimplifyCfg
  time: 0.064; rss: 509MB	EraseRegions
  time: 0.011; rss: 509MB	AddCallGuards
  time: 0.270; rss: 529MB	ElaborateDrops
  time: 0.004; rss: 529MB	NoLandingPads
  time: 0.052; rss: 529MB	SimplifyCfg
  time: 0.028; rss: 528MB	InstCombine
  time: 0.013; rss: 528MB	Deaggregator
  time: 0.004; rss: 528MB	CopyPropagation
  time: 0.035; rss: 528MB	SimplifyLocals
  time: 0.010; rss: 528MB	AddCallGuards
  time: 0.003; rss: 528MB	PreTrans
time: 0.525; rss: 528MB	MIR optimisations
  time: 0.065; rss: 537MB	write metadata
  time: 0.392; rss: 551MB	translation item collection
  time: 0.070; rss: 555MB	codegen unit partitioning
  time: 0.048; rss: 1457MB	internalize symbols
time: 11.917; rss: 1457MB	translation
time: 0.000; rss: 1457MB	assert dep graph
time: 1.359; rss: 1485MB	serialize dep graph
incremental: re-using 0 out of 50 modules
time: 0.000; rss: 1197MB	llvm function passes [1]
time: 0.000; rss: 1199MB	llvm module passes [1]
time: 0.001; rss: 1203MB	llvm function passes [0]
time: 0.000; rss: 1203MB	llvm module passes [0]
time: 0.001; rss: 1205MB	llvm function passes [4]
time: 0.000; rss: 1205MB	llvm module passes [4]
time: 0.002; rss: 1205MB	codegen passes [1]
time: 0.003; rss: 1208MB	codegen passes [0]
time: 0.004; rss: 1208MB	llvm function passes [6]
time: 0.001; rss: 1208MB	llvm function passes [0]
time: 0.000; rss: 1208MB	llvm module passes [0]
time: 0.001; rss: 1208MB	llvm module passes [6]
time: 0.008; rss: 1214MB	codegen passes [4]
time: 0.011; rss: 1214MB	llvm function passes [5]
time: 0.013; rss: 1214MB	llvm function passes [2]
time: 0.000; rss: 1216MB	llvm module passes [2]
time: 0.017; rss: 1218MB	llvm function passes [3]
time: 0.008; rss: 1218MB	llvm module passes [3]
time: 0.014; rss: 1218MB	llvm module passes [5]
time: 0.028; rss: 1223MB	codegen passes [0]
time: 0.033; rss: 1223MB	llvm function passes [48]
time: 0.035; rss: 1223MB	llvm function passes [47]
time: 0.005; rss: 1223MB	llvm module passes [47]
time: 0.015; rss: 1223MB	llvm module passes [48]
time: 0.041; rss: 1232MB	llvm function passes [17]
time: 0.047; rss: 1232MB	codegen passes [2]
time: 0.000; rss: 1234MB	llvm function passes [45]
time: 0.000; rss: 1234MB	llvm module passes [45]
time: 0.008; rss: 1236MB	llvm module passes [17]
time: 0.013; rss: 1244MB	codegen passes [45]
time: 0.074; rss: 1244MB	llvm function passes [4]
time: 0.000; rss: 1251MB	llvm function passes [43]
time: 0.089; rss: 1251MB	codegen passes [6]
time: 0.008; rss: 1255MB	llvm module passes [43]
time: 0.004; rss: 1259MB	codegen passes [43]
time: 0.000; rss: 1259MB	llvm function passes [42]
time: 0.000; rss: 1259MB	llvm module passes [42]
time: 0.001; rss: 1259MB	codegen passes [42]
time: 0.033; rss: 1263MB	llvm function passes [45]
time: 0.000; rss: 1263MB	llvm module passes [45]
time: 0.046; rss: 1273MB	llvm function passes [44]
time: 0.040; rss: 1275MB	llvm module passes [4]
time: 0.001; rss: 1275MB	llvm module passes [44]
time: 0.011; rss: 1275MB	codegen passes [45]
time: 0.044; rss: 1277MB	llvm function passes [15]
time: 0.000; rss: 1277MB	llvm module passes [15]
time: 0.145; rss: 1284MB	llvm function passes [1]
time: 0.092; rss: 1284MB	llvm function passes [32]
time: 0.026; rss: 1284MB	llvm function passes [41]
time: 0.003; rss: 1284MB	llvm module passes [41]
time: 0.020; rss: 1284MB	llvm module passes [32]
time: 0.066; rss: 1284MB	llvm function passes [35]
time: 0.047; rss: 1289MB	codegen passes [15]
time: 0.081; rss: 1289MB	llvm function passes [43]
time: 0.030; rss: 1289MB	llvm module passes [35]
time: 0.021; rss: 1289MB	llvm module passes [43]
time: 0.064; rss: 1289MB	llvm module passes [1]
time: 0.090; rss: 1289MB	llvm function passes [45]
time: 0.220; rss: 1295MB	llvm function passes [46]
time: 0.231; rss: 1295MB	llvm function passes [49]
time: 0.003; rss: 1299MB	llvm function passes [11]
time: 0.002; rss: 1299MB	llvm module passes [11]
time: 0.037; rss: 1301MB	llvm module passes [45]
time: 0.143; rss: 1304MB	codegen passes [44]
time: 0.103; rss: 1345MB	llvm function passes [15]
time: 0.223; rss: 1345MB	llvm function passes [2]
time: 0.165; rss: 1347MB	llvm function passes [39]
time: 0.155; rss: 1347MB	llvm function passes [40]
time: 0.036; rss: 1349MB	llvm module passes [15]
time: 0.024; rss: 1350MB	llvm module passes [39]
time: 0.004; rss: 1350MB	llvm function passes [21]
time: 0.250; rss: 1350MB	llvm function passes [34]
time: 0.036; rss: 1350MB	llvm module passes [40]
time: 0.000; rss: 1347MB	llvm function passes [31]
time: 0.000; rss: 1347MB	llvm module passes [31]
time: 0.059; rss: 1347MB	llvm module passes [2]
time: 0.000; rss: 1343MB	codegen passes [30]
time: 0.004; rss: 1343MB	codegen passes [31]
time: 0.015; rss: 1349MB	llvm function passes [29]
time: 0.027; rss: 1352MB	llvm module passes [21]
time: 0.260; rss: 1361MB	llvm function passes [38]
time: 0.140; rss: 1361MB	llvm function passes [14]
time: 0.315; rss: 1369MB	llvm function passes [42]
time: 0.049; rss: 1378MB	llvm module passes [38]
time: 0.106; rss: 1384MB	llvm module passes [29]
time: 0.066; rss: 1384MB	llvm module passes [14]
time: 0.146; rss: 1392MB	llvm function passes [22]
time: 0.245; rss: 1392MB	llvm module passes [46]
time: 0.141; rss: 1392MB	llvm module passes [34]
time: 0.055; rss: 1392MB	llvm module passes [42]
time: 0.251; rss: 1394MB	llvm module passes [49]
time: 0.029; rss: 1396MB	llvm module passes [22]
time: 0.386; rss: 1400MB	llvm function passes [37]
time: 0.284; rss: 1406MB	llvm function passes [13]
time: 0.232; rss: 1400MB	llvm function passes [28]
time: 0.189; rss: 1400MB	codegen passes [21]
time: 0.491; rss: 1399MB	llvm function passes [6]
time: 0.481; rss: 1391MB	llvm function passes [36]
time: 0.331; rss: 1390MB	llvm function passes [44]
time: 0.101; rss: 1390MB	llvm module passes [37]
time: 0.434; rss: 1389MB	llvm function passes [7]
time: 0.105; rss: 1390MB	llvm module passes [13]
time: 0.395; rss: 1397MB	llvm function passes [12]
time: 0.624; rss: 1402MB	llvm function passes [0]
time: 0.441; rss: 1404MB	codegen passes [41]
time: 0.071; rss: 1404MB	llvm module passes [36]
time: 0.130; rss: 1407MB	llvm module passes [28]
time: 0.054; rss: 1406MB	llvm module passes [12]
time: 0.131; rss: 1405MB	llvm module passes [6]
time: 0.143; rss: 1408MB	llvm module passes [44]
time: 0.148; rss: 1404MB	llvm module passes [7]
time: 0.485; rss: 1408MB	llvm function passes [16]
time: 0.705; rss: 1419MB	codegen passes [5]
time: 0.229; rss: 1423MB	codegen passes [11]
time: 0.684; rss: 1435MB	llvm function passes [26]
time: 0.064; rss: 1439MB	llvm module passes [26]
time: 0.461; rss: 1442MB	llvm module passes [0]
time: 0.518; rss: 1457MB	llvm module passes [16]
time: 0.696; rss: 1458MB	codegen passes [29]
time: 1.136; rss: 1491MB	codegen passes [40]
time: 1.515; rss: 1489MB	codegen passes [17]
time: 1.670; rss: 1515MB	codegen passes [3]
time: 1.585; rss: 1505MB	codegen passes [47]
time: 1.640; rss: 1475MB	codegen passes [39]
time: 1.682; rss: 1450MB	codegen passes [32]
time: 2.204; rss: 1489MB	codegen passes [48]
time: 1.818; rss: 1481MB	codegen passes [35]
time: 2.019; rss: 1473MB	codegen passes [15]
time: 1.837; rss: 1470MB	codegen passes [2]
time: 1.790; rss: 1481MB	codegen passes [44]
time: 2.092; rss: 1481MB	codegen passes [14]
time: 2.359; rss: 1505MB	codegen passes [43]
time: 2.514; rss: 1494MB	codegen passes [45]
time: 2.120; rss: 1496MB	codegen passes [22]
time: 2.415; rss: 1506MB	codegen passes [28]
time: 2.648; rss: 1573MB	codegen passes [38]
time: 3.044; rss: 1568MB	codegen passes [4]
time: 3.290; rss: 1616MB	codegen passes [6]
time: 3.430; rss: 1644MB	codegen passes [42]
time: 3.731; rss: 1625MB	codegen passes [34]
time: 3.496; rss: 1604MB	codegen passes [12]
time: 3.619; rss: 1600MB	codegen passes [26]
time: 4.031; rss: 1601MB	codegen passes [1]
time: 4.005; rss: 1568MB	codegen passes [36]
time: 3.856; rss: 1577MB	codegen passes [37]
time: 4.060; rss: 1557MB	codegen passes [13]
time: 3.991; rss: 1538MB	codegen passes [16]
time: 4.475; rss: 1465MB	codegen passes [46]
time: 4.750; rss: 1436MB	codegen passes [49]
time: 5.445; rss: 1399MB	codegen passes [7]
time: 5.836; rss: 1325MB	codegen passes [0]
time: 8.083; rss: 1321MB	LLVM passes
time: 0.000; rss: 1321MB	serialize work products
time: 1.057; rss: 277MB	linking
done
