commit aa7a2e9e61cfb9469c7eb88308fa2e1a087ebdb4
Merge: a274617 5bf4d6f
Author: bors <bors@rust-lang.org>
Date:   Wed Dec 14 00:31:48 2016 +0000

    Auto merge of #38181 - jsgf:test-filter-exact, r=alexcrichton
    
    libtest: add --exact to make filter matching exact
    
    Filter matching is by substring by default. This makes it impossible
    to run a single test if its name is a substring of some other test.
    For example, its not possible to run just `mymod::test` with these
    tests:
    
    ```
      mymod::test
      mymod::test1
      mymod::test_module::moretests
    ```
    
    You could declare by convention that no test has a name that's a
    substring of another test, but that's not really practical.
    
    This PR adds the `--exact` flag, to make filter matching exactly
    match the complete name.
rustc: ./syntex-0.42.2@010-incr
find . -name '*.rs' | xargs touch
RUSTFLAGS="-Z incremental=incr" \
    cargo rustc -p syntex_syntax  -- \
    -Ztime-passes -Zinput-stats -Z incremental-info
time: 0.092; rss: 75MB	parsing
Lines of code:             33687
Pre-expansion node count:  223115
time: 0.000; rss: 75MB	recursion limit
time: 0.000; rss: 75MB	crate injection
time: 0.000; rss: 75MB	plugin loading
time: 0.000; rss: 75MB	plugin registration
time: 0.240; rss: 151MB	expansion
time: 0.000; rss: 151MB	maybe building test harness
time: 0.006; rss: 151MB	maybe creating a macro crate
Post-expansion node count: 638863
time: 0.000; rss: 151MB	checking for inline asm in case the target doesn't support it
time: 0.012; rss: 151MB	complete gated feature checking
time: 0.023; rss: 151MB	early lint checks
time: 0.007; rss: 151MB	AST validation
time: 0.075; rss: 166MB	name resolution
time: 0.058; rss: 199MB	lowering ast -> hir
time: 0.010; rss: 192MB	indexing hir
time: 0.006; rss: 192MB	attribute checking
time: 0.002; rss: 154MB	language item collection
time: 0.011; rss: 156MB	lifetime resolution
time: 0.000; rss: 156MB	looking for entry point
time: 0.000; rss: 156MB	looking for plugin registrar
time: 0.046; rss: 177MB	region resolution
time: 0.008; rss: 177MB	loop checking
time: 0.002; rss: 177MB	static item recursion checking
time: 0.381; rss: 178MB	compute_incremental_hashes_map
time: 0.000; rss: 178MB	load_dep_graph
time: 0.009; rss: 178MB	stability index
time: 0.020; rss: 182MB	stability checking
time: 0.056; rss: 189MB	type collecting
time: 0.004; rss: 189MB	variance inference
time: 0.006; rss: 193MB	impl wf inference
time: 0.026; rss: 197MB	coherence checking
time: 0.087; rss: 199MB	wf checking
time: 0.196; rss: 207MB	item-types checking
time: 3.564; rss: 267MB	item-bodies checking
time: 0.000; rss: 267MB	drop-impl checking
time: 0.218; rss: 277MB	const checking
time: 0.059; rss: 277MB	privacy checking
time: 0.021; rss: 283MB	intrinsic checking
time: 0.017; rss: 283MB	effect checking
time: 0.052; rss: 283MB	match checking
time: 0.051; rss: 290MB	liveness checking
time: 0.183; rss: 292MB	rvalue checking
time: 0.371; rss: 481MB	MIR dump
  time: 0.058; rss: 483MB	SimplifyCfg
  time: 0.076; rss: 483MB	QualifyAndPromoteConstants
  time: 0.124; rss: 500MB	TypeckMir
  time: 0.005; rss: 500MB	SimplifyBranches
  time: 0.032; rss: 500MB	SimplifyCfg
time: 0.294; rss: 500MB	MIR cleanup and validation
time: 0.469; rss: 500MB	borrow checking
time: 0.024; rss: 500MB	reachability checking
time: 0.038; rss: 500MB	death checking
time: 0.000; rss: 500MB	unused lib feature checking
time: 0.177; rss: 500MB	lint checking
time: 0.000; rss: 500MB	resolving dependency formats
  time: 0.004; rss: 500MB	NoLandingPads
  time: 0.028; rss: 500MB	SimplifyCfg
  time: 0.065; rss: 509MB	EraseRegions
  time: 0.011; rss: 509MB	AddCallGuards
  time: 0.272; rss: 528MB	ElaborateDrops
  time: 0.004; rss: 528MB	NoLandingPads
  time: 0.054; rss: 529MB	SimplifyCfg
  time: 0.029; rss: 528MB	InstCombine
  time: 0.013; rss: 528MB	Deaggregator
  time: 0.004; rss: 528MB	CopyPropagation
  time: 0.035; rss: 528MB	SimplifyLocals
  time: 0.010; rss: 528MB	AddCallGuards
  time: 0.003; rss: 528MB	PreTrans
time: 0.531; rss: 528MB	MIR optimisations
  time: 0.067; rss: 538MB	write metadata
  time: 0.402; rss: 551MB	translation item collection
  time: 0.076; rss: 555MB	codegen unit partitioning
  time: 0.048; rss: 1457MB	internalize symbols
time: 11.716; rss: 1457MB	translation
time: 0.000; rss: 1457MB	assert dep graph
time: 1.448; rss: 1485MB	serialize dep graph
incremental: re-using 0 out of 50 modules
time: 0.000; rss: 1195MB	llvm function passes [0]
time: 0.000; rss: 1195MB	llvm module passes [0]
time: 0.001; rss: 1204MB	llvm function passes [2]
time: 0.000; rss: 1204MB	llvm module passes [2]
time: 0.001; rss: 1210MB	llvm function passes [1]
time: 0.000; rss: 1210MB	llvm module passes [1]
time: 0.002; rss: 1214MB	llvm function passes [6]
time: 0.007; rss: 1220MB	llvm function passes [3]
time: 0.000; rss: 1220MB	llvm module passes [3]
time: 0.001; rss: 1223MB	llvm function passes [9]
time: 0.011; rss: 1223MB	llvm function passes [8]
time: 0.006; rss: 1223MB	llvm module passes [8]
time: 0.018; rss: 1223MB	llvm function passes [4]
time: 0.007; rss: 1223MB	llvm module passes [9]
time: 0.018; rss: 1223MB	llvm module passes [6]
time: 0.008; rss: 1223MB	llvm module passes [4]
time: 0.018; rss: 1223MB	llvm function passes [10]
time: 0.034; rss: 1228MB	codegen passes [0]
time: 0.025; rss: 1228MB	llvm function passes [11]
time: 0.033; rss: 1228MB	codegen passes [1]
time: 0.009; rss: 1228MB	llvm module passes [10]
time: 0.036; rss: 1228MB	codegen passes [2]
time: 0.015; rss: 1233MB	llvm module passes [11]
time: 0.017; rss: 1233MB	llvm function passes [2]
time: 0.008; rss: 1241MB	llvm module passes [2]
time: 0.052; rss: 1241MB	codegen passes [9]
time: 0.062; rss: 1244MB	codegen passes [3]
time: 0.000; rss: 1244MB	llvm function passes [3]
time: 0.000; rss: 1244MB	llvm module passes [3]
time: 0.001; rss: 1244MB	codegen passes [3]
time: 0.009; rss: 1255MB	llvm function passes [3]
time: 0.001; rss: 1255MB	llvm module passes [3]
time: 0.090; rss: 1270MB	codegen passes [6]
time: 0.001; rss: 1278MB	llvm function passes [15]
time: 0.000; rss: 1278MB	llvm module passes [15]
time: 0.000; rss: 1278MB	llvm function passes [16]
time: 0.000; rss: 1278MB	llvm module passes [16]
time: 0.086; rss: 1278MB	llvm function passes [0]
time: 0.004; rss: 1278MB	codegen passes [16]
time: 0.058; rss: 1278MB	llvm function passes [9]
time: 0.046; rss: 1278MB	codegen passes [3]
time: 0.017; rss: 1282MB	codegen passes [15]
time: 0.000; rss: 1282MB	llvm function passes [15]
time: 0.000; rss: 1282MB	llvm module passes [15]
time: 0.001; rss: 1282MB	codegen passes [15]
time: 0.148; rss: 1280MB	llvm function passes [7]
time: 0.031; rss: 1279MB	llvm function passes [6]
time: 0.000; rss: 1279MB	llvm module passes [6]
time: 0.021; rss: 1279MB	llvm module passes [9]
time: 0.038; rss: 1279MB	llvm module passes [0]
time: 0.018; rss: 1283MB	codegen passes [6]
time: 0.037; rss: 1283MB	llvm function passes [15]
time: 0.022; rss: 1290MB	llvm module passes [15]
time: 0.121; rss: 1290MB	llvm function passes [13]
time: 0.079; rss: 1297MB	llvm function passes [3]
time: 0.069; rss: 1297MB	llvm module passes [7]
time: 0.018; rss: 1297MB	llvm module passes [13]
time: 0.218; rss: 1297MB	llvm function passes [5]
time: 0.096; rss: 1297MB	llvm function passes [16]
time: 0.151; rss: 1301MB	llvm function passes [14]
time: 0.051; rss: 1317MB	llvm module passes [16]
time: 0.025; rss: 1319MB	llvm function passes [23]
time: 0.012; rss: 1319MB	llvm function passes [24]
time: 0.008; rss: 1323MB	llvm module passes [23]
time: 0.008; rss: 1325MB	llvm module passes [24]
time: 0.077; rss: 1333MB	llvm module passes [14]
time: 0.106; rss: 1333MB	llvm function passes [19]
time: 0.077; rss: 1338MB	llvm function passes [32]
time: 0.028; rss: 1356MB	llvm function passes [20]
time: 0.032; rss: 1358MB	llvm module passes [19]
time: 0.026; rss: 1358MB	llvm function passes [22]
time: 0.012; rss: 1358MB	llvm module passes [20]
time: 0.031; rss: 1362MB	llvm module passes [32]
time: 0.187; rss: 1368MB	llvm function passes [17]
time: 0.012; rss: 1368MB	llvm module passes [22]
time: 0.155; rss: 1374MB	llvm module passes [5]
time: 0.105; rss: 1374MB	llvm function passes [21]
time: 0.003; rss: 1378MB	llvm function passes [30]
time: 0.204; rss: 1380MB	llvm function passes [18]
time: 0.025; rss: 1383MB	llvm module passes [21]
time: 0.016; rss: 1385MB	llvm function passes [37]
time: 0.054; rss: 1384MB	llvm module passes [17]
time: 0.008; rss: 1384MB	llvm module passes [37]
time: 0.104; rss: 1390MB	llvm function passes [25]
time: 0.013; rss: 1390MB	llvm module passes [25]
time: 0.073; rss: 1409MB	llvm module passes [18]
time: 0.112; rss: 1409MB	llvm module passes [30]
time: 0.037; rss: 1410MB	codegen passes [38]
time: 0.370; rss: 1422MB	llvm function passes [6]
time: 0.472; rss: 1420MB	llvm function passes [12]
time: 0.160; rss: 1423MB	llvm function passes [35]
time: 0.012; rss: 1423MB	llvm module passes [35]
time: 0.347; rss: 1428MB	llvm module passes [3]
time: 0.219; rss: 1427MB	llvm function passes [27]
time: 0.246; rss: 1426MB	codegen passes [24]
time: 0.214; rss: 1428MB	llvm function passes [28]
time: 0.184; rss: 1420MB	llvm function passes [33]
time: 0.299; rss: 1409MB	llvm function passes [26]
time: 0.333; rss: 1406MB	llvm function passes [29]
time: 0.061; rss: 1403MB	llvm module passes [28]
time: 0.209; rss: 1402MB	llvm function passes [36]
time: 0.191; rss: 1401MB	codegen passes [37]
time: 0.080; rss: 1401MB	llvm module passes [27]
time: 0.073; rss: 1393MB	llvm module passes [26]
time: 0.059; rss: 1393MB	llvm module passes [36]
time: 0.110; rss: 1401MB	llvm module passes [29]
time: 0.312; rss: 1404MB	llvm function passes [31]
time: 0.756; rss: 1412MB	llvm function passes [1]
time: 0.442; rss: 1412MB	llvm function passes [34]
time: 0.198; rss: 1400MB	llvm module passes [33]
time: 0.707; rss: 1400MB	codegen passes [8]
time: 0.342; rss: 1418MB	llvm module passes [6]
time: 0.167; rss: 1429MB	llvm module passes [31]
time: 0.342; rss: 1429MB	codegen passes [35]
time: 0.310; rss: 1433MB	codegen passes [30]
time: 0.188; rss: 1427MB	llvm module passes [34]
time: 0.225; rss: 1420MB	llvm module passes [1]
time: 0.586; rss: 1448MB	llvm module passes [12]
time: 1.042; rss: 1452MB	codegen passes [2]
time: 1.138; rss: 1457MB	codegen passes [4]
time: 0.804; rss: 1482MB	codegen passes [36]
time: 1.554; rss: 1478MB	codegen passes [10]
time: 1.410; rss: 1488MB	codegen passes [23]
time: 1.550; rss: 1484MB	codegen passes [11]
time: 1.664; rss: 1443MB	codegen passes [9]
time: 1.510; rss: 1434MB	codegen passes [25]
time: 1.677; rss: 1426MB	codegen passes [32]
time: 1.836; rss: 1431MB	codegen passes [15]
time: 1.962; rss: 1420MB	codegen passes [13]
time: 1.714; rss: 1429MB	codegen passes [22]
time: 1.519; rss: 1448MB	codegen passes [31]
time: 2.372; rss: 1484MB	codegen passes [20]
time: 2.250; rss: 1483MB	codegen passes [3]
time: 2.803; rss: 1582MB	codegen passes [16]
time: 2.694; rss: 1572MB	codegen passes [33]
time: 2.976; rss: 1557MB	codegen passes [21]
time: 2.887; rss: 1552MB	codegen passes [19]
time: 3.708; rss: 1596MB	codegen passes [0]
time: 3.253; rss: 1633MB	codegen passes [34]
time: 3.787; rss: 1664MB	codegen passes [14]
time: 3.663; rss: 1670MB	codegen passes [17]
time: 4.109; rss: 1674MB	codegen passes [18]
time: 3.900; rss: 1640MB	codegen passes [7]
time: 4.138; rss: 1607MB	codegen passes [28]
time: 3.697; rss: 1583MB	codegen passes [6]
time: 4.197; rss: 1546MB	codegen passes [27]
time: 4.689; rss: 1526MB	codegen passes [26]
time: 4.582; rss: 1500MB	codegen passes [1]
time: 4.973; rss: 1469MB	codegen passes [29]
time: 5.187; rss: 1397MB	codegen passes [5]
time: 5.610; rss: 1333MB	codegen passes [12]
time: 7.884; rss: 1330MB	LLVM passes
time: 0.000; rss: 1330MB	serialize work products
time: 1.052; rss: 298MB	linking
done
