commit 8327b5afafde7cdd6fd4e939d9a8fe12f76503ef
Merge: d54e723 ff59474
Author: bors <bors@rust-lang.org>
Date:   Sun Dec 18 07:59:32 2016 +0000

    Auto merge of #37429 - camlorn:univariant_layout_optimization, r=eddyb
    
    struct field reordering and optimization
    
    This is work in progress.  The goal is to divorce the order of fields in source code from the order of fields in the LLVM IR, then optimize structs (and tuples/enum variants)by always ordering fields from least to most aligned.  It does not work yet.  I intend to check compiler memory usage as a benchmark, and a crater run will probably be required.
    
    I don't know enough of the compiler to complete this work unaided.  If you see places that still need updating, please mention them.  The only one I know of currently is debuginfo, which I'm putting off intentionally until a bit later.
    
    r? @eddyb
rustc: ./syntex-0.42.2@010-incr
find . -name '*.rs' | xargs touch
RUSTFLAGS="-Z incremental=incr" \
    cargo rustc -p syntex_syntax  -- \
    -Ztime-passes -Zinput-stats -Z incremental-info
time: 0.092; rss: 75MB	parsing
Lines of code:             33687
Pre-expansion node count:  223115
time: 0.000; rss: 75MB	recursion limit
time: 0.000; rss: 75MB	crate injection
time: 0.000; rss: 75MB	plugin loading
time: 0.000; rss: 75MB	plugin registration
time: 0.242; rss: 152MB	expansion
time: 0.000; rss: 152MB	maybe building test harness
time: 0.006; rss: 152MB	maybe creating a macro crate
Post-expansion node count: 638863
time: 0.000; rss: 152MB	checking for inline asm in case the target doesn't support it
time: 0.012; rss: 152MB	complete gated feature checking
time: 0.023; rss: 152MB	early lint checks
time: 0.007; rss: 152MB	AST validation
time: 0.075; rss: 166MB	name resolution
time: 0.059; rss: 200MB	lowering ast -> hir
time: 0.010; rss: 192MB	indexing hir
time: 0.006; rss: 192MB	attribute checking
time: 0.002; rss: 154MB	language item collection
time: 0.011; rss: 156MB	lifetime resolution
time: 0.000; rss: 156MB	looking for entry point
time: 0.000; rss: 156MB	looking for plugin registrar
time: 0.046; rss: 177MB	region resolution
time: 0.008; rss: 177MB	loop checking
time: 0.002; rss: 177MB	static item recursion checking
time: 0.386; rss: 178MB	compute_incremental_hashes_map
time: 0.000; rss: 178MB	load_dep_graph
time: 0.009; rss: 178MB	stability index
time: 0.021; rss: 182MB	stability checking
time: 0.056; rss: 190MB	type collecting
time: 0.004; rss: 190MB	variance inference
time: 0.006; rss: 194MB	impl wf inference
time: 0.026; rss: 198MB	coherence checking
time: 0.089; rss: 200MB	wf checking
time: 0.198; rss: 208MB	item-types checking
time: 3.596; rss: 266MB	item-bodies checking
time: 0.000; rss: 266MB	drop-impl checking
time: 0.216; rss: 277MB	const checking
time: 0.060; rss: 278MB	privacy checking
time: 0.020; rss: 284MB	intrinsic checking
time: 0.014; rss: 284MB	effect checking
time: 0.052; rss: 284MB	match checking
time: 0.051; rss: 290MB	liveness checking
time: 0.181; rss: 293MB	rvalue checking
time: 0.378; rss: 482MB	MIR dump
  time: 0.062; rss: 483MB	SimplifyCfg
  time: 0.082; rss: 484MB	QualifyAndPromoteConstants
  time: 0.125; rss: 500MB	TypeckMir
  time: 0.005; rss: 500MB	SimplifyBranches
  time: 0.031; rss: 500MB	SimplifyCfg
time: 0.379; rss: 500MB	MIR cleanup and validation
time: 0.473; rss: 500MB	borrow checking
time: 0.024; rss: 500MB	reachability checking
time: 0.038; rss: 500MB	death checking
time: 0.000; rss: 500MB	unused lib feature checking
time: 0.176; rss: 500MB	lint checking
time: 0.000; rss: 500MB	resolving dependency formats
  time: 0.004; rss: 500MB	NoLandingPads
  time: 0.027; rss: 500MB	SimplifyCfg
  time: 0.065; rss: 510MB	EraseRegions
  time: 0.011; rss: 510MB	AddCallGuards
  time: 0.271; rss: 529MB	ElaborateDrops
  time: 0.004; rss: 529MB	NoLandingPads
  time: 0.052; rss: 529MB	SimplifyCfg
  time: 0.028; rss: 529MB	InstCombine
  time: 0.013; rss: 529MB	Deaggregator
  time: 0.004; rss: 529MB	CopyPropagation
  time: 0.035; rss: 529MB	SimplifyLocals
  time: 0.010; rss: 529MB	AddCallGuards
  time: 0.003; rss: 529MB	PreTrans
time: 0.525; rss: 529MB	MIR optimisations
  time: 0.066; rss: 538MB	write metadata
  time: 0.391; rss: 551MB	translation item collection
  time: 0.072; rss: 555MB	codegen unit partitioning
  time: 0.048; rss: 1457MB	internalize symbols
time: 12.141; rss: 1457MB	translation
time: 0.000; rss: 1457MB	assert dep graph
time: 1.386; rss: 1485MB	serialize dep graph
incremental: re-using 0 out of 50 modules
time: 0.000; rss: 1199MB	llvm function passes [1]
time: 0.000; rss: 1201MB	llvm module passes [1]
time: 0.001; rss: 1206MB	llvm function passes [0]
time: 0.000; rss: 1206MB	llvm module passes [0]
time: 0.001; rss: 1206MB	llvm function passes [2]
time: 0.000; rss: 1206MB	llvm module passes [2]
time: 0.002; rss: 1206MB	llvm function passes [3]
time: 0.000; rss: 1206MB	llvm module passes [3]
time: 0.002; rss: 1208MB	codegen passes [1]
time: 0.004; rss: 1210MB	llvm function passes [5]
time: 0.001; rss: 1210MB	llvm module passes [5]
time: 0.005; rss: 1210MB	codegen passes [0]
time: 0.001; rss: 1212MB	llvm function passes [0]
time: 0.000; rss: 1212MB	llvm module passes [0]
time: 0.010; rss: 1216MB	llvm function passes [6]
time: 0.008; rss: 1216MB	codegen passes [2]
time: 0.006; rss: 1218MB	llvm module passes [6]
time: 0.018; rss: 1218MB	llvm function passes [4]
time: 0.017; rss: 1225MB	codegen passes [3]
time: 0.015; rss: 1225MB	codegen passes [0]
time: 0.000; rss: 1225MB	llvm function passes [0]
time: 0.000; rss: 1225MB	llvm module passes [0]
time: 0.001; rss: 1225MB	codegen passes [0]
time: 0.008; rss: 1225MB	llvm module passes [4]
time: 0.003; rss: 1229MB	llvm function passes [0]
time: 0.001; rss: 1229MB	llvm module passes [0]
time: 0.001; rss: 1235MB	llvm function passes [21]
time: 0.000; rss: 1235MB	llvm module passes [21]
time: 0.001; rss: 1237MB	llvm function passes [22]
time: 0.000; rss: 1237MB	llvm module passes [22]
time: 0.000; rss: 1245MB	llvm function passes [23]
time: 0.001; rss: 1248MB	llvm module passes [23]
time: 0.000; rss: 1248MB	llvm function passes [26]
time: 0.000; rss: 1248MB	llvm module passes [26]
time: 0.001; rss: 1248MB	codegen passes [26]
time: 0.002; rss: 1248MB	codegen passes [23]
time: 0.062; rss: 1258MB	llvm function passes [2]
time: 0.068; rss: 1258MB	llvm function passes [14]
time: 0.062; rss: 1258MB	llvm function passes [17]
time: 0.014; rss: 1258MB	llvm module passes [14]
time: 0.081; rss: 1262MB	llvm function passes [15]
time: 0.016; rss: 1262MB	llvm module passes [17]
time: 0.067; rss: 1264MB	codegen passes [21]
time: 0.097; rss: 1264MB	codegen passes [5]
time: 0.039; rss: 1264MB	llvm module passes [2]
time: 0.091; rss: 1264MB	llvm function passes [18]
time: 0.024; rss: 1264MB	llvm module passes [15]
time: 0.010; rss: 1264MB	llvm function passes [5]
time: 0.003; rss: 1264MB	llvm module passes [5]
time: 0.082; rss: 1266MB	codegen passes [22]
time: 0.013; rss: 1266MB	llvm module passes [18]
time: 0.132; rss: 1273MB	llvm function passes [1]
time: 0.102; rss: 1275MB	codegen passes [0]
time: 0.045; rss: 1279MB	llvm function passes [21]
time: 0.008; rss: 1283MB	llvm module passes [21]
time: 0.115; rss: 1283MB	llvm function passes [24]
time: 0.031; rss: 1287MB	llvm module passes [24]
time: 0.111; rss: 1289MB	llvm function passes [31]
time: 0.070; rss: 1289MB	llvm module passes [1]
time: 0.158; rss: 1289MB	llvm function passes [25]
time: 0.179; rss: 1289MB	llvm function passes [19]
time: 0.019; rss: 1299MB	llvm module passes [25]
time: 0.019; rss: 1301MB	llvm module passes [19]
time: 0.027; rss: 1301MB	llvm module passes [31]
time: 0.209; rss: 1339MB	llvm function passes [20]
time: 0.198; rss: 1355MB	llvm function passes [26]
time: 0.162; rss: 1358MB	llvm function passes [30]
time: 0.024; rss: 1358MB	llvm module passes [30]
time: 0.064; rss: 1357MB	llvm function passes [33]
time: 0.002; rss: 1357MB	llvm module passes [33]
time: 0.244; rss: 1355MB	llvm function passes [29]
time: 0.099; rss: 1361MB	llvm module passes [20]
time: 0.207; rss: 1361MB	llvm function passes [0]
time: 0.070; rss: 1370MB	llvm function passes [45]
time: 0.205; rss: 1370MB	llvm function passes [32]
time: 0.025; rss: 1370MB	llvm function passes [46]
time: 0.016; rss: 1370MB	llvm function passes [39]
time: 0.000; rss: 1370MB	llvm module passes [39]
time: 0.123; rss: 1370MB	llvm module passes [26]
time: 0.028; rss: 1370MB	llvm module passes [45]
time: 0.070; rss: 1370MB	llvm module passes [29]
time: 0.018; rss: 1370MB	llvm module passes [32]
time: 0.017; rss: 1372MB	llvm module passes [46]
time: 0.023; rss: 1378MB	codegen passes [39]
time: 0.330; rss: 1378MB	llvm function passes [27]
time: 0.113; rss: 1386MB	codegen passes [33]
time: 0.039; rss: 1385MB	codegen passes [12]
time: 0.412; rss: 1385MB	llvm function passes [13]
time: 0.080; rss: 1390MB	llvm module passes [0]
time: 0.424; rss: 1390MB	llvm function passes [16]
time: 0.379; rss: 1390MB	llvm function passes [23]
time: 0.113; rss: 1396MB	llvm function passes [48]
time: 0.058; rss: 1398MB	llvm module passes [27]
time: 0.006; rss: 1398MB	llvm module passes [48]
time: 0.270; rss: 1416MB	llvm function passes [34]
time: 0.432; rss: 1415MB	llvm function passes [28]
time: 0.083; rss: 1420MB	llvm module passes [23]
time: 0.048; rss: 1420MB	llvm module passes [34]
time: 0.278; rss: 1421MB	llvm function passes [38]
time: 0.131; rss: 1423MB	llvm module passes [16]
time: 0.068; rss: 1422MB	llvm module passes [28]
time: 0.030; rss: 1419MB	llvm module passes [38]
time: 0.524; rss: 1444MB	llvm function passes [22]
time: 0.180; rss: 1438MB	codegen passes [48]
time: 0.462; rss: 1438MB	llvm function passes [35]
time: 0.461; rss: 1419MB	llvm function passes [41]
time: 0.474; rss: 1418MB	llvm function passes [43]
time: 0.084; rss: 1409MB	llvm module passes [35]
time: 0.033; rss: 1408MB	llvm module passes [41]
time: 0.795; rss: 1427MB	codegen passes [6]
time: 0.113; rss: 1434MB	llvm module passes [43]
time: 0.190; rss: 1435MB	codegen passes [46]
time: 0.475; rss: 1437MB	llvm module passes [13]
time: 0.644; rss: 1437MB	llvm function passes [37]
time: 0.926; rss: 1426MB	llvm function passes [3]
time: 0.781; rss: 1419MB	codegen passes [5]
time: 0.252; rss: 1419MB	llvm module passes [37]
time: 0.324; rss: 1438MB	llvm module passes [3]
time: 1.129; rss: 1452MB	codegen passes [21]
time: 1.218; rss: 1449MB	codegen passes [4]
time: 0.878; rss: 1442MB	llvm module passes [22]
time: 1.195; rss: 1478MB	codegen passes [45]
time: 1.627; rss: 1442MB	codegen passes [17]
time: 1.575; rss: 1455MB	codegen passes [30]
time: 1.840; rss: 1454MB	codegen passes [18]
time: 1.888; rss: 1453MB	codegen passes [15]
time: 1.586; rss: 1454MB	codegen passes [0]
time: 1.771; rss: 1454MB	codegen passes [14]
time: 1.830; rss: 1473MB	codegen passes [25]
time: 1.971; rss: 1456MB	codegen passes [19]
time: 1.721; rss: 1450MB	codegen passes [41]
time: 2.122; rss: 1472MB	codegen passes [32]
time: 2.308; rss: 1478MB	codegen passes [26]
time: 2.729; rss: 1543MB	codegen passes [31]
time: 2.583; rss: 1528MB	codegen passes [2]
time: 2.448; rss: 1531MB	codegen passes [38]
time: 2.780; rss: 1510MB	codegen passes [24]
time: 2.866; rss: 1527MB	codegen passes [29]
time: 3.683; rss: 1656MB	codegen passes [20]
time: 3.494; rss: 1624MB	codegen passes [34]
time: 3.460; rss: 1581MB	codegen passes [27]
time: 4.077; rss: 1573MB	codegen passes [1]
time: 3.879; rss: 1579MB	codegen passes [23]
time: 3.723; rss: 1591MB	codegen passes [37]
time: 3.758; rss: 1541MB	codegen passes [28]
time: 3.933; rss: 1517MB	codegen passes [35]
time: 4.670; rss: 1528MB	codegen passes [43]
time: 4.724; rss: 1489MB	codegen passes [16]
time: 4.797; rss: 1461MB	codegen passes [22]
time: 4.793; rss: 1400MB	codegen passes [13]
time: 4.648; rss: 1328MB	codegen passes [3]
time: 7.324; rss: 1328MB	LLVM passes
time: 0.000; rss: 1328MB	serialize work products
time: 1.065; rss: 284MB	linking
done
