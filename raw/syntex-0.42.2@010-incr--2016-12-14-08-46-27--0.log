commit 01d53df82ef12625f947f5c0a6004e1aea2f9782
Merge: 5d3ec6b 5e991e0
Author: bors <bors@rust-lang.org>
Date:   Wed Dec 14 09:56:38 2016 +0000

    Auto merge of #38340 - alexcrichton:fix-travis, r=alexcrichton
    
    Fix travis builds
    
    After reading some articles [1] [2] yesterday about Docker and the "init"
    process I got to thinking about the problems that we've been seeing on Travis.
    The basic problem is that a Linux system may need an "init" process to work
    properly when processes become zombies. Docker by default doesn't handle this
    and the root process typically isn't an init process, so this can occasionally
    cause quite a few problems.
    
    We've been seeing spurious errors on Travis inside containers which look like
    OOM and such, but my guess is that zombie processes were being reparented to the
    top-level shell. The shell didn't expect the zombies and then behaved very
    strangely.
    
    This commit fixes these problems by using Yelp's "dumb-init" program [2] as the
    init process in all of our containers. This ensures that there's a valid init
    ready to reap children when they're reparented, which our test suite apparently
    generates a bunch of throughout the tests and such.
    
    [1]: https://blog.phusion.nl/2015/01/20/docker-and-the-pid-1-zombie-reaping-problem/
    [2]: https://engineeringblog.yelp.com/2016/01/dumb-init-an-init-for-docker.html
rustc: ./syntex-0.42.2@010-incr
find . -name '*.rs' | xargs touch
RUSTFLAGS="-Z incremental=incr" \
    cargo rustc -p syntex_syntax  -- \
    -Ztime-passes -Zinput-stats -Z incremental-info
time: 0.092; rss: 75MB	parsing
Lines of code:             33687
Pre-expansion node count:  223115
time: 0.000; rss: 75MB	recursion limit
time: 0.000; rss: 75MB	crate injection
time: 0.000; rss: 75MB	plugin loading
time: 0.000; rss: 75MB	plugin registration
time: 0.248; rss: 152MB	expansion
time: 0.000; rss: 152MB	maybe building test harness
time: 0.007; rss: 152MB	maybe creating a macro crate
Post-expansion node count: 638863
time: 0.000; rss: 152MB	checking for inline asm in case the target doesn't support it
time: 0.013; rss: 152MB	complete gated feature checking
time: 0.025; rss: 152MB	early lint checks
time: 0.008; rss: 152MB	AST validation
time: 0.081; rss: 166MB	name resolution
time: 0.066; rss: 200MB	lowering ast -> hir
time: 0.011; rss: 192MB	indexing hir
time: 0.007; rss: 192MB	attribute checking
time: 0.002; rss: 154MB	language item collection
time: 0.011; rss: 156MB	lifetime resolution
time: 0.000; rss: 156MB	looking for entry point
time: 0.000; rss: 156MB	looking for plugin registrar
time: 0.045; rss: 177MB	region resolution
time: 0.007; rss: 177MB	loop checking
time: 0.002; rss: 177MB	static item recursion checking
time: 0.380; rss: 178MB	compute_incremental_hashes_map
time: 0.000; rss: 178MB	load_dep_graph
time: 0.008; rss: 178MB	stability index
time: 0.021; rss: 182MB	stability checking
time: 0.056; rss: 190MB	type collecting
time: 0.004; rss: 190MB	variance inference
time: 0.006; rss: 193MB	impl wf inference
time: 0.026; rss: 197MB	coherence checking
time: 0.087; rss: 199MB	wf checking
time: 0.196; rss: 207MB	item-types checking
time: 3.591; rss: 266MB	item-bodies checking
time: 0.000; rss: 266MB	drop-impl checking
time: 0.213; rss: 276MB	const checking
time: 0.057; rss: 277MB	privacy checking
time: 0.021; rss: 283MB	intrinsic checking
time: 0.016; rss: 283MB	effect checking
time: 0.049; rss: 283MB	match checking
time: 0.049; rss: 291MB	liveness checking
time: 0.176; rss: 293MB	rvalue checking
time: 0.366; rss: 482MB	MIR dump
  time: 0.056; rss: 483MB	SimplifyCfg
  time: 0.074; rss: 483MB	QualifyAndPromoteConstants
  time: 0.120; rss: 500MB	TypeckMir
  time: 0.004; rss: 500MB	SimplifyBranches
  time: 0.031; rss: 500MB	SimplifyCfg
time: 0.286; rss: 500MB	MIR cleanup and validation
time: 0.467; rss: 500MB	borrow checking
time: 0.024; rss: 500MB	reachability checking
time: 0.038; rss: 500MB	death checking
time: 0.000; rss: 500MB	unused lib feature checking
time: 0.176; rss: 500MB	lint checking
time: 0.000; rss: 500MB	resolving dependency formats
  time: 0.004; rss: 500MB	NoLandingPads
  time: 0.027; rss: 500MB	SimplifyCfg
  time: 0.063; rss: 509MB	EraseRegions
  time: 0.011; rss: 509MB	AddCallGuards
  time: 0.270; rss: 531MB	ElaborateDrops
  time: 0.004; rss: 531MB	NoLandingPads
  time: 0.052; rss: 531MB	SimplifyCfg
  time: 0.028; rss: 531MB	InstCombine
  time: 0.012; rss: 531MB	Deaggregator
  time: 0.003; rss: 531MB	CopyPropagation
  time: 0.034; rss: 531MB	SimplifyLocals
  time: 0.010; rss: 531MB	AddCallGuards
  time: 0.003; rss: 531MB	PreTrans
time: 0.521; rss: 531MB	MIR optimisations
  time: 0.064; rss: 539MB	write metadata
  time: 0.394; rss: 551MB	translation item collection
  time: 0.072; rss: 556MB	codegen unit partitioning
  time: 0.048; rss: 1458MB	internalize symbols
time: 11.621; rss: 1458MB	translation
time: 0.000; rss: 1458MB	assert dep graph
time: 1.359; rss: 1486MB	serialize dep graph
incremental: re-using 0 out of 50 modules
time: 0.000; rss: 1193MB	llvm function passes [2]
time: 0.000; rss: 1196MB	llvm module passes [2]
time: 0.001; rss: 1210MB	llvm function passes [0]
time: 0.000; rss: 1210MB	llvm module passes [0]
time: 0.003; rss: 1215MB	llvm function passes [1]
time: 0.000; rss: 1215MB	llvm module passes [1]
time: 0.003; rss: 1219MB	llvm function passes [6]
time: 0.001; rss: 1221MB	llvm function passes [10]
time: 0.005; rss: 1221MB	llvm function passes [4]
time: 0.000; rss: 1221MB	llvm module passes [4]
time: 0.008; rss: 1225MB	llvm function passes [7]
time: 0.007; rss: 1234MB	llvm module passes [6]
time: 0.006; rss: 1234MB	llvm module passes [10]
time: 0.015; rss: 1236MB	llvm function passes [3]
time: 0.011; rss: 1236MB	llvm function passes [16]
time: 0.007; rss: 1236MB	llvm module passes [3]
time: 0.017; rss: 1236MB	llvm function passes [14]
time: 0.005; rss: 1238MB	llvm module passes [16]
time: 0.021; rss: 1238MB	llvm module passes [7]
time: 0.027; rss: 1238MB	llvm function passes [12]
time: 0.008; rss: 1238MB	llvm module passes [14]
time: 0.014; rss: 1248MB	llvm module passes [12]
time: 0.000; rss: 1248MB	llvm function passes [20]
time: 0.000; rss: 1248MB	llvm module passes [20]
time: 0.057; rss: 1248MB	codegen passes [2]
time: 0.014; rss: 1263MB	codegen passes [20]
time: 0.000; rss: 1263MB	llvm function passes [22]
time: 0.000; rss: 1263MB	llvm function passes [20]
time: 0.000; rss: 1263MB	llvm module passes [20]
time: 0.001; rss: 1267MB	codegen passes [20]
time: 0.009; rss: 1276MB	llvm module passes [22]
time: 0.076; rss: 1276MB	llvm function passes [9]
time: 0.076; rss: 1278MB	llvm function passes [15]
time: 0.032; rss: 1282MB	llvm module passes [15]
time: 0.072; rss: 1284MB	llvm function passes [17]
time: 0.073; rss: 1284MB	llvm function passes [18]
time: 0.001; rss: 1284MB	llvm module passes [18]
time: 0.067; rss: 1284MB	llvm function passes [23]
time: 0.069; rss: 1288MB	llvm function passes [21]
time: 0.000; rss: 1288MB	llvm module passes [21]
time: 0.064; rss: 1290MB	llvm function passes [19]
time: 0.000; rss: 1290MB	llvm module passes [19]
time: 0.019; rss: 1290MB	llvm module passes [17]
time: 0.039; rss: 1300MB	llvm module passes [23]
time: 0.178; rss: 1303MB	llvm function passes [5]
time: 0.109; rss: 1308MB	llvm module passes [9]
time: 0.121; rss: 1308MB	llvm function passes [24]
time: 0.153; rss: 1310MB	llvm function passes [20]
time: 0.032; rss: 1312MB	llvm module passes [24]
time: 0.234; rss: 1312MB	codegen passes [0]
time: 0.101; rss: 1312MB	llvm function passes [28]
time: 0.021; rss: 1312MB	llvm module passes [20]
time: 0.012; rss: 1313MB	llvm function passes [0]
time: 0.246; rss: 1315MB	llvm function passes [8]
time: 0.070; rss: 1315MB	llvm module passes [5]
time: 0.004; rss: 1317MB	llvm module passes [0]
time: 0.195; rss: 1317MB	llvm function passes [2]
time: 0.029; rss: 1321MB	llvm module passes [28]
time: 0.198; rss: 1327MB	llvm function passes [26]
time: 0.266; rss: 1327MB	llvm function passes [13]
time: 0.148; rss: 1331MB	codegen passes [19]
time: 0.287; rss: 1333MB	codegen passes [1]
time: 0.154; rss: 1333MB	codegen passes [21]
time: 0.204; rss: 1336MB	llvm function passes [27]
time: 0.307; rss: 1338MB	codegen passes [10]
time: 0.317; rss: 1349MB	codegen passes [4]
time: 0.055; rss: 1349MB	llvm module passes [26]
time: 0.050; rss: 1351MB	llvm function passes [1]
time: 0.050; rss: 1351MB	llvm function passes [21]
time: 0.198; rss: 1352MB	codegen passes [18]
time: 0.276; rss: 1354MB	codegen passes [22]
time: 0.030; rss: 1354MB	llvm function passes [4]
time: 0.002; rss: 1354MB	llvm module passes [4]
time: 0.276; rss: 1354MB	llvm function passes [25]
time: 0.016; rss: 1354MB	llvm module passes [21]
time: 0.049; rss: 1367MB	llvm module passes [1]
time: 0.148; rss: 1367MB	llvm module passes [8]
time: 0.242; rss: 1367MB	llvm function passes [29]
time: 0.152; rss: 1375MB	llvm module passes [13]
time: 0.175; rss: 1377MB	llvm module passes [2]
time: 0.035; rss: 1377MB	llvm module passes [29]
time: 0.420; rss: 1375MB	codegen passes [6]
time: 0.091; rss: 1374MB	llvm module passes [25]
time: 0.092; rss: 1374MB	codegen passes [4]
time: 0.086; rss: 1376MB	llvm function passes [33]
time: 0.066; rss: 1383MB	llvm function passes [34]
time: 0.029; rss: 1383MB	llvm module passes [33]
time: 0.043; rss: 1389MB	llvm function passes [4]
time: 0.191; rss: 1388MB	llvm module passes [27]
time: 0.013; rss: 1392MB	llvm function passes [36]
time: 0.034; rss: 1401MB	llvm module passes [34]
time: 0.016; rss: 1401MB	llvm module passes [36]
time: 0.033; rss: 1404MB	llvm module passes [4]
time: 0.075; rss: 1409MB	llvm function passes [35]
time: 0.037; rss: 1406MB	codegen passes [36]
time: 0.022; rss: 1405MB	llvm module passes [35]
time: 0.230; rss: 1402MB	llvm function passes [22]
time: 0.080; rss: 1403MB	codegen passes [37]
time: 0.255; rss: 1406MB	llvm function passes [32]
time: 0.301; rss: 1404MB	llvm function passes [10]
time: 0.269; rss: 1405MB	llvm function passes [18]
time: 0.252; rss: 1405MB	llvm function passes [31]
time: 0.075; rss: 1390MB	llvm module passes [22]
time: 0.338; rss: 1385MB	codegen passes [0]
time: 0.067; rss: 1388MB	llvm module passes [32]
time: 0.654; rss: 1388MB	llvm function passes [11]
time: 0.049; rss: 1394MB	llvm module passes [31]
time: 0.086; rss: 1379MB	llvm module passes [10]
time: 0.292; rss: 1384MB	llvm function passes [6]
time: 0.446; rss: 1387MB	llvm function passes [19]
time: 0.149; rss: 1400MB	llvm module passes [18]
time: 0.597; rss: 1403MB	llvm function passes [30]
time: 0.239; rss: 1402MB	codegen passes [4]
time: 0.038; rss: 1403MB	llvm module passes [30]
time: 0.189; rss: 1414MB	codegen passes [35]
time: 0.822; rss: 1410MB	codegen passes [7]
time: 0.181; rss: 1412MB	llvm module passes [6]
time: 0.392; rss: 1434MB	llvm module passes [19]
time: 0.778; rss: 1438MB	codegen passes [3]
time: 0.678; rss: 1462MB	llvm module passes [11]
time: 1.235; rss: 1448MB	codegen passes [16]
time: 1.023; rss: 1420MB	codegen passes [15]
time: 0.870; rss: 1416MB	codegen passes [31]
time: 1.462; rss: 1406MB	codegen passes [14]
time: 1.618; rss: 1445MB	codegen passes [29]
time: 1.796; rss: 1466MB	codegen passes [12]
time: 1.816; rss: 1458MB	codegen passes [23]
time: 1.898; rss: 1448MB	codegen passes [17]
time: 1.896; rss: 1443MB	codegen passes [1]
time: 2.282; rss: 1486MB	codegen passes [21]
time: 1.939; rss: 1491MB	codegen passes [18]
time: 2.220; rss: 1484MB	codegen passes [33]
time: 2.591; rss: 1503MB	codegen passes [20]
time: 2.390; rss: 1501MB	codegen passes [34]
time: 2.580; rss: 1557MB	codegen passes [24]
time: 2.365; rss: 1543MB	codegen passes [30]
time: 3.344; rss: 1627MB	codegen passes [28]
time: 3.382; rss: 1607MB	codegen passes [9]
time: 3.733; rss: 1614MB	codegen passes [2]
time: 3.464; rss: 1636MB	codegen passes [26]
time: 3.710; rss: 1687MB	codegen passes [6]
time: 3.959; rss: 1678MB	codegen passes [32]
time: 4.366; rss: 1666MB	codegen passes [25]
time: 4.222; rss: 1603MB	codegen passes [27]
time: 4.378; rss: 1564MB	codegen passes [5]
time: 4.564; rss: 1539MB	codegen passes [22]
time: 4.390; rss: 1491MB	codegen passes [10]
time: 4.932; rss: 1474MB	codegen passes [13]
time: 4.656; rss: 1458MB	codegen passes [19]
time: 5.210; rss: 1383MB	codegen passes [8]
time: 5.184; rss: 1321MB	codegen passes [11]
time: 7.847; rss: 1320MB	LLVM passes
time: 0.000; rss: 1320MB	serialize work products
time: 1.057; rss: 287MB	linking
done
