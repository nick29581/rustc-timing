commit 3db197aa9d343c7974b06a9b18ae5f78d5c64637
Merge: 6d5ec58 fbc3f11
Author: bors <bors@rust-lang.org>
Date:   Sun Dec 11 21:19:34 2016 +0000

    Auto merge of #38265 - bluss:mir-deaggregator-loop, r=nagisa
    
    Reinstate while loop in deaggregator pass
    
    A previous commit must have removed the `while let` loop here by
    mistake; for each basic block, it should find and deaggregate multiple
    statements in their index order, and the `curr` index tracks the
    progress through the block.
    
    This fixes both the case of deaggregating statements in separate
    basic blocks (preserving `curr` could prevent that) as well
    as multiple times in the same block (missing loop prevented that).
    
    The loop was lost in commit bda46c21fe30377b9587b584c64ffe99da6c14ce.
rustc: ./syntex-0.42.2@010-incr
find . -name '*.rs' | xargs touch
RUSTFLAGS="-Z incremental=incr" \
    cargo rustc -p syntex_syntax  -- \
    -Ztime-passes -Zinput-stats -Z incremental-info
time: 0.092; rss: 75MB	parsing
Lines of code:             33687
Pre-expansion node count:  223115
time: 0.000; rss: 75MB	recursion limit
time: 0.000; rss: 75MB	crate injection
time: 0.000; rss: 75MB	plugin loading
time: 0.000; rss: 75MB	plugin registration
time: 0.251; rss: 152MB	expansion
time: 0.000; rss: 152MB	maybe building test harness
time: 0.007; rss: 152MB	maybe creating a macro crate
Post-expansion node count: 638863
time: 0.000; rss: 152MB	checking for inline asm in case the target doesn't support it
time: 0.014; rss: 152MB	complete gated feature checking
time: 0.024; rss: 152MB	early lint checks
time: 0.007; rss: 152MB	AST validation
time: 0.076; rss: 166MB	name resolution
time: 0.059; rss: 200MB	lowering ast -> hir
time: 0.010; rss: 192MB	indexing hir
time: 0.006; rss: 192MB	attribute checking
time: 0.002; rss: 154MB	language item collection
time: 0.011; rss: 156MB	lifetime resolution
time: 0.000; rss: 156MB	looking for entry point
time: 0.000; rss: 156MB	looking for plugin registrar
time: 0.047; rss: 177MB	region resolution
time: 0.008; rss: 177MB	loop checking
time: 0.002; rss: 177MB	static item recursion checking
time: 0.381; rss: 178MB	compute_incremental_hashes_map
time: 0.000; rss: 178MB	load_dep_graph
time: 0.009; rss: 178MB	stability index
time: 0.021; rss: 182MB	stability checking
time: 0.056; rss: 190MB	type collecting
time: 0.004; rss: 190MB	variance inference
time: 0.006; rss: 194MB	impl wf inference
time: 0.026; rss: 197MB	coherence checking
time: 0.087; rss: 200MB	wf checking
time: 0.198; rss: 208MB	item-types checking
time: 3.828; rss: 266MB	item-bodies checking
time: 0.000; rss: 266MB	drop-impl checking
time: 0.217; rss: 277MB	const checking
time: 0.059; rss: 278MB	privacy checking
time: 0.019; rss: 284MB	intrinsic checking
time: 0.014; rss: 284MB	effect checking
time: 0.049; rss: 284MB	match checking
time: 0.047; rss: 291MB	liveness checking
time: 0.181; rss: 293MB	rvalue checking
time: 0.503; rss: 474MB	MIR dump
  time: 0.059; rss: 479MB	SimplifyCfg
  time: 0.076; rss: 479MB	QualifyAndPromoteConstants
  time: 0.179; rss: 496MB	TypeckMir
  time: 0.005; rss: 496MB	SimplifyBranches
  time: 0.033; rss: 496MB	SimplifyCfg
time: 0.352; rss: 496MB	MIR cleanup and validation
time: 0.489; rss: 498MB	borrow checking
time: 0.024; rss: 498MB	reachability checking
time: 0.039; rss: 498MB	death checking
time: 0.000; rss: 498MB	unused lib feature checking
time: 0.178; rss: 498MB	lint checking
time: 0.000; rss: 498MB	resolving dependency formats
  time: 0.004; rss: 498MB	NoLandingPads
  time: 0.027; rss: 498MB	SimplifyCfg
  time: 0.065; rss: 507MB	EraseRegions
  time: 0.011; rss: 507MB	AddCallGuards
  time: 0.304; rss: 526MB	ElaborateDrops
  time: 0.004; rss: 526MB	NoLandingPads
  time: 0.054; rss: 525MB	SimplifyCfg
  time: 0.030; rss: 525MB	InstCombine
  time: 0.012; rss: 525MB	Deaggregator
  time: 0.004; rss: 525MB	CopyPropagation
  time: 0.036; rss: 525MB	SimplifyLocals
  time: 0.010; rss: 525MB	AddCallGuards
  time: 0.003; rss: 525MB	PreTrans
time: 0.565; rss: 525MB	MIR optimisations
  time: 0.086; rss: 533MB	write metadata
  time: 0.425; rss: 546MB	translation item collection
  time: 0.072; rss: 550MB	codegen unit partitioning
  time: 0.053; rss: 1445MB	internalize symbols
time: 13.952; rss: 1445MB	translation
time: 0.000; rss: 1445MB	assert dep graph
time: 2.423; rss: 1474MB	serialize dep graph
incremental: re-using 0 out of 50 modules
time: 0.000; rss: 1188MB	llvm function passes [1]
time: 0.000; rss: 1190MB	llvm module passes [1]
time: 0.001; rss: 1197MB	llvm function passes [0]
time: 0.000; rss: 1199MB	llvm module passes [0]
time: 0.002; rss: 1205MB	llvm function passes [2]
time: 0.000; rss: 1205MB	llvm module passes [2]
time: 0.002; rss: 1205MB	llvm function passes [3]
time: 0.000; rss: 1205MB	llvm module passes [3]
time: 0.004; rss: 1205MB	llvm function passes [4]
time: 0.001; rss: 1218MB	llvm function passes [9]
time: 0.007; rss: 1220MB	codegen passes [1]
time: 0.000; rss: 1220MB	llvm module passes [9]
time: 0.010; rss: 1220MB	llvm function passes [7]
time: 0.012; rss: 1220MB	llvm function passes [5]
time: 0.010; rss: 1220MB	llvm module passes [4]
time: 0.006; rss: 1222MB	llvm module passes [5]
time: 0.017; rss: 1224MB	llvm module passes [7]
time: 0.034; rss: 1226MB	codegen passes [0]
time: 0.000; rss: 1228MB	llvm function passes [13]
time: 0.000; rss: 1228MB	llvm module passes [13]
time: 0.001; rss: 1228MB	codegen passes [13]
time: 0.003; rss: 1228MB	llvm function passes [13]
time: 0.001; rss: 1228MB	llvm module passes [13]
time: 0.041; rss: 1228MB	llvm function passes [11]
time: 0.015; rss: 1230MB	llvm module passes [11]
time: 0.046; rss: 1242MB	llvm function passes [16]
time: 0.073; rss: 1242MB	codegen passes [2]
time: 0.000; rss: 1242MB	llvm function passes [2]
time: 0.000; rss: 1242MB	llvm module passes [2]
time: 0.060; rss: 1248MB	llvm function passes [15]
time: 0.009; rss: 1257MB	codegen passes [2]
time: 0.079; rss: 1257MB	llvm function passes [12]
time: 0.012; rss: 1257MB	llvm module passes [16]
time: 0.001; rss: 1257MB	llvm function passes [2]
time: 0.000; rss: 1257MB	llvm module passes [2]
time: 0.009; rss: 1257MB	llvm module passes [12]
time: 0.008; rss: 1257MB	codegen passes [2]
time: 0.000; rss: 1257MB	llvm function passes [2]
time: 0.000; rss: 1257MB	llvm module passes [2]
time: 0.092; rss: 1257MB	codegen passes [9]
time: 0.096; rss: 1257MB	codegen passes [3]
time: 0.088; rss: 1258MB	codegen passes [4]
time: 0.000; rss: 1258MB	llvm function passes [4]
time: 0.000; rss: 1258MB	llvm module passes [4]
time: 0.009; rss: 1258MB	codegen passes [2]
time: 0.001; rss: 1258MB	codegen passes [4]
time: 0.032; rss: 1258MB	llvm module passes [15]
time: 0.074; rss: 1264MB	llvm function passes [14]
time: 0.142; rss: 1264MB	llvm function passes [1]
time: 0.049; rss: 1264MB	llvm function passes [2]
time: 0.164; rss: 1264MB	llvm function passes [6]
time: 0.033; rss: 1263MB	llvm module passes [14]
time: 0.022; rss: 1263MB	llvm module passes [2]
time: 0.081; rss: 1263MB	llvm function passes [9]
time: 0.044; rss: 1264MB	llvm module passes [1]
time: 0.032; rss: 1264MB	llvm module passes [9]
time: 0.223; rss: 1264MB	llvm function passes [10]
time: 0.143; rss: 1264MB	llvm function passes [3]
time: 0.091; rss: 1265MB	llvm module passes [6]
time: 0.214; rss: 1269MB	codegen passes [13]
time: 0.202; rss: 1270MB	llvm function passes [17]
time: 0.018; rss: 1270MB	llvm function passes [13]
time: 0.004; rss: 1269MB	llvm module passes [13]
time: 0.071; rss: 1270MB	llvm module passes [3]
time: 0.185; rss: 1271MB	llvm function passes [18]
time: 0.248; rss: 1274MB	llvm function passes [19]
time: 0.008; rss: 1280MB	llvm function passes [36]
time: 0.006; rss: 1280MB	llvm module passes [36]
time: 0.118; rss: 1280MB	llvm function passes [25]
time: 0.018; rss: 1282MB	llvm function passes [37]
time: 0.052; rss: 1280MB	llvm function passes [29]
time: 0.140; rss: 1282MB	llvm function passes [21]
time: 0.122; rss: 1282MB	llvm module passes [18]
time: 0.437; rss: 1283MB	llvm function passes [8]
time: 0.055; rss: 1284MB	llvm module passes [25]
time: 0.051; rss: 1285MB	llvm module passes [29]
time: 0.026; rss: 1285MB	llvm function passes [35]
time: 0.007; rss: 1286MB	llvm module passes [35]
time: 0.147; rss: 1286MB	llvm function passes [22]
time: 0.094; rss: 1286MB	llvm function passes [31]
time: 0.035; rss: 1287MB	codegen passes [38]
time: 0.086; rss: 1287MB	llvm module passes [37]
time: 0.398; rss: 1287MB	llvm function passes [4]
time: 0.017; rss: 1291MB	codegen passes [35]
time: 0.110; rss: 1289MB	llvm function passes [33]
time: 0.075; rss: 1290MB	llvm module passes [22]
time: 0.146; rss: 1290MB	llvm module passes [21]
time: 0.024; rss: 1290MB	llvm module passes [33]
time: 0.311; rss: 1292MB	llvm function passes [20]
time: 0.323; rss: 1294MB	llvm function passes [23]
time: 0.197; rss: 1295MB	llvm function passes [27]
time: 0.103; rss: 1295MB	llvm module passes [31]
time: 0.239; rss: 1297MB	codegen passes [36]
time: 0.633; rss: 1299MB	llvm function passes [0]
time: 0.239; rss: 1300MB	llvm function passes [30]
time: 0.109; rss: 1301MB	llvm module passes [20]
time: 0.328; rss: 1304MB	llvm module passes [19]
time: 0.300; rss: 1308MB	llvm function passes [34]
time: 0.462; rss: 1308MB	llvm module passes [17]
time: 0.175; rss: 1312MB	llvm module passes [23]
time: 0.543; rss: 1312MB	llvm module passes [10]
time: 0.272; rss: 1312MB	llvm module passes [4]
time: 0.202; rss: 1314MB	llvm module passes [27]
time: 0.283; rss: 1319MB	codegen passes [29]
time: 0.707; rss: 1321MB	codegen passes [7]
time: 0.509; rss: 1325MB	llvm function passes [26]
time: 0.181; rss: 1325MB	llvm module passes [30]
time: 0.471; rss: 1323MB	llvm function passes [28]
time: 0.447; rss: 1325MB	llvm module passes [8]
time: 0.503; rss: 1325MB	llvm function passes [32]
time: 0.606; rss: 1333MB	llvm function passes [24]
time: 0.251; rss: 1340MB	llvm module passes [34]
time: 0.671; rss: 1344MB	codegen passes [13]
time: 0.230; rss: 1351MB	llvm module passes [26]
time: 0.339; rss: 1361MB	llvm module passes [28]
time: 0.437; rss: 1370MB	llvm module passes [32]
time: 0.724; rss: 1376MB	llvm module passes [0]
time: 1.275; rss: 1381MB	codegen passes [5]
time: 1.286; rss: 1386MB	codegen passes [12]
time: 1.443; rss: 1382MB	codegen passes [15]
time: 1.110; rss: 1377MB	codegen passes [37]
time: 0.774; rss: 1381MB	llvm module passes [24]
time: 1.394; rss: 1415MB	codegen passes [22]
time: 1.858; rss: 1444MB	codegen passes [31]
time: 1.756; rss: 1428MB	codegen passes [21]
time: 1.840; rss: 1418MB	codegen passes [25]
time: 1.977; rss: 1416MB	codegen passes [16]
time: 2.274; rss: 1415MB	codegen passes [11]
time: 2.418; rss: 1450MB	codegen passes [14]
time: 2.689; rss: 1425MB	codegen passes [2]
time: 2.677; rss: 1426MB	codegen passes [3]
time: 2.339; rss: 1435MB	codegen passes [33]
time: 2.132; rss: 1431MB	codegen passes [30]
time: 2.169; rss: 1426MB	codegen passes [27]
time: 2.858; rss: 1509MB	codegen passes [23]
time: 2.558; rss: 1487MB	codegen passes [20]
time: 3.544; rss: 1540MB	codegen passes [1]
time: 3.448; rss: 1545MB	codegen passes [9]
time: 3.734; rss: 1598MB	codegen passes [4]
time: 3.714; rss: 1572MB	codegen passes [17]
time: 3.675; rss: 1613MB	codegen passes [28]
time: 4.402; rss: 1626MB	codegen passes [6]
time: 4.258; rss: 1594MB	codegen passes [18]
time: 4.112; rss: 1532MB	codegen passes [19]
time: 4.065; rss: 1505MB	codegen passes [34]
time: 4.382; rss: 1577MB	codegen passes [32]
time: 4.412; rss: 1521MB	codegen passes [26]
time: 5.134; rss: 1479MB	codegen passes [8]
time: 4.856; rss: 1424MB	codegen passes [10]
time: 4.854; rss: 1380MB	codegen passes [24]
time: 4.852; rss: 1298MB	codegen passes [0]
time: 8.347; rss: 1296MB	LLVM passes
time: 0.000; rss: 1296MB	serialize work products
time: 1.053; rss: 271MB	linking
done
