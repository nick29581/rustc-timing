commit 01d53df82ef12625f947f5c0a6004e1aea2f9782
Merge: 5d3ec6b 5e991e0
Author: bors <bors@rust-lang.org>
Date:   Wed Dec 14 09:56:38 2016 +0000

    Auto merge of #38340 - alexcrichton:fix-travis, r=alexcrichton
    
    Fix travis builds
    
    After reading some articles [1] [2] yesterday about Docker and the "init"
    process I got to thinking about the problems that we've been seeing on Travis.
    The basic problem is that a Linux system may need an "init" process to work
    properly when processes become zombies. Docker by default doesn't handle this
    and the root process typically isn't an init process, so this can occasionally
    cause quite a few problems.
    
    We've been seeing spurious errors on Travis inside containers which look like
    OOM and such, but my guess is that zombie processes were being reparented to the
    top-level shell. The shell didn't expect the zombies and then behaved very
    strangely.
    
    This commit fixes these problems by using Yelp's "dumb-init" program [2] as the
    init process in all of our containers. This ensures that there's a valid init
    ready to reap children when they're reparented, which our test suite apparently
    generates a bunch of throughout the tests and such.
    
    [1]: https://blog.phusion.nl/2015/01/20/docker-and-the-pid-1-zombie-reaping-problem/
    [2]: https://engineeringblog.yelp.com/2016/01/dumb-init-an-init-for-docker.html
rustc: ./syntex-0.42.2@010-incr
find . -name '*.rs' | xargs touch
RUSTFLAGS="-Z incremental=incr" \
    cargo rustc -p syntex_syntax  -- \
    -Ztime-passes -Zinput-stats -Z incremental-info
time: 0.092; rss: 75MB	parsing
Lines of code:             33687
Pre-expansion node count:  223115
time: 0.000; rss: 75MB	recursion limit
time: 0.000; rss: 75MB	crate injection
time: 0.000; rss: 75MB	plugin loading
time: 0.000; rss: 75MB	plugin registration
time: 0.242; rss: 151MB	expansion
time: 0.000; rss: 151MB	maybe building test harness
time: 0.006; rss: 151MB	maybe creating a macro crate
Post-expansion node count: 638863
time: 0.000; rss: 151MB	checking for inline asm in case the target doesn't support it
time: 0.012; rss: 151MB	complete gated feature checking
time: 0.023; rss: 151MB	early lint checks
time: 0.007; rss: 151MB	AST validation
time: 0.075; rss: 166MB	name resolution
time: 0.059; rss: 200MB	lowering ast -> hir
time: 0.010; rss: 192MB	indexing hir
time: 0.006; rss: 192MB	attribute checking
time: 0.002; rss: 154MB	language item collection
time: 0.011; rss: 156MB	lifetime resolution
time: 0.000; rss: 156MB	looking for entry point
time: 0.000; rss: 156MB	looking for plugin registrar
time: 0.046; rss: 177MB	region resolution
time: 0.008; rss: 177MB	loop checking
time: 0.002; rss: 177MB	static item recursion checking
time: 0.381; rss: 178MB	compute_incremental_hashes_map
time: 0.000; rss: 178MB	load_dep_graph
time: 0.009; rss: 178MB	stability index
time: 0.021; rss: 181MB	stability checking
time: 0.057; rss: 190MB	type collecting
time: 0.004; rss: 190MB	variance inference
time: 0.006; rss: 193MB	impl wf inference
time: 0.026; rss: 197MB	coherence checking
time: 0.090; rss: 200MB	wf checking
time: 0.198; rss: 208MB	item-types checking
time: 3.626; rss: 265MB	item-bodies checking
time: 0.000; rss: 265MB	drop-impl checking
time: 0.223; rss: 276MB	const checking
time: 0.069; rss: 277MB	privacy checking
time: 0.021; rss: 283MB	intrinsic checking
time: 0.016; rss: 283MB	effect checking
time: 0.050; rss: 283MB	match checking
time: 0.050; rss: 290MB	liveness checking
time: 0.180; rss: 292MB	rvalue checking
time: 0.374; rss: 482MB	MIR dump
  time: 0.062; rss: 483MB	SimplifyCfg
  time: 0.081; rss: 483MB	QualifyAndPromoteConstants
  time: 0.128; rss: 500MB	TypeckMir
  time: 0.005; rss: 500MB	SimplifyBranches
  time: 0.034; rss: 500MB	SimplifyCfg
time: 0.310; rss: 500MB	MIR cleanup and validation
time: 0.479; rss: 501MB	borrow checking
time: 0.026; rss: 501MB	reachability checking
time: 0.044; rss: 501MB	death checking
time: 0.000; rss: 501MB	unused lib feature checking
time: 0.180; rss: 501MB	lint checking
time: 0.000; rss: 501MB	resolving dependency formats
  time: 0.004; rss: 501MB	NoLandingPads
  time: 0.028; rss: 501MB	SimplifyCfg
  time: 0.066; rss: 509MB	EraseRegions
  time: 0.011; rss: 509MB	AddCallGuards
  time: 0.274; rss: 529MB	ElaborateDrops
  time: 0.004; rss: 529MB	NoLandingPads
  time: 0.054; rss: 529MB	SimplifyCfg
  time: 0.029; rss: 528MB	InstCombine
  time: 0.013; rss: 528MB	Deaggregator
  time: 0.004; rss: 528MB	CopyPropagation
  time: 0.036; rss: 528MB	SimplifyLocals
  time: 0.010; rss: 528MB	AddCallGuards
  time: 0.003; rss: 528MB	PreTrans
time: 0.536; rss: 528MB	MIR optimisations
  time: 0.068; rss: 538MB	write metadata
  time: 0.395; rss: 551MB	translation item collection
  time: 0.073; rss: 555MB	codegen unit partitioning
  time: 0.049; rss: 1457MB	internalize symbols
time: 11.785; rss: 1457MB	translation
time: 0.000; rss: 1457MB	assert dep graph
time: 1.377; rss: 1485MB	serialize dep graph
incremental: re-using 0 out of 50 modules
time: 0.000; rss: 1200MB	llvm function passes [0]
time: 0.000; rss: 1202MB	llvm module passes [0]
time: 0.001; rss: 1204MB	llvm function passes [1]
time: 0.000; rss: 1204MB	llvm module passes [1]
time: 0.001; rss: 1204MB	llvm function passes [2]
time: 0.000; rss: 1204MB	llvm module passes [2]
time: 0.002; rss: 1204MB	llvm function passes [4]
time: 0.001; rss: 1204MB	codegen passes [0]
time: 0.000; rss: 1206MB	llvm module passes [4]
time: 0.004; rss: 1212MB	llvm function passes [5]
time: 0.005; rss: 1212MB	codegen passes [1]
time: 0.001; rss: 1212MB	llvm module passes [5]
time: 0.001; rss: 1212MB	llvm function passes [1]
time: 0.000; rss: 1212MB	llvm module passes [1]
time: 0.008; rss: 1214MB	codegen passes [2]
time: 0.011; rss: 1214MB	llvm function passes [0]
time: 0.017; rss: 1214MB	llvm function passes [3]
time: 0.006; rss: 1216MB	llvm module passes [0]
time: 0.018; rss: 1218MB	codegen passes [4]
time: 0.015; rss: 1218MB	codegen passes [1]
time: 0.008; rss: 1218MB	llvm module passes [3]
time: 0.026; rss: 1226MB	llvm function passes [2]
time: 0.026; rss: 1230MB	llvm function passes [8]
time: 0.000; rss: 1236MB	llvm function passes [12]
time: 0.000; rss: 1236MB	llvm module passes [12]
time: 0.001; rss: 1236MB	codegen passes [12]
time: 0.008; rss: 1233MB	llvm module passes [8]
time: 0.016; rss: 1233MB	llvm module passes [2]
time: 0.001; rss: 1243MB	llvm function passes [15]
time: 0.000; rss: 1243MB	llvm module passes [15]
time: 0.001; rss: 1245MB	llvm function passes [16]
time: 0.000; rss: 1245MB	llvm module passes [16]
time: 0.059; rss: 1247MB	codegen passes [5]
time: 0.000; rss: 1247MB	llvm function passes [17]
time: 0.000; rss: 1247MB	llvm module passes [17]
time: 0.000; rss: 1254MB	llvm function passes [20]
time: 0.000; rss: 1254MB	llvm module passes [20]
time: 0.001; rss: 1254MB	codegen passes [20]
time: 0.035; rss: 1256MB	llvm function passes [12]
time: 0.001; rss: 1256MB	llvm module passes [12]
time: 0.019; rss: 1256MB	codegen passes [17]
time: 0.073; rss: 1262MB	llvm function passes [9]
time: 0.072; rss: 1262MB	llvm function passes [10]
time: 0.008; rss: 1262MB	llvm module passes [9]
time: 0.056; rss: 1265MB	codegen passes [15]
time: 0.012; rss: 1265MB	llvm module passes [10]
time: 0.056; rss: 1265MB	llvm function passes [18]
time: 0.112; rss: 1265MB	llvm function passes [4]
time: 0.009; rss: 1267MB	llvm module passes [18]
time: 0.082; rss: 1277MB	codegen passes [16]
time: 0.013; rss: 1290MB	llvm function passes [16]
time: 0.004; rss: 1290MB	llvm module passes [16]
time: 0.129; rss: 1293MB	llvm function passes [13]
time: 0.064; rss: 1293MB	llvm function passes [15]
time: 0.015; rss: 1295MB	llvm module passes [13]
time: 0.120; rss: 1295MB	llvm function passes [20]
time: 0.223; rss: 1299MB	llvm function passes [7]
time: 0.050; rss: 1299MB	llvm module passes [15]
time: 0.096; rss: 1301MB	llvm function passes [21]
time: 0.042; rss: 1303MB	llvm module passes [20]
time: 0.155; rss: 1305MB	codegen passes [12]
time: 0.194; rss: 1304MB	llvm function passes [14]
time: 0.064; rss: 1299MB	llvm function passes [23]
time: 0.113; rss: 1308MB	llvm function passes [24]
time: 0.013; rss: 1308MB	llvm module passes [23]
time: 0.027; rss: 1308MB	llvm module passes [21]
time: 0.019; rss: 1307MB	llvm module passes [24]
time: 0.292; rss: 1307MB	llvm function passes [6]
time: 0.069; rss: 1307MB	llvm module passes [7]
time: 0.278; rss: 1357MB	llvm function passes [1]
time: 0.156; rss: 1359MB	llvm function passes [25]
time: 0.079; rss: 1365MB	llvm module passes [14]
time: 0.027; rss: 1367MB	llvm module passes [25]
time: 0.203; rss: 1367MB	llvm module passes [4]
time: 0.262; rss: 1373MB	llvm function passes [19]
time: 0.004; rss: 1375MB	llvm function passes [39]
time: 0.012; rss: 1380MB	llvm module passes [39]
time: 0.081; rss: 1380MB	llvm function passes [27]
time: 0.002; rss: 1380MB	llvm module passes [27]
time: 0.265; rss: 1386MB	llvm function passes [22]
time: 0.323; rss: 1388MB	llvm function passes [17]
time: 0.053; rss: 1388MB	llvm module passes [19]
time: 0.039; rss: 1390MB	codegen passes [35]
time: 0.366; rss: 1393MB	llvm function passes [5]
time: 0.053; rss: 1401MB	codegen passes [27]
time: 0.037; rss: 1399MB	llvm function passes [40]
time: 0.000; rss: 1399MB	llvm module passes [40]
time: 0.159; rss: 1401MB	llvm module passes [1]
time: 0.070; rss: 1404MB	llvm module passes [22]
time: 0.188; rss: 1404MB	llvm module passes [6]
time: 0.098; rss: 1410MB	codegen passes [39]
time: 0.076; rss: 1410MB	llvm module passes [17]
time: 0.147; rss: 1413MB	llvm function passes [38]
time: 0.016; rss: 1413MB	llvm module passes [38]
time: 0.227; rss: 1414MB	llvm function passes [28]
time: 0.094; rss: 1413MB	codegen passes [40]
time: 0.176; rss: 1419MB	llvm function passes [34]
time: 0.053; rss: 1413MB	llvm module passes [28]
time: 0.232; rss: 1408MB	llvm function passes [37]
time: 0.339; rss: 1408MB	llvm function passes [29]
time: 0.045; rss: 1404MB	llvm module passes [34]
time: 0.019; rss: 1403MB	llvm module passes [29]
time: 0.460; rss: 1404MB	llvm function passes [26]
time: 0.617; rss: 1409MB	llvm function passes [11]
time: 0.227; rss: 1409MB	llvm module passes [5]
time: 0.294; rss: 1418MB	llvm function passes [31]
time: 0.321; rss: 1418MB	llvm function passes [32]
time: 0.116; rss: 1421MB	llvm module passes [26]
time: 0.715; rss: 1423MB	codegen passes [0]
time: 0.070; rss: 1421MB	llvm module passes [32]
time: 0.372; rss: 1416MB	llvm function passes [33]
time: 0.129; rss: 1420MB	llvm module passes [31]
time: 0.292; rss: 1441MB	llvm module passes [37]
time: 0.203; rss: 1455MB	llvm module passes [33]
time: 0.764; rss: 1460MB	llvm function passes [12]
time: 0.723; rss: 1458MB	codegen passes [16]
time: 1.026; rss: 1471MB	codegen passes [3]
time: 0.501; rss: 1480MB	llvm module passes [11]
time: 0.471; rss: 1472MB	codegen passes [34]
time: 1.267; rss: 1473MB	codegen passes [9]
time: 0.589; rss: 1474MB	llvm module passes [12]
time: 1.064; rss: 1472MB	codegen passes [24]
time: 1.556; rss: 1480MB	codegen passes [8]
time: 1.610; rss: 1467MB	codegen passes [2]
time: 1.556; rss: 1460MB	codegen passes [10]
time: 1.640; rss: 1460MB	codegen passes [21]
time: 1.111; rss: 1463MB	codegen passes [31]
time: 1.592; rss: 1461MB	codegen passes [29]
time: 1.981; rss: 1470MB	codegen passes [13]
time: 2.019; rss: 1469MB	codegen passes [23]
time: 1.931; rss: 1462MB	codegen passes [38]
time: 2.182; rss: 1454MB	codegen passes [18]
time: 2.177; rss: 1448MB	codegen passes [20]
time: 2.229; rss: 1536MB	codegen passes [32]
time: 2.672; rss: 1520MB	codegen passes [25]
time: 2.633; rss: 1558MB	codegen passes [15]
time: 2.702; rss: 1569MB	codegen passes [5]
time: 2.766; rss: 1546MB	codegen passes [4]
time: 3.413; rss: 1629MB	codegen passes [19]
time: 3.291; rss: 1622MB	codegen passes [28]
time: 3.483; rss: 1629MB	codegen passes [14]
time: 3.816; rss: 1712MB	codegen passes [22]
time: 4.385; rss: 1690MB	codegen passes [7]
time: 3.582; rss: 1652MB	codegen passes [33]
time: 4.467; rss: 1613MB	codegen passes [17]
time: 3.571; rss: 1610MB	codegen passes [12]
time: 4.455; rss: 1573MB	codegen passes [37]
time: 4.539; rss: 1529MB	codegen passes [1]
time: 4.943; rss: 1510MB	codegen passes [6]
time: 5.270; rss: 1424MB	codegen passes [26]
time: 4.941; rss: 1358MB	codegen passes [11]
time: 7.471; rss: 1357MB	LLVM passes
time: 0.000; rss: 1357MB	serialize work products
time: 1.179; rss: 298MB	linking
done
