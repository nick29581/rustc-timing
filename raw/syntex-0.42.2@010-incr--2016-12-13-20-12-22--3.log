commit aa7a2e9e61cfb9469c7eb88308fa2e1a087ebdb4
Merge: a274617 5bf4d6f
Author: bors <bors@rust-lang.org>
Date:   Wed Dec 14 00:31:48 2016 +0000

    Auto merge of #38181 - jsgf:test-filter-exact, r=alexcrichton
    
    libtest: add --exact to make filter matching exact
    
    Filter matching is by substring by default. This makes it impossible
    to run a single test if its name is a substring of some other test.
    For example, its not possible to run just `mymod::test` with these
    tests:
    
    ```
      mymod::test
      mymod::test1
      mymod::test_module::moretests
    ```
    
    You could declare by convention that no test has a name that's a
    substring of another test, but that's not really practical.
    
    This PR adds the `--exact` flag, to make filter matching exactly
    match the complete name.
rustc: ./syntex-0.42.2@010-incr
find . -name '*.rs' | xargs touch
RUSTFLAGS="-Z incremental=incr" \
    cargo rustc -p syntex_syntax  -- \
    -Ztime-passes -Zinput-stats -Z incremental-info
time: 0.092; rss: 75MB	parsing
Lines of code:             33687
Pre-expansion node count:  223115
time: 0.000; rss: 75MB	recursion limit
time: 0.000; rss: 75MB	crate injection
time: 0.000; rss: 75MB	plugin loading
time: 0.000; rss: 75MB	plugin registration
time: 0.240; rss: 151MB	expansion
time: 0.000; rss: 151MB	maybe building test harness
time: 0.006; rss: 151MB	maybe creating a macro crate
Post-expansion node count: 638863
time: 0.000; rss: 151MB	checking for inline asm in case the target doesn't support it
time: 0.012; rss: 151MB	complete gated feature checking
time: 0.023; rss: 151MB	early lint checks
time: 0.007; rss: 151MB	AST validation
time: 0.075; rss: 166MB	name resolution
time: 0.058; rss: 199MB	lowering ast -> hir
time: 0.009; rss: 192MB	indexing hir
time: 0.006; rss: 192MB	attribute checking
time: 0.002; rss: 154MB	language item collection
time: 0.011; rss: 156MB	lifetime resolution
time: 0.000; rss: 156MB	looking for entry point
time: 0.000; rss: 156MB	looking for plugin registrar
time: 0.045; rss: 177MB	region resolution
time: 0.007; rss: 177MB	loop checking
time: 0.002; rss: 177MB	static item recursion checking
time: 0.381; rss: 178MB	compute_incremental_hashes_map
time: 0.000; rss: 178MB	load_dep_graph
time: 0.009; rss: 178MB	stability index
time: 0.020; rss: 181MB	stability checking
time: 0.056; rss: 190MB	type collecting
time: 0.003; rss: 190MB	variance inference
time: 0.006; rss: 193MB	impl wf inference
time: 0.026; rss: 197MB	coherence checking
time: 0.088; rss: 200MB	wf checking
time: 0.197; rss: 208MB	item-types checking
time: 3.576; rss: 267MB	item-bodies checking
time: 0.000; rss: 267MB	drop-impl checking
time: 0.219; rss: 276MB	const checking
time: 0.066; rss: 277MB	privacy checking
time: 0.021; rss: 283MB	intrinsic checking
time: 0.016; rss: 283MB	effect checking
time: 0.049; rss: 283MB	match checking
time: 0.049; rss: 290MB	liveness checking
time: 0.176; rss: 292MB	rvalue checking
time: 0.361; rss: 481MB	MIR dump
  time: 0.056; rss: 483MB	SimplifyCfg
  time: 0.074; rss: 483MB	QualifyAndPromoteConstants
  time: 0.120; rss: 500MB	TypeckMir
  time: 0.004; rss: 500MB	SimplifyBranches
  time: 0.032; rss: 500MB	SimplifyCfg
time: 0.287; rss: 500MB	MIR cleanup and validation
time: 0.478; rss: 500MB	borrow checking
time: 0.024; rss: 500MB	reachability checking
time: 0.038; rss: 500MB	death checking
time: 0.000; rss: 500MB	unused lib feature checking
time: 0.183; rss: 500MB	lint checking
time: 0.000; rss: 500MB	resolving dependency formats
  time: 0.004; rss: 500MB	NoLandingPads
  time: 0.027; rss: 500MB	SimplifyCfg
  time: 0.064; rss: 509MB	EraseRegions
  time: 0.011; rss: 509MB	AddCallGuards
  time: 0.271; rss: 529MB	ElaborateDrops
  time: 0.004; rss: 529MB	NoLandingPads
  time: 0.052; rss: 529MB	SimplifyCfg
  time: 0.028; rss: 528MB	InstCombine
  time: 0.012; rss: 528MB	Deaggregator
  time: 0.004; rss: 528MB	CopyPropagation
  time: 0.035; rss: 528MB	SimplifyLocals
  time: 0.010; rss: 528MB	AddCallGuards
  time: 0.003; rss: 528MB	PreTrans
time: 0.524; rss: 528MB	MIR optimisations
  time: 0.064; rss: 537MB	write metadata
  time: 0.392; rss: 549MB	translation item collection
  time: 0.073; rss: 554MB	codegen unit partitioning
  time: 0.048; rss: 1457MB	internalize symbols
time: 11.779; rss: 1457MB	translation
time: 0.000; rss: 1457MB	assert dep graph
time: 1.429; rss: 1485MB	serialize dep graph
incremental: re-using 0 out of 50 modules
time: 0.000; rss: 1196MB	llvm function passes [1]
time: 0.000; rss: 1196MB	llvm module passes [1]
time: 0.001; rss: 1207MB	llvm function passes [0]
time: 0.000; rss: 1207MB	llvm module passes [0]
time: 0.001; rss: 1211MB	llvm function passes [3]
time: 0.000; rss: 1211MB	llvm module passes [3]
time: 0.002; rss: 1213MB	llvm function passes [4]
time: 0.000; rss: 1213MB	llvm module passes [4]
time: 0.002; rss: 1213MB	codegen passes [1]
time: 0.004; rss: 1218MB	llvm function passes [5]
time: 0.001; rss: 1218MB	llvm function passes [21]
time: 0.001; rss: 1220MB	llvm module passes [21]
time: 0.011; rss: 1222MB	llvm function passes [20]
time: 0.008; rss: 1222MB	llvm module passes [5]
time: 0.013; rss: 1222MB	codegen passes [0]
time: 0.018; rss: 1222MB	llvm function passes [2]
time: 0.018; rss: 1226MB	codegen passes [3]
time: 0.010; rss: 1226MB	llvm module passes [20]
time: 0.009; rss: 1226MB	llvm module passes [2]
time: 0.026; rss: 1234MB	llvm function passes [19]
time: 0.000; rss: 1234MB	llvm function passes [22]
time: 0.000; rss: 1234MB	llvm module passes [22]
time: 0.002; rss: 1238MB	codegen passes [22]
time: 0.013; rss: 1245MB	llvm function passes [16]
time: 0.014; rss: 1245MB	llvm module passes [19]
time: 0.037; rss: 1249MB	codegen passes [21]
time: 0.000; rss: 1251MB	llvm function passes [11]
time: 0.008; rss: 1256MB	llvm module passes [16]
time: 0.013; rss: 1258MB	llvm module passes [11]
time: 0.000; rss: 1258MB	llvm function passes [10]
time: 0.000; rss: 1258MB	llvm module passes [10]
time: 0.050; rss: 1258MB	llvm function passes [0]
time: 0.004; rss: 1258MB	codegen passes [11]
time: 0.001; rss: 1258MB	codegen passes [10]
time: 0.009; rss: 1260MB	llvm module passes [0]
time: 0.063; rss: 1264MB	llvm function passes [18]
time: 0.090; rss: 1272MB	codegen passes [4]
time: 0.064; rss: 1272MB	llvm function passes [24]
time: 0.001; rss: 1272MB	llvm module passes [24]
time: 0.012; rss: 1272MB	llvm module passes [18]
time: 0.077; rss: 1276MB	llvm function passes [17]
time: 0.071; rss: 1277MB	llvm function passes [14]
time: 0.000; rss: 1277MB	llvm module passes [14]
time: 0.097; rss: 1277MB	llvm function passes [13]
time: 0.097; rss: 1288MB	llvm function passes [15]
time: 0.000; rss: 1288MB	llvm module passes [15]
time: 0.016; rss: 1288MB	llvm module passes [13]
time: 0.142; rss: 1292MB	codegen passes [5]
time: 0.097; rss: 1292MB	llvm function passes [12]
time: 0.058; rss: 1303MB	codegen passes [14]
time: 0.011; rss: 1303MB	llvm module passes [12]
time: 0.017; rss: 1303MB	llvm function passes [5]
time: 0.038; rss: 1309MB	codegen passes [15]
time: 0.008; rss: 1309MB	llvm module passes [5]
time: 0.161; rss: 1322MB	llvm function passes [21]
time: 0.042; rss: 1321MB	llvm function passes [14]
time: 0.112; rss: 1325MB	llvm module passes [17]
time: 0.185; rss: 1325MB	llvm function passes [22]
time: 0.221; rss: 1325MB	llvm function passes [23]
time: 0.130; rss: 1327MB	codegen passes [24]
time: 0.032; rss: 1327MB	llvm module passes [21]
time: 0.028; rss: 1327MB	llvm module passes [14]
time: 0.193; rss: 1329MB	llvm function passes [11]
time: 0.095; rss: 1329MB	llvm function passes [29]
time: 0.004; rss: 1328MB	llvm module passes [29]
time: 0.163; rss: 1328MB	llvm function passes [9]
time: 0.046; rss: 1342MB	llvm module passes [11]
time: 0.038; rss: 1342MB	llvm module passes [9]
time: 0.311; rss: 1342MB	llvm function passes [1]
time: 0.117; rss: 1350MB	llvm module passes [22]
time: 0.235; rss: 1354MB	llvm function passes [8]
time: 0.149; rss: 1354MB	llvm function passes [27]
time: 0.013; rss: 1366MB	llvm module passes [27]
time: 0.152; rss: 1370MB	llvm module passes [23]
time: 0.305; rss: 1371MB	llvm function passes [25]
time: 0.055; rss: 1377MB	llvm module passes [8]
time: 0.318; rss: 1381MB	llvm function passes [7]
time: 0.201; rss: 1382MB	llvm function passes [28]
time: 0.042; rss: 1382MB	llvm function passes [33]
time: 0.285; rss: 1384MB	llvm function passes [26]
time: 0.044; rss: 1380MB	llvm module passes [33]
time: 0.378; rss: 1384MB	llvm function passes [4]
time: 0.004; rss: 1384MB	llvm function passes [35]
time: 0.070; rss: 1384MB	llvm module passes [7]
time: 0.267; rss: 1386MB	llvm function passes [30]
time: 0.002; rss: 1386MB	llvm module passes [30]
time: 0.419; rss: 1386MB	llvm function passes [10]
time: 0.096; rss: 1387MB	llvm module passes [25]
time: 0.033; rss: 1387MB	llvm module passes [35]
time: 0.110; rss: 1384MB	llvm module passes [28]
time: 0.210; rss: 1384MB	llvm module passes [1]
time: 0.210; rss: 1384MB	llvm function passes [32]
time: 0.061; rss: 1387MB	llvm module passes [4]
time: 0.053; rss: 1388MB	llvm module passes [10]
time: 0.307; rss: 1388MB	llvm function passes [24]
time: 0.030; rss: 1393MB	codegen passes [38]
time: 0.039; rss: 1394MB	llvm function passes [36]
time: 0.005; rss: 1393MB	llvm module passes [36]
time: 0.042; rss: 1391MB	llvm function passes [37]
time: 0.124; rss: 1391MB	llvm module passes [26]
time: 0.010; rss: 1391MB	llvm module passes [37]
time: 0.404; rss: 1392MB	llvm function passes [15]
time: 0.363; rss: 1392MB	codegen passes [29]
time: 0.670; rss: 1394MB	llvm function passes [3]
time: 0.059; rss: 1395MB	codegen passes [37]
time: 0.679; rss: 1390MB	llvm function passes [6]
time: 0.186; rss: 1390MB	llvm module passes [24]
time: 0.168; rss: 1394MB	codegen passes [30]
time: 0.233; rss: 1394MB	llvm module passes [32]
time: 0.132; rss: 1401MB	llvm module passes [3]
time: 0.252; rss: 1404MB	codegen passes [35]
time: 0.758; rss: 1413MB	codegen passes [20]
time: 0.544; rss: 1421MB	llvm function passes [31]
time: 0.479; rss: 1416MB	llvm function passes [34]
time: 0.512; rss: 1422MB	llvm module passes [15]
time: 0.239; rss: 1424MB	llvm module passes [34]
time: 0.392; rss: 1425MB	llvm module passes [31]
time: 1.051; rss: 1437MB	codegen passes [16]
time: 0.696; rss: 1429MB	llvm module passes [6]
time: 0.976; rss: 1434MB	codegen passes [2]
time: 1.236; rss: 1458MB	codegen passes [0]
time: 1.092; rss: 1457MB	codegen passes [36]
time: 1.338; rss: 1469MB	codegen passes [5]
time: 1.580; rss: 1480MB	codegen passes [18]
time: 1.560; rss: 1455MB	codegen passes [9]
time: 1.679; rss: 1459MB	codegen passes [19]
time: 1.715; rss: 1435MB	codegen passes [27]
time: 1.958; rss: 1435MB	codegen passes [13]
time: 1.881; rss: 1425MB	codegen passes [11]
time: 2.015; rss: 1415MB	codegen passes [12]
time: 2.289; rss: 1436MB	codegen passes [14]
time: 2.474; rss: 1469MB	codegen passes [33]
time: 2.157; rss: 1482MB	codegen passes [24]
time: 3.107; rss: 1620MB	codegen passes [4]
time: 3.013; rss: 1635MB	codegen passes [32]
time: 3.224; rss: 1635MB	codegen passes [8]
time: 3.319; rss: 1606MB	codegen passes [17]
time: 3.313; rss: 1587MB	codegen passes [21]
time: 3.670; rss: 1659MB	codegen passes [10]
time: 4.015; rss: 1630MB	codegen passes [28]
time: 3.832; rss: 1616MB	codegen passes [23]
time: 3.724; rss: 1602MB	codegen passes [22]
time: 4.184; rss: 1625MB	codegen passes [25]
time: 3.966; rss: 1579MB	codegen passes [7]
time: 4.065; rss: 1576MB	codegen passes [31]
time: 3.840; rss: 1516MB	codegen passes [15]
time: 4.157; rss: 1492MB	codegen passes [34]
time: 4.291; rss: 1474MB	codegen passes [3]
time: 4.739; rss: 1446MB	codegen passes [1]
time: 5.739; rss: 1398MB	codegen passes [26]
time: 5.671; rss: 1328MB	codegen passes [6]
time: 8.157; rss: 1325MB	LLVM passes
time: 0.000; rss: 1325MB	serialize work products
time: 1.057; rss: 295MB	linking
done
