commit 8327b5afafde7cdd6fd4e939d9a8fe12f76503ef
Merge: d54e723 ff59474
Author: bors <bors@rust-lang.org>
Date:   Sun Dec 18 07:59:32 2016 +0000

    Auto merge of #37429 - camlorn:univariant_layout_optimization, r=eddyb
    
    struct field reordering and optimization
    
    This is work in progress.  The goal is to divorce the order of fields in source code from the order of fields in the LLVM IR, then optimize structs (and tuples/enum variants)by always ordering fields from least to most aligned.  It does not work yet.  I intend to check compiler memory usage as a benchmark, and a crater run will probably be required.
    
    I don't know enough of the compiler to complete this work unaided.  If you see places that still need updating, please mention them.  The only one I know of currently is debuginfo, which I'm putting off intentionally until a bit later.
    
    r? @eddyb
rustc: ./syntex-0.42.2@010-incr
find . -name '*.rs' | xargs touch
RUSTFLAGS="-Z incremental=incr" \
    cargo rustc -p syntex_syntax  -- \
    -Ztime-passes -Zinput-stats -Z incremental-info
time: 0.091; rss: 75MB	parsing
Lines of code:             33687
Pre-expansion node count:  223115
time: 0.000; rss: 75MB	recursion limit
time: 0.000; rss: 75MB	crate injection
time: 0.000; rss: 75MB	plugin loading
time: 0.000; rss: 75MB	plugin registration
time: 0.240; rss: 151MB	expansion
time: 0.000; rss: 151MB	maybe building test harness
time: 0.006; rss: 151MB	maybe creating a macro crate
Post-expansion node count: 638863
time: 0.000; rss: 151MB	checking for inline asm in case the target doesn't support it
time: 0.012; rss: 151MB	complete gated feature checking
time: 0.023; rss: 151MB	early lint checks
time: 0.007; rss: 151MB	AST validation
time: 0.075; rss: 166MB	name resolution
time: 0.058; rss: 200MB	lowering ast -> hir
time: 0.010; rss: 192MB	indexing hir
time: 0.006; rss: 192MB	attribute checking
time: 0.002; rss: 154MB	language item collection
time: 0.011; rss: 156MB	lifetime resolution
time: 0.000; rss: 156MB	looking for entry point
time: 0.000; rss: 156MB	looking for plugin registrar
time: 0.045; rss: 177MB	region resolution
time: 0.007; rss: 177MB	loop checking
time: 0.002; rss: 177MB	static item recursion checking
time: 0.381; rss: 178MB	compute_incremental_hashes_map
time: 0.000; rss: 178MB	load_dep_graph
time: 0.009; rss: 178MB	stability index
time: 0.020; rss: 182MB	stability checking
time: 0.055; rss: 190MB	type collecting
time: 0.004; rss: 190MB	variance inference
time: 0.006; rss: 193MB	impl wf inference
time: 0.026; rss: 197MB	coherence checking
time: 0.089; rss: 200MB	wf checking
time: 0.197; rss: 208MB	item-types checking
time: 3.584; rss: 268MB	item-bodies checking
time: 0.000; rss: 268MB	drop-impl checking
time: 0.214; rss: 277MB	const checking
time: 0.057; rss: 277MB	privacy checking
time: 0.021; rss: 284MB	intrinsic checking
time: 0.016; rss: 284MB	effect checking
time: 0.049; rss: 284MB	match checking
time: 0.049; rss: 290MB	liveness checking
time: 0.178; rss: 293MB	rvalue checking
time: 0.374; rss: 482MB	MIR dump
  time: 0.057; rss: 483MB	SimplifyCfg
  time: 0.075; rss: 483MB	QualifyAndPromoteConstants
  time: 0.121; rss: 500MB	TypeckMir
  time: 0.004; rss: 500MB	SimplifyBranches
  time: 0.033; rss: 500MB	SimplifyCfg
time: 0.290; rss: 500MB	MIR cleanup and validation
time: 0.479; rss: 500MB	borrow checking
time: 0.025; rss: 500MB	reachability checking
time: 0.038; rss: 500MB	death checking
time: 0.000; rss: 500MB	unused lib feature checking
time: 0.181; rss: 500MB	lint checking
time: 0.000; rss: 500MB	resolving dependency formats
  time: 0.004; rss: 500MB	NoLandingPads
  time: 0.028; rss: 500MB	SimplifyCfg
  time: 0.064; rss: 509MB	EraseRegions
  time: 0.011; rss: 509MB	AddCallGuards
  time: 0.271; rss: 529MB	ElaborateDrops
  time: 0.003; rss: 529MB	NoLandingPads
  time: 0.053; rss: 529MB	SimplifyCfg
  time: 0.028; rss: 529MB	InstCombine
  time: 0.012; rss: 528MB	Deaggregator
  time: 0.004; rss: 528MB	CopyPropagation
  time: 0.034; rss: 528MB	SimplifyLocals
  time: 0.010; rss: 528MB	AddCallGuards
  time: 0.003; rss: 528MB	PreTrans
time: 0.526; rss: 528MB	MIR optimisations
  time: 0.076; rss: 537MB	write metadata
  time: 0.400; rss: 550MB	translation item collection
  time: 0.075; rss: 554MB	codegen unit partitioning
  time: 0.048; rss: 1457MB	internalize symbols
time: 11.956; rss: 1457MB	translation
time: 0.000; rss: 1457MB	assert dep graph
time: 1.386; rss: 1485MB	serialize dep graph
incremental: re-using 0 out of 50 modules
time: 0.000; rss: 1193MB	llvm function passes [1]
time: 0.000; rss: 1195MB	llvm module passes [1]
time: 0.001; rss: 1201MB	llvm function passes [2]
time: 0.000; rss: 1205MB	llvm module passes [2]
time: 0.001; rss: 1210MB	llvm function passes [0]
time: 0.000; rss: 1210MB	llvm module passes [0]
time: 0.004; rss: 1216MB	llvm function passes [5]
time: 0.005; rss: 1216MB	llvm function passes [3]
time: 0.000; rss: 1216MB	llvm module passes [3]
time: 0.009; rss: 1222MB	codegen passes [1]
time: 0.005; rss: 1222MB	llvm module passes [5]
time: 0.009; rss: 1222MB	llvm function passes [6]
time: 0.011; rss: 1222MB	codegen passes [2]
time: 0.006; rss: 1222MB	llvm module passes [6]
time: 0.024; rss: 1222MB	llvm function passes [4]
time: 0.001; rss: 1222MB	llvm function passes [9]
time: 0.018; rss: 1231MB	llvm function passes [2]
time: 0.008; rss: 1231MB	llvm module passes [4]
time: 0.024; rss: 1231MB	llvm function passes [1]
time: 0.008; rss: 1233MB	llvm module passes [2]
time: 0.010; rss: 1235MB	llvm module passes [9]
time: 0.013; rss: 1241MB	llvm function passes [11]
time: 0.048; rss: 1241MB	codegen passes [3]
time: 0.000; rss: 1246MB	llvm function passes [13]
time: 0.000; rss: 1246MB	llvm module passes [13]
time: 0.027; rss: 1246MB	codegen passes [9]
time: 0.016; rss: 1246MB	llvm module passes [11]
time: 0.001; rss: 1255MB	codegen passes [13]
time: 0.068; rss: 1255MB	codegen passes [0]
time: 0.039; rss: 1255MB	llvm module passes [1]
time: 0.000; rss: 1259MB	llvm function passes [15]
time: 0.000; rss: 1259MB	llvm module passes [15]
time: 0.080; rss: 1266MB	codegen passes [5]
time: 0.001; rss: 1266MB	llvm function passes [5]
time: 0.000; rss: 1266MB	llvm module passes [5]
time: 0.000; rss: 1270MB	llvm function passes [16]
time: 0.000; rss: 1270MB	llvm module passes [16]
time: 0.016; rss: 1270MB	codegen passes [15]
time: 0.004; rss: 1270MB	codegen passes [16]
time: 0.035; rss: 1274MB	llvm function passes [13]
time: 0.008; rss: 1274MB	codegen passes [5]
time: 0.000; rss: 1274MB	llvm function passes [5]
time: 0.000; rss: 1274MB	llvm module passes [5]
time: 0.001; rss: 1274MB	codegen passes [5]
time: 0.043; rss: 1278MB	llvm function passes [9]
time: 0.082; rss: 1278MB	llvm function passes [10]
time: 0.001; rss: 1278MB	llvm module passes [9]
time: 0.016; rss: 1282MB	llvm module passes [13]
time: 0.152; rss: 1289MB	llvm function passes [7]
time: 0.067; rss: 1291MB	llvm function passes [16]
time: 0.092; rss: 1300MB	llvm function passes [15]
time: 0.078; rss: 1300MB	llvm module passes [10]
time: 0.140; rss: 1303MB	llvm function passes [3]
time: 0.030; rss: 1305MB	llvm module passes [16]
time: 0.096; rss: 1312MB	codegen passes [9]
time: 0.128; rss: 1312MB	llvm function passes [5]
time: 0.241; rss: 1316MB	llvm function passes [8]
time: 0.013; rss: 1316MB	llvm function passes [23]
time: 0.102; rss: 1318MB	llvm module passes [7]
time: 0.228; rss: 1318MB	llvm function passes [12]
time: 0.194; rss: 1318MB	llvm function passes [0]
time: 0.070; rss: 1320MB	llvm module passes [3]
time: 0.020; rss: 1320MB	llvm module passes [23]
time: 0.065; rss: 1320MB	llvm function passes [21]
time: 0.071; rss: 1321MB	llvm function passes [20]
time: 0.091; rss: 1324MB	llvm module passes [15]
time: 0.011; rss: 1328MB	llvm module passes [21]
time: 0.018; rss: 1328MB	llvm function passes [24]
time: 0.004; rss: 1328MB	llvm module passes [24]
time: 0.033; rss: 1340MB	llvm module passes [20]
time: 0.025; rss: 1347MB	llvm function passes [25]
time: 0.221; rss: 1351MB	llvm function passes [17]
time: 0.013; rss: 1351MB	llvm module passes [25]
time: 0.115; rss: 1356MB	llvm module passes [5]
time: 0.130; rss: 1382MB	llvm module passes [12]
time: 0.054; rss: 1382MB	llvm module passes [17]
time: 0.002; rss: 1384MB	llvm function passes [28]
time: 0.001; rss: 1384MB	llvm module passes [28]
time: 0.248; rss: 1384MB	llvm function passes [19]
time: 0.270; rss: 1384MB	llvm function passes [18]
time: 0.169; rss: 1384MB	llvm module passes [8]
time: 0.074; rss: 1391MB	llvm module passes [18]
time: 0.218; rss: 1390MB	llvm function passes [22]
time: 0.098; rss: 1392MB	codegen passes [28]
time: 0.126; rss: 1392MB	llvm function passes [26]
time: 0.104; rss: 1392MB	llvm module passes [19]
time: 0.020; rss: 1396MB	llvm module passes [26]
time: 0.473; rss: 1396MB	llvm function passes [14]
time: 0.092; rss: 1406MB	llvm function passes [32]
time: 0.017; rss: 1423MB	llvm function passes [35]
time: 0.000; rss: 1429MB	codegen passes [37]
time: 0.172; rss: 1431MB	llvm function passes [29]
time: 0.206; rss: 1432MB	llvm function passes [27]
time: 0.016; rss: 1430MB	llvm module passes [35]
time: 0.026; rss: 1430MB	llvm function passes [36]
time: 0.121; rss: 1430MB	llvm module passes [22]
time: 0.060; rss: 1428MB	llvm function passes [34]
time: 0.003; rss: 1428MB	llvm module passes [34]
time: 0.297; rss: 1426MB	codegen passes [24]
time: 0.194; rss: 1426MB	llvm function passes [30]
time: 0.029; rss: 1426MB	llvm module passes [36]
time: 0.066; rss: 1426MB	llvm module passes [29]
time: 0.075; rss: 1423MB	llvm module passes [27]
time: 0.452; rss: 1423MB	llvm function passes [9]
time: 0.112; rss: 1422MB	llvm module passes [32]
time: 0.003; rss: 1423MB	codegen passes [36]
time: 0.471; rss: 1420MB	llvm module passes [0]
time: 0.099; rss: 1420MB	llvm module passes [30]
time: 0.217; rss: 1421MB	llvm function passes [33]
time: 0.116; rss: 1427MB	llvm module passes [9]
time: 0.054; rss: 1436MB	llvm module passes [33]
time: 0.325; rss: 1439MB	llvm function passes [28]
time: 0.792; rss: 1437MB	codegen passes [6]
time: 0.132; rss: 1453MB	llvm module passes [28]
time: 0.538; rss: 1456MB	llvm function passes [31]
time: 0.401; rss: 1463MB	codegen passes [34]
time: 1.039; rss: 1460MB	codegen passes [2]
time: 1.217; rss: 1485MB	codegen passes [11]
time: 0.390; rss: 1470MB	llvm module passes [31]
time: 0.884; rss: 1481MB	llvm module passes [14]
time: 1.277; rss: 1461MB	codegen passes [4]
time: 1.118; rss: 1475MB	codegen passes [23]
time: 0.969; rss: 1476MB	codegen passes [35]
time: 1.467; rss: 1477MB	codegen passes [21]
time: 1.591; rss: 1471MB	codegen passes [25]
time: 1.697; rss: 1476MB	codegen passes [1]
time: 1.515; rss: 1441MB	codegen passes [3]
time: 1.757; rss: 1443MB	codegen passes [16]
time: 1.374; rss: 1458MB	codegen passes [30]
time: 2.009; rss: 1459MB	codegen passes [13]
time: 1.957; rss: 1473MB	codegen passes [32]
time: 1.659; rss: 1460MB	codegen passes [33]
time: 2.141; rss: 1443MB	codegen passes [5]
time: 2.458; rss: 1492MB	codegen passes [26]
time: 2.974; rss: 1665MB	codegen passes [9]
time: 3.394; rss: 1661MB	codegen passes [15]
time: 3.317; rss: 1654MB	codegen passes [20]
time: 3.497; rss: 1645MB	codegen passes [10]
time: 3.590; rss: 1680MB	codegen passes [17]
time: 4.043; rss: 1728MB	codegen passes [7]
time: 3.888; rss: 1697MB	codegen passes [29]
time: 3.849; rss: 1689MB	codegen passes [28]
time: 4.121; rss: 1680MB	codegen passes [0]
time: 4.242; rss: 1650MB	codegen passes [19]
time: 4.210; rss: 1610MB	codegen passes [18]
time: 4.544; rss: 1545MB	codegen passes [27]
time: 4.698; rss: 1541MB	codegen passes [12]
time: 4.474; rss: 1502MB	codegen passes [31]
time: 4.911; rss: 1412MB	codegen passes [8]
time: 5.090; rss: 1400MB	codegen passes [22]
time: 4.723; rss: 1323MB	codegen passes [14]
time: 7.392; rss: 1320MB	LLVM passes
time: 0.000; rss: 1320MB	serialize work products
time: 1.177; rss: 286MB	linking
done
