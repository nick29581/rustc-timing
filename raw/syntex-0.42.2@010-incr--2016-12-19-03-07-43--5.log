commit cc662efca1e2a070887839a935c3d14de4991526
Merge: 0102127 0ddf618
Author: bors <bors@rust-lang.org>
Date:   Mon Dec 19 04:39:18 2016 +0000

    Auto merge of #38194 - sgrif:sg-no-span-mangling, r=nrc
    
    Don't perform span mangling when building field/tup access nodes
    
    There are no guarantees that the two spans used to create the new one
    come from the same place or are even valid.
    
    Fixes #36081.
rustc: ./syntex-0.42.2@010-incr
find . -name '*.rs' | xargs touch
RUSTFLAGS="-Z incremental=incr" \
    cargo rustc -p syntex_syntax  -- \
    -Ztime-passes -Zinput-stats -Z incremental-info
time: 0.092; rss: 75MB	parsing
Lines of code:             33687
Pre-expansion node count:  223115
time: 0.000; rss: 75MB	recursion limit
time: 0.000; rss: 75MB	crate injection
time: 0.000; rss: 75MB	plugin loading
time: 0.000; rss: 75MB	plugin registration
time: 0.242; rss: 151MB	expansion
time: 0.000; rss: 151MB	maybe building test harness
time: 0.006; rss: 151MB	maybe creating a macro crate
Post-expansion node count: 638863
time: 0.000; rss: 151MB	checking for inline asm in case the target doesn't support it
time: 0.012; rss: 151MB	complete gated feature checking
time: 0.023; rss: 151MB	early lint checks
time: 0.007; rss: 151MB	AST validation
time: 0.076; rss: 166MB	name resolution
time: 0.059; rss: 199MB	lowering ast -> hir
time: 0.010; rss: 192MB	indexing hir
time: 0.006; rss: 192MB	attribute checking
time: 0.002; rss: 154MB	language item collection
time: 0.011; rss: 156MB	lifetime resolution
time: 0.000; rss: 156MB	looking for entry point
time: 0.000; rss: 156MB	looking for plugin registrar
time: 0.047; rss: 177MB	region resolution
time: 0.008; rss: 177MB	loop checking
time: 0.002; rss: 177MB	static item recursion checking
time: 0.381; rss: 178MB	compute_incremental_hashes_map
time: 0.000; rss: 178MB	load_dep_graph
time: 0.009; rss: 178MB	stability index
time: 0.021; rss: 182MB	stability checking
time: 0.055; rss: 190MB	type collecting
time: 0.004; rss: 190MB	variance inference
time: 0.006; rss: 194MB	impl wf inference
time: 0.026; rss: 197MB	coherence checking
time: 0.088; rss: 200MB	wf checking
time: 0.196; rss: 208MB	item-types checking
time: 3.593; rss: 267MB	item-bodies checking
time: 0.000; rss: 267MB	drop-impl checking
time: 0.214; rss: 277MB	const checking
time: 0.059; rss: 277MB	privacy checking
time: 0.020; rss: 284MB	intrinsic checking
time: 0.016; rss: 284MB	effect checking
time: 0.052; rss: 284MB	match checking
time: 0.051; rss: 290MB	liveness checking
time: 0.181; rss: 292MB	rvalue checking
time: 0.372; rss: 482MB	MIR dump
  time: 0.056; rss: 483MB	SimplifyCfg
  time: 0.075; rss: 483MB	QualifyAndPromoteConstants
  time: 0.121; rss: 500MB	TypeckMir
  time: 0.005; rss: 500MB	SimplifyBranches
  time: 0.033; rss: 500MB	SimplifyCfg
time: 0.290; rss: 500MB	MIR cleanup and validation
time: 0.479; rss: 500MB	borrow checking
time: 0.024; rss: 500MB	reachability checking
time: 0.038; rss: 500MB	death checking
time: 0.000; rss: 500MB	unused lib feature checking
time: 0.182; rss: 500MB	lint checking
time: 0.000; rss: 500MB	resolving dependency formats
  time: 0.004; rss: 500MB	NoLandingPads
  time: 0.027; rss: 500MB	SimplifyCfg
  time: 0.064; rss: 509MB	EraseRegions
  time: 0.011; rss: 509MB	AddCallGuards
  time: 0.270; rss: 529MB	ElaborateDrops
  time: 0.004; rss: 529MB	NoLandingPads
  time: 0.052; rss: 529MB	SimplifyCfg
  time: 0.029; rss: 528MB	InstCombine
  time: 0.012; rss: 528MB	Deaggregator
  time: 0.004; rss: 528MB	CopyPropagation
  time: 0.035; rss: 528MB	SimplifyLocals
  time: 0.010; rss: 528MB	AddCallGuards
  time: 0.003; rss: 528MB	PreTrans
time: 0.525; rss: 528MB	MIR optimisations
  time: 0.066; rss: 538MB	write metadata
  time: 0.399; rss: 551MB	translation item collection
  time: 0.072; rss: 555MB	codegen unit partitioning
  time: 0.048; rss: 1457MB	internalize symbols
time: 11.992; rss: 1457MB	translation
time: 0.000; rss: 1457MB	assert dep graph
time: 1.372; rss: 1485MB	serialize dep graph
incremental: re-using 0 out of 50 modules
time: 0.000; rss: 1195MB	llvm function passes [1]
time: 0.000; rss: 1198MB	llvm module passes [1]
time: 0.001; rss: 1208MB	llvm function passes [0]
time: 0.000; rss: 1208MB	llvm module passes [0]
time: 0.001; rss: 1208MB	llvm function passes [5]
time: 0.000; rss: 1208MB	llvm module passes [5]
time: 0.002; rss: 1215MB	llvm function passes [4]
time: 0.000; rss: 1215MB	llvm module passes [4]
time: 0.001; rss: 1215MB	llvm function passes [37]
time: 0.004; rss: 1225MB	llvm function passes [3]
time: 0.006; rss: 1229MB	llvm module passes [37]
time: 0.011; rss: 1231MB	llvm function passes [7]
time: 0.013; rss: 1231MB	llvm function passes [2]
time: 0.005; rss: 1231MB	llvm module passes [2]
time: 0.021; rss: 1236MB	llvm module passes [3]
time: 0.000; rss: 1240MB	llvm function passes [36]
time: 0.000; rss: 1240MB	llvm module passes [36]
time: 0.030; rss: 1240MB	llvm function passes [38]
time: 0.032; rss: 1246MB	codegen passes [1]
time: 0.006; rss: 1246MB	codegen passes [36]
time: 0.027; rss: 1246MB	llvm module passes [7]
time: 0.000; rss: 1248MB	llvm function passes [31]
time: 0.000; rss: 1248MB	llvm module passes [31]
time: 0.003; rss: 1248MB	llvm function passes [36]
time: 0.000; rss: 1248MB	llvm module passes [36]
time: 0.006; rss: 1248MB	llvm module passes [38]
time: 0.026; rss: 1250MB	llvm function passes [32]
time: 0.004; rss: 1250MB	llvm module passes [32]
time: 0.052; rss: 1250MB	llvm function passes [34]
time: 0.042; rss: 1261MB	llvm function passes [29]
time: 0.047; rss: 1258MB	llvm function passes [1]
time: 0.000; rss: 1258MB	llvm module passes [1]
time: 0.030; rss: 1260MB	llvm module passes [34]
time: 0.085; rss: 1260MB	codegen passes [0]
time: 0.000; rss: 1260MB	llvm function passes [0]
time: 0.000; rss: 1260MB	llvm module passes [0]
time: 0.001; rss: 1260MB	codegen passes [0]
time: 0.013; rss: 1264MB	llvm module passes [29]
time: 0.072; rss: 1268MB	llvm function passes [19]
time: 0.099; rss: 1268MB	codegen passes [5]
time: 0.100; rss: 1270MB	llvm function passes [39]
time: 0.031; rss: 1273MB	llvm module passes [19]
time: 0.137; rss: 1272MB	llvm function passes [6]
time: 0.056; rss: 1283MB	codegen passes [1]
time: 0.076; rss: 1289MB	llvm function passes [20]
time: 0.117; rss: 1291MB	codegen passes [31]
time: 0.116; rss: 1291MB	codegen passes [36]
time: 0.052; rss: 1331MB	llvm module passes [39]
time: 0.160; rss: 1337MB	codegen passes [4]
time: 0.024; rss: 1337MB	llvm function passes [1]
time: 0.015; rss: 1337MB	llvm module passes [20]
time: 0.009; rss: 1337MB	llvm module passes [1]
time: 0.166; rss: 1337MB	codegen passes [37]
time: 0.072; rss: 1339MB	llvm module passes [6]
time: 0.188; rss: 1338MB	llvm function passes [30]
time: 0.100; rss: 1343MB	llvm function passes [24]
time: 0.004; rss: 1345MB	llvm function passes [28]
time: 0.001; rss: 1347MB	llvm module passes [28]
time: 0.178; rss: 1353MB	llvm function passes [0]
time: 0.114; rss: 1355MB	llvm function passes [36]
time: 0.000; rss: 1355MB	llvm function passes [45]
time: 0.000; rss: 1355MB	llvm module passes [45]
time: 0.003; rss: 1355MB	codegen passes [45]
time: 0.000; rss: 1355MB	codegen passes [45]
time: 0.014; rss: 1355MB	llvm function passes [46]
time: 0.044; rss: 1355MB	llvm module passes [24]
time: 0.096; rss: 1355MB	llvm function passes [15]
time: 0.059; rss: 1355MB	llvm module passes [30]
time: 0.261; rss: 1355MB	codegen passes [3]
time: 0.120; rss: 1355MB	llvm function passes [37]
time: 0.026; rss: 1355MB	llvm module passes [36]
time: 0.002; rss: 1355MB	llvm module passes [37]
time: 0.018; rss: 1355MB	llvm module passes [46]
time: 0.258; rss: 1355MB	llvm function passes [35]
time: 0.185; rss: 1355MB	codegen passes [29]
time: 0.314; rss: 1362MB	llvm function passes [40]
time: 0.187; rss: 1364MB	llvm function passes [43]
time: 0.065; rss: 1362MB	llvm module passes [0]
time: 0.049; rss: 1364MB	llvm module passes [15]
time: 0.174; rss: 1366MB	llvm function passes [4]
time: 0.240; rss: 1372MB	llvm function passes [21]
time: 0.236; rss: 1375MB	llvm function passes [23]
time: 0.082; rss: 1381MB	codegen passes [37]
time: 0.065; rss: 1382MB	llvm module passes [43]
time: 0.055; rss: 1389MB	llvm module passes [21]
time: 0.102; rss: 1390MB	llvm module passes [35]
time: 0.374; rss: 1390MB	llvm function passes [42]
time: 0.083; rss: 1400MB	llvm module passes [4]
time: 0.048; rss: 1400MB	llvm module passes [23]
time: 0.439; rss: 1400MB	llvm function passes [33]
time: 0.359; rss: 1407MB	llvm function passes [25]
time: 0.094; rss: 1411MB	llvm module passes [42]
time: 0.008; rss: 1411MB	llvm module passes [25]
time: 0.377; rss: 1410MB	llvm function passes [22]
time: 0.232; rss: 1409MB	codegen passes [28]
time: 0.227; rss: 1421MB	llvm module passes [40]
time: 0.069; rss: 1415MB	llvm module passes [22]
time: 0.345; rss: 1415MB	llvm function passes [26]
time: 0.038; rss: 1412MB	llvm module passes [26]
time: 0.482; rss: 1412MB	llvm function passes [31]
time: 0.424; rss: 1408MB	llvm function passes [12]
time: 0.483; rss: 1415MB	llvm function passes [16]
time: 0.654; rss: 1414MB	llvm function passes [41]
time: 0.504; rss: 1417MB	llvm function passes [14]
time: 0.257; rss: 1407MB	llvm module passes [33]
time: 0.611; rss: 1410MB	llvm function passes [5]
time: 0.388; rss: 1410MB	llvm function passes [13]
time: 0.561; rss: 1427MB	llvm function passes [48]
time: 0.357; rss: 1426MB	codegen passes [46]
time: 0.707; rss: 1423MB	codegen passes [7]
time: 0.163; rss: 1424MB	llvm module passes [31]
time: 0.067; rss: 1426MB	llvm module passes [48]
time: 0.176; rss: 1425MB	llvm module passes [16]
time: 0.226; rss: 1425MB	llvm module passes [12]
time: 0.550; rss: 1423MB	codegen passes [1]
time: 0.339; rss: 1436MB	llvm module passes [14]
time: 0.312; rss: 1435MB	llvm module passes [13]
time: 0.336; rss: 1435MB	llvm module passes [5]
time: 1.101; rss: 1430MB	codegen passes [32]
time: 0.606; rss: 1435MB	llvm module passes [41]
time: 1.346; rss: 1443MB	codegen passes [2]
time: 1.021; rss: 1476MB	codegen passes [25]
time: 1.349; rss: 1470MB	codegen passes [36]
time: 1.331; rss: 1458MB	codegen passes [19]
time: 1.487; rss: 1455MB	codegen passes [24]
time: 2.011; rss: 1486MB	codegen passes [38]
time: 2.012; rss: 1504MB	codegen passes [20]
time: 2.165; rss: 1496MB	codegen passes [34]
time: 1.828; rss: 1495MB	codegen passes [4]
time: 2.130; rss: 1477MB	codegen passes [30]
time: 2.141; rss: 1472MB	codegen passes [0]
time: 2.369; rss: 1473MB	codegen passes [15]
time: 2.062; rss: 1463MB	codegen passes [26]
time: 2.479; rss: 1553MB	codegen passes [35]
time: 2.517; rss: 1551MB	codegen passes [12]
time: 3.027; rss: 1571MB	codegen passes [43]
time: 2.913; rss: 1573MB	codegen passes [23]
time: 3.227; rss: 1589MB	codegen passes [39]
time: 3.236; rss: 1567MB	codegen passes [48]
time: 3.227; rss: 1561MB	codegen passes [21]
time: 3.257; rss: 1537MB	codegen passes [42]
time: 4.172; rss: 1651MB	codegen passes [6]
time: 3.877; rss: 1604MB	codegen passes [22]
time: 3.812; rss: 1590MB	codegen passes [13]
time: 4.004; rss: 1557MB	codegen passes [5]
time: 3.589; rss: 1550MB	codegen passes [14]
time: 4.396; rss: 1546MB	codegen passes [16]
time: 4.503; rss: 1484MB	codegen passes [40]
time: 4.814; rss: 1480MB	codegen passes [31]
time: 5.203; rss: 1395MB	codegen passes [33]
time: 5.248; rss: 1339MB	codegen passes [41]
time: 7.975; rss: 1338MB	LLVM passes
time: 0.000; rss: 1338MB	serialize work products
time: 1.063; rss: 302MB	linking
done
