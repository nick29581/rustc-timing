commit 01d53df82ef12625f947f5c0a6004e1aea2f9782
Merge: 5d3ec6b 5e991e0
Author: bors <bors@rust-lang.org>
Date:   Wed Dec 14 09:56:38 2016 +0000

    Auto merge of #38340 - alexcrichton:fix-travis, r=alexcrichton
    
    Fix travis builds
    
    After reading some articles [1] [2] yesterday about Docker and the "init"
    process I got to thinking about the problems that we've been seeing on Travis.
    The basic problem is that a Linux system may need an "init" process to work
    properly when processes become zombies. Docker by default doesn't handle this
    and the root process typically isn't an init process, so this can occasionally
    cause quite a few problems.
    
    We've been seeing spurious errors on Travis inside containers which look like
    OOM and such, but my guess is that zombie processes were being reparented to the
    top-level shell. The shell didn't expect the zombies and then behaved very
    strangely.
    
    This commit fixes these problems by using Yelp's "dumb-init" program [2] as the
    init process in all of our containers. This ensures that there's a valid init
    ready to reap children when they're reparented, which our test suite apparently
    generates a bunch of throughout the tests and such.
    
    [1]: https://blog.phusion.nl/2015/01/20/docker-and-the-pid-1-zombie-reaping-problem/
    [2]: https://engineeringblog.yelp.com/2016/01/dumb-init-an-init-for-docker.html
rustc: ./syntex-0.42.2@010-incr
find . -name '*.rs' | xargs touch
RUSTFLAGS="-Z incremental=incr" \
    cargo rustc -p syntex_syntax  -- \
    -Ztime-passes -Zinput-stats -Z incremental-info
time: 0.092; rss: 75MB	parsing
Lines of code:             33687
Pre-expansion node count:  223115
time: 0.000; rss: 75MB	recursion limit
time: 0.000; rss: 75MB	crate injection
time: 0.000; rss: 75MB	plugin loading
time: 0.000; rss: 75MB	plugin registration
time: 0.242; rss: 151MB	expansion
time: 0.000; rss: 151MB	maybe building test harness
time: 0.006; rss: 151MB	maybe creating a macro crate
Post-expansion node count: 638863
time: 0.000; rss: 151MB	checking for inline asm in case the target doesn't support it
time: 0.012; rss: 151MB	complete gated feature checking
time: 0.023; rss: 151MB	early lint checks
time: 0.007; rss: 151MB	AST validation
time: 0.075; rss: 166MB	name resolution
time: 0.059; rss: 199MB	lowering ast -> hir
time: 0.010; rss: 191MB	indexing hir
time: 0.006; rss: 191MB	attribute checking
time: 0.002; rss: 153MB	language item collection
time: 0.011; rss: 155MB	lifetime resolution
time: 0.000; rss: 155MB	looking for entry point
time: 0.000; rss: 155MB	looking for plugin registrar
time: 0.046; rss: 176MB	region resolution
time: 0.008; rss: 176MB	loop checking
time: 0.002; rss: 176MB	static item recursion checking
time: 0.382; rss: 177MB	compute_incremental_hashes_map
time: 0.000; rss: 177MB	load_dep_graph
time: 0.009; rss: 177MB	stability index
time: 0.020; rss: 181MB	stability checking
time: 0.055; rss: 189MB	type collecting
time: 0.004; rss: 189MB	variance inference
time: 0.006; rss: 193MB	impl wf inference
time: 0.025; rss: 196MB	coherence checking
time: 0.090; rss: 199MB	wf checking
time: 0.197; rss: 207MB	item-types checking
time: 3.601; rss: 265MB	item-bodies checking
time: 0.000; rss: 265MB	drop-impl checking
time: 0.214; rss: 276MB	const checking
time: 0.058; rss: 276MB	privacy checking
time: 0.020; rss: 283MB	intrinsic checking
time: 0.014; rss: 283MB	effect checking
time: 0.049; rss: 283MB	match checking
time: 0.046; rss: 289MB	liveness checking
time: 0.171; rss: 292MB	rvalue checking
time: 0.364; rss: 481MB	MIR dump
  time: 0.057; rss: 482MB	SimplifyCfg
  time: 0.075; rss: 482MB	QualifyAndPromoteConstants
  time: 0.121; rss: 499MB	TypeckMir
  time: 0.004; rss: 499MB	SimplifyBranches
  time: 0.031; rss: 499MB	SimplifyCfg
time: 0.288; rss: 499MB	MIR cleanup and validation
time: 0.472; rss: 499MB	borrow checking
time: 0.024; rss: 499MB	reachability checking
time: 0.038; rss: 499MB	death checking
time: 0.000; rss: 499MB	unused lib feature checking
time: 0.182; rss: 499MB	lint checking
time: 0.000; rss: 499MB	resolving dependency formats
  time: 0.004; rss: 499MB	NoLandingPads
  time: 0.027; rss: 499MB	SimplifyCfg
  time: 0.064; rss: 508MB	EraseRegions
  time: 0.011; rss: 508MB	AddCallGuards
  time: 0.273; rss: 528MB	ElaborateDrops
  time: 0.004; rss: 528MB	NoLandingPads
  time: 0.052; rss: 528MB	SimplifyCfg
  time: 0.029; rss: 528MB	InstCombine
  time: 0.012; rss: 528MB	Deaggregator
  time: 0.003; rss: 528MB	CopyPropagation
  time: 0.035; rss: 528MB	SimplifyLocals
  time: 0.010; rss: 528MB	AddCallGuards
  time: 0.003; rss: 528MB	PreTrans
time: 0.526; rss: 528MB	MIR optimisations
  time: 0.065; rss: 537MB	write metadata
  time: 0.394; rss: 549MB	translation item collection
  time: 0.072; rss: 554MB	codegen unit partitioning
  time: 0.048; rss: 1457MB	internalize symbols
time: 11.773; rss: 1457MB	translation
time: 0.000; rss: 1457MB	assert dep graph
time: 1.374; rss: 1485MB	serialize dep graph
incremental: re-using 0 out of 50 modules
time: 0.000; rss: 1192MB	llvm function passes [0]
time: 0.000; rss: 1197MB	llvm module passes [0]
time: 0.001; rss: 1201MB	llvm function passes [1]
time: 0.000; rss: 1201MB	llvm module passes [1]
time: 0.002; rss: 1211MB	llvm function passes [3]
time: 0.000; rss: 1211MB	llvm module passes [3]
time: 0.002; rss: 1211MB	llvm function passes [2]
time: 0.000; rss: 1211MB	llvm module passes [2]
time: 0.003; rss: 1213MB	llvm function passes [5]
time: 0.001; rss: 1215MB	llvm function passes [8]
time: 0.004; rss: 1215MB	codegen passes [0]
time: 0.000; rss: 1215MB	llvm module passes [8]
time: 0.002; rss: 1215MB	llvm module passes [5]
time: 0.007; rss: 1215MB	codegen passes [1]
time: 0.010; rss: 1215MB	llvm function passes [6]
time: 0.006; rss: 1215MB	llvm module passes [6]
time: 0.016; rss: 1218MB	codegen passes [8]
time: 0.018; rss: 1218MB	llvm function passes [1]
time: 0.027; rss: 1222MB	codegen passes [2]
time: 0.008; rss: 1222MB	llvm module passes [1]
time: 0.037; rss: 1228MB	llvm function passes [0]
time: 0.013; rss: 1233MB	llvm function passes [10]
time: 0.049; rss: 1233MB	codegen passes [3]
time: 0.053; rss: 1233MB	llvm function passes [4]
time: 0.015; rss: 1233MB	llvm module passes [0]
time: 0.000; rss: 1243MB	llvm function passes [27]
time: 0.000; rss: 1243MB	llvm module passes [27]
time: 0.001; rss: 1243MB	codegen passes [27]
time: 0.016; rss: 1252MB	llvm module passes [4]
time: 0.020; rss: 1252MB	llvm module passes [10]
time: 0.061; rss: 1256MB	codegen passes [5]
time: 0.000; rss: 1256MB	llvm function passes [37]
time: 0.003; rss: 1256MB	llvm module passes [37]
time: 0.003; rss: 1256MB	codegen passes [37]
time: 0.020; rss: 1260MB	llvm function passes [28]
time: 0.001; rss: 1260MB	llvm module passes [28]
time: 0.064; rss: 1260MB	llvm function passes [8]
time: 0.048; rss: 1260MB	llvm function passes [3]
time: 0.000; rss: 1260MB	llvm function passes [22]
time: 0.000; rss: 1260MB	llvm module passes [22]
time: 0.001; rss: 1265MB	codegen passes [22]
time: 0.012; rss: 1267MB	llvm module passes [3]
time: 0.037; rss: 1267MB	llvm module passes [8]
time: 0.051; rss: 1267MB	llvm function passes [37]
time: 0.064; rss: 1275MB	llvm function passes [30]
time: 0.000; rss: 1275MB	llvm module passes [30]
time: 0.015; rss: 1275MB	llvm module passes [37]
time: 0.147; rss: 1277MB	llvm function passes [7]
time: 0.080; rss: 1279MB	llvm function passes [33]
time: 0.000; rss: 1279MB	llvm module passes [33]
time: 0.065; rss: 1279MB	codegen passes [28]
time: 0.111; rss: 1296MB	llvm function passes [27]
time: 0.041; rss: 1304MB	codegen passes [30]
time: 0.025; rss: 1304MB	codegen passes [33]
time: 0.014; rss: 1304MB	llvm module passes [27]
time: 0.037; rss: 1312MB	llvm function passes [33]
time: 0.027; rss: 1316MB	llvm function passes [44]
time: 0.003; rss: 1318MB	llvm module passes [44]
time: 0.170; rss: 1321MB	llvm function passes [36]
time: 0.092; rss: 1321MB	llvm module passes [7]
time: 0.159; rss: 1366MB	llvm function passes [26]
time: 0.056; rss: 1366MB	llvm module passes [33]
time: 0.115; rss: 1366MB	llvm function passes [48]
time: 0.013; rss: 1371MB	llvm module passes [48]
time: 0.287; rss: 1371MB	llvm function passes [9]
time: 0.059; rss: 1371MB	llvm module passes [36]
time: 0.129; rss: 1370MB	llvm function passes [18]
time: 0.046; rss: 1369MB	llvm module passes [26]
time: 0.009; rss: 1371MB	llvm module passes [18]
time: 0.164; rss: 1371MB	llvm function passes [47]
time: 0.109; rss: 1375MB	llvm function passes [17]
time: 0.002; rss: 1377MB	llvm module passes [17]
time: 0.233; rss: 1383MB	llvm function passes [45]
time: 0.018; rss: 1383MB	llvm function passes [23]
time: 0.034; rss: 1385MB	llvm function passes [12]
time: 0.302; rss: 1385MB	llvm function passes [25]
time: 0.246; rss: 1394MB	llvm function passes [35]
time: 0.065; rss: 1394MB	llvm module passes [47]
time: 0.026; rss: 1394MB	llvm module passes [12]
time: 0.175; rss: 1392MB	llvm function passes [19]
time: 0.053; rss: 1392MB	llvm module passes [45]
time: 0.018; rss: 1392MB	llvm module passes [19]
time: 0.063; rss: 1394MB	llvm module passes [23]
time: 0.076; rss: 1398MB	llvm function passes [34]
time: 0.071; rss: 1400MB	llvm module passes [35]
time: 0.351; rss: 1400MB	llvm function passes [22]
time: 0.151; rss: 1400MB	llvm function passes [14]
time: 0.028; rss: 1408MB	llvm module passes [34]
time: 0.137; rss: 1409MB	codegen passes [17]
time: 0.025; rss: 1411MB	llvm module passes [14]
time: 0.213; rss: 1414MB	llvm module passes [9]
time: 0.189; rss: 1416MB	llvm function passes [49]
time: 0.055; rss: 1415MB	llvm module passes [22]
time: 0.115; rss: 1415MB	codegen passes [31]
time: 0.257; rss: 1415MB	llvm function passes [38]
time: 0.453; rss: 1417MB	llvm function passes [5]
time: 0.055; rss: 1410MB	llvm module passes [38]
time: 0.077; rss: 1411MB	llvm module passes [49]
time: 0.318; rss: 1415MB	llvm function passes [41]
time: 0.344; rss: 1414MB	codegen passes [44]
time: 0.109; rss: 1414MB	llvm module passes [5]
time: 0.481; rss: 1414MB	llvm function passes [28]
time: 0.048; rss: 1405MB	codegen passes [34]
time: 0.166; rss: 1411MB	codegen passes [23]
time: 0.492; rss: 1415MB	llvm function passes [30]
time: 0.458; rss: 1420MB	llvm function passes [20]
time: 0.212; rss: 1416MB	codegen passes [12]
time: 0.098; rss: 1408MB	llvm module passes [41]
time: 0.406; rss: 1404MB	llvm function passes [46]
time: 0.432; rss: 1409MB	llvm function passes [43]
time: 0.080; rss: 1414MB	llvm module passes [20]
time: 0.709; rss: 1411MB	codegen passes [6]
time: 0.137; rss: 1411MB	llvm module passes [28]
time: 0.057; rss: 1419MB	llvm module passes [46]
time: 0.227; rss: 1438MB	llvm module passes [30]
time: 0.905; rss: 1435MB	llvm function passes [2]
time: 0.151; rss: 1446MB	llvm module passes [2]
time: 0.776; rss: 1454MB	llvm module passes [25]
time: 0.424; rss: 1447MB	llvm module passes [43]
time: 1.161; rss: 1461MB	codegen passes [1]
time: 1.068; rss: 1463MB	codegen passes [18]
time: 1.514; rss: 1484MB	codegen passes [10]
time: 1.336; rss: 1489MB	codegen passes [4]
time: 1.264; rss: 1507MB	codegen passes [48]
time: 1.357; rss: 1468MB	codegen passes [33]
time: 1.531; rss: 1469MB	codegen passes [0]
time: 1.708; rss: 1441MB	codegen passes [3]
time: 1.466; rss: 1458MB	codegen passes [41]
time: 1.985; rss: 1468MB	codegen passes [27]
time: 2.037; rss: 1468MB	codegen passes [19]
time: 1.908; rss: 1490MB	codegen passes [14]
time: 2.053; rss: 1480MB	codegen passes [49]
time: 2.431; rss: 1475MB	codegen passes [37]
time: 2.361; rss: 1470MB	codegen passes [26]
time: 2.485; rss: 1560MB	codegen passes [28]
time: 3.111; rss: 1597MB	codegen passes [47]
time: 2.951; rss: 1584MB	codegen passes [5]
time: 3.461; rss: 1609MB	codegen passes [8]
time: 3.706; rss: 1713MB	codegen passes [45]
time: 4.321; rss: 1733MB	codegen passes [36]
time: 4.193; rss: 1716MB	codegen passes [38]
time: 4.153; rss: 1689MB	codegen passes [46]
time: 4.135; rss: 1674MB	codegen passes [35]
time: 4.240; rss: 1585MB	codegen passes [7]
time: 4.382; rss: 1570MB	codegen passes [22]
time: 4.035; rss: 1552MB	codegen passes [20]
time: 4.789; rss: 1574MB	codegen passes [2]
time: 4.809; rss: 1530MB	codegen passes [43]
time: 4.394; rss: 1447MB	codegen passes [30]
time: 5.108; rss: 1396MB	codegen passes [9]
time: 5.806; rss: 1330MB	codegen passes [25]
time: 7.918; rss: 1329MB	LLVM passes
time: 0.000; rss: 1329MB	serialize work products
time: 1.334; rss: 282MB	linking
done
