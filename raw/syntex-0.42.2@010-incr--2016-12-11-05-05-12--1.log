commit e0158e02f97957c3d8cbd9c52da5aadaf898d447
Merge: 368e092 55180d0
Author: bors <bors@rust-lang.org>
Date:   Sun Dec 11 09:33:05 2016 +0000

    Auto merge of #38249 - arielb1:special-substs, r=nikomatsakis
    
    erase lifetimes when translating specialized substs
    
    Projections can generate lifetime variables with equality constraints,
    that will not be resolved by `resolve_type_vars_if_possible`, so substs
    need to be lifetime-erased after that.
    
    Fixes #36848.
rustc: ./syntex-0.42.2@010-incr
find . -name '*.rs' | xargs touch
RUSTFLAGS="-Z incremental=incr" \
    cargo rustc -p syntex_syntax  -- \
    -Ztime-passes -Zinput-stats -Z incremental-info
time: 0.093; rss: 75MB	parsing
Lines of code:             33687
Pre-expansion node count:  223115
time: 0.000; rss: 75MB	recursion limit
time: 0.000; rss: 75MB	crate injection
time: 0.000; rss: 75MB	plugin loading
time: 0.000; rss: 75MB	plugin registration
time: 0.242; rss: 151MB	expansion
time: 0.000; rss: 151MB	maybe building test harness
time: 0.006; rss: 151MB	maybe creating a macro crate
Post-expansion node count: 638863
time: 0.000; rss: 151MB	checking for inline asm in case the target doesn't support it
time: 0.012; rss: 151MB	complete gated feature checking
time: 0.023; rss: 151MB	early lint checks
time: 0.007; rss: 151MB	AST validation
time: 0.075; rss: 166MB	name resolution
time: 0.059; rss: 199MB	lowering ast -> hir
time: 0.010; rss: 192MB	indexing hir
time: 0.006; rss: 192MB	attribute checking
time: 0.002; rss: 154MB	language item collection
time: 0.011; rss: 156MB	lifetime resolution
time: 0.000; rss: 156MB	looking for entry point
time: 0.000; rss: 156MB	looking for plugin registrar
time: 0.046; rss: 176MB	region resolution
time: 0.008; rss: 176MB	loop checking
time: 0.002; rss: 176MB	static item recursion checking
time: 0.382; rss: 178MB	compute_incremental_hashes_map
time: 0.000; rss: 178MB	load_dep_graph
time: 0.009; rss: 178MB	stability index
time: 0.021; rss: 181MB	stability checking
time: 0.057; rss: 190MB	type collecting
time: 0.004; rss: 190MB	variance inference
time: 0.006; rss: 193MB	impl wf inference
time: 0.026; rss: 197MB	coherence checking
time: 0.088; rss: 199MB	wf checking
time: 0.198; rss: 208MB	item-types checking
time: 3.587; rss: 265MB	item-bodies checking
time: 0.000; rss: 265MB	drop-impl checking
time: 0.225; rss: 277MB	const checking
time: 0.069; rss: 277MB	privacy checking
time: 0.022; rss: 283MB	intrinsic checking
time: 0.016; rss: 283MB	effect checking
time: 0.052; rss: 283MB	match checking
time: 0.051; rss: 290MB	liveness checking
time: 0.181; rss: 292MB	rvalue checking
time: 0.376; rss: 481MB	MIR dump
  time: 0.061; rss: 483MB	SimplifyCfg
  time: 0.081; rss: 483MB	QualifyAndPromoteConstants
  time: 0.129; rss: 500MB	TypeckMir
  time: 0.005; rss: 500MB	SimplifyBranches
  time: 0.034; rss: 500MB	SimplifyCfg
time: 0.310; rss: 500MB	MIR cleanup and validation
time: 0.478; rss: 500MB	borrow checking
time: 0.026; rss: 500MB	reachability checking
time: 0.044; rss: 500MB	death checking
time: 0.000; rss: 500MB	unused lib feature checking
time: 0.183; rss: 500MB	lint checking
time: 0.000; rss: 500MB	resolving dependency formats
  time: 0.004; rss: 500MB	NoLandingPads
  time: 0.030; rss: 500MB	SimplifyCfg
  time: 0.073; rss: 509MB	EraseRegions
  time: 0.013; rss: 509MB	AddCallGuards
  time: 0.275; rss: 529MB	ElaborateDrops
  time: 0.004; rss: 529MB	NoLandingPads
  time: 0.054; rss: 529MB	SimplifyCfg
  time: 0.029; rss: 528MB	InstCombine
  time: 0.013; rss: 528MB	Deaggregator
  time: 0.004; rss: 528MB	CopyPropagation
  time: 0.036; rss: 528MB	SimplifyLocals
  time: 0.010; rss: 528MB	AddCallGuards
  time: 0.003; rss: 528MB	PreTrans
time: 0.546; rss: 528MB	MIR optimisations
  time: 0.068; rss: 538MB	write metadata
  time: 0.394; rss: 551MB	translation item collection
  time: 0.073; rss: 555MB	codegen unit partitioning
  time: 0.053; rss: 1455MB	internalize symbols
time: 12.471; rss: 1455MB	translation
time: 0.000; rss: 1455MB	assert dep graph
time: 2.180; rss: 1483MB	serialize dep graph
incremental: re-using 0 out of 50 modules
time: 0.000; rss: 1198MB	llvm function passes [1]
time: 0.000; rss: 1198MB	llvm module passes [1]
time: 0.002; rss: 1204MB	llvm function passes [5]
time: 0.003; rss: 1204MB	llvm function passes [0]
time: 0.000; rss: 1204MB	llvm module passes [0]
time: 0.005; rss: 1213MB	llvm function passes [3]
time: 0.000; rss: 1213MB	llvm module passes [3]
time: 0.009; rss: 1215MB	llvm function passes [2]
time: 0.000; rss: 1215MB	llvm module passes [2]
time: 0.007; rss: 1215MB	llvm function passes [7]
time: 0.014; rss: 1219MB	llvm module passes [5]
time: 0.001; rss: 1219MB	llvm function passes [9]
time: 0.000; rss: 1221MB	llvm module passes [9]
time: 0.008; rss: 1223MB	llvm module passes [7]
time: 0.020; rss: 1229MB	codegen passes [1]
time: 0.024; rss: 1229MB	llvm function passes [4]
time: 0.024; rss: 1230MB	codegen passes [0]
time: 0.022; rss: 1236MB	llvm function passes [10]
time: 0.030; rss: 1238MB	codegen passes [3]
time: 0.019; rss: 1238MB	llvm function passes [11]
time: 0.016; rss: 1238MB	llvm module passes [4]
time: 0.009; rss: 1240MB	llvm module passes [11]
time: 0.000; rss: 1240MB	llvm function passes [17]
time: 0.000; rss: 1240MB	llvm module passes [17]
time: 0.014; rss: 1242MB	llvm module passes [10]
time: 0.008; rss: 1242MB	codegen passes [17]
time: 0.039; rss: 1249MB	llvm function passes [0]
time: 0.039; rss: 1249MB	llvm function passes [15]
time: 0.010; rss: 1257MB	llvm module passes [0]
time: 0.012; rss: 1257MB	llvm module passes [15]
time: 0.067; rss: 1272MB	llvm function passes [13]
time: 0.000; rss: 1272MB	llvm function passes [20]
time: 0.079; rss: 1272MB	codegen passes [2]
time: 0.000; rss: 1272MB	llvm function passes [2]
time: 0.000; rss: 1272MB	llvm module passes [2]
time: 0.001; rss: 1272MB	codegen passes [2]
time: 0.080; rss: 1273MB	codegen passes [9]
time: 0.008; rss: 1273MB	llvm module passes [20]
time: 0.004; rss: 1286MB	codegen passes [20]
time: 0.050; rss: 1293MB	llvm function passes [17]
time: 0.001; rss: 1293MB	llvm module passes [17]
time: 0.025; rss: 1295MB	llvm function passes [16]
time: 0.000; rss: 1295MB	llvm module passes [16]
time: 0.060; rss: 1299MB	llvm function passes [12]
time: 0.061; rss: 1299MB	llvm function passes [14]
time: 0.149; rss: 1299MB	llvm function passes [8]
time: 0.029; rss: 1299MB	llvm module passes [12]
time: 0.066; rss: 1299MB	llvm function passes [19]
time: 0.000; rss: 1299MB	llvm module passes [19]
time: 0.021; rss: 1299MB	llvm module passes [14]
time: 0.100; rss: 1299MB	llvm function passes [21]
time: 0.108; rss: 1298MB	llvm function passes [24]
time: 0.072; rss: 1298MB	llvm module passes [8]
time: 0.030; rss: 1298MB	llvm module passes [21]
time: 0.011; rss: 1297MB	llvm module passes [24]
time: 0.116; rss: 1297MB	llvm function passes [26]
time: 0.008; rss: 1297MB	llvm module passes [26]
time: 0.173; rss: 1297MB	llvm function passes [2]
time: 0.134; rss: 1297MB	llvm function passes [25]
time: 0.256; rss: 1297MB	llvm function passes [1]
time: 0.019; rss: 1297MB	llvm module passes [25]
time: 0.286; rss: 1297MB	llvm function passes [6]
time: 0.166; rss: 1302MB	codegen passes [19]
time: 0.304; rss: 1302MB	codegen passes [5]
time: 0.003; rss: 1302MB	llvm function passes [5]
time: 0.245; rss: 1302MB	llvm module passes [13]
time: 0.013; rss: 1302MB	llvm module passes [5]
time: 0.046; rss: 1303MB	llvm function passes [29]
time: 0.251; rss: 1303MB	llvm function passes [22]
time: 0.004; rss: 1303MB	llvm module passes [29]
time: 0.257; rss: 1304MB	llvm function passes [23]
time: 0.275; rss: 1307MB	llvm function passes [20]
time: 0.046; rss: 1307MB	llvm function passes [33]
time: 0.056; rss: 1307MB	llvm function passes [19]
time: 0.118; rss: 1307MB	llvm module passes [2]
time: 0.302; rss: 1307MB	llvm function passes [18]
time: 0.012; rss: 1307MB	llvm module passes [33]
time: 0.143; rss: 1310MB	llvm function passes [32]
time: 0.030; rss: 1310MB	llvm module passes [20]
time: 0.013; rss: 1311MB	llvm function passes [28]
time: 0.002; rss: 1311MB	llvm module passes [28]
time: 0.043; rss: 1313MB	llvm module passes [19]
time: 0.010; rss: 1314MB	llvm function passes [39]
time: 0.000; rss: 1314MB	llvm module passes [39]
time: 0.044; rss: 1314MB	llvm function passes [38]
time: 0.004; rss: 1308MB	codegen passes [39]
time: 0.005; rss: 1308MB	llvm module passes [38]
time: 0.179; rss: 1308MB	llvm function passes [31]
time: 0.077; rss: 1314MB	llvm module passes [32]
time: 0.089; rss: 1314MB	codegen passes [40]
time: 0.391; rss: 1314MB	llvm function passes [9]
time: 0.402; rss: 1316MB	codegen passes [16]
time: 0.080; rss: 1318MB	llvm module passes [31]
time: 0.132; rss: 1333MB	codegen passes [5]
time: 0.523; rss: 1340MB	codegen passes [17]
time: 0.266; rss: 1340MB	llvm function passes [36]
time: 0.166; rss: 1342MB	llvm module passes [9]
time: 0.378; rss: 1340MB	llvm module passes [1]
time: 0.300; rss: 1341MB	llvm function passes [35]
time: 0.662; rss: 1342MB	llvm function passes [3]
time: 0.327; rss: 1344MB	llvm function passes [34]
time: 0.087; rss: 1344MB	llvm module passes [36]
time: 0.375; rss: 1344MB	llvm module passes [22]
time: 0.397; rss: 1346MB	llvm function passes [37]
time: 0.493; rss: 1345MB	llvm module passes [6]
time: 0.426; rss: 1348MB	llvm module passes [18]
time: 0.360; rss: 1350MB	codegen passes [28]
time: 0.195; rss: 1353MB	llvm module passes [35]
time: 0.154; rss: 1353MB	llvm module passes [34]
time: 0.540; rss: 1353MB	llvm function passes [27]
time: 0.842; rss: 1353MB	codegen passes [7]
time: 0.660; rss: 1353MB	llvm module passes [23]
time: 0.266; rss: 1355MB	llvm module passes [37]
time: 0.334; rss: 1353MB	llvm module passes [3]
time: 0.778; rss: 1357MB	llvm function passes [30]
time: 1.063; rss: 1388MB	codegen passes [0]
time: 0.753; rss: 1392MB	codegen passes [29]
time: 1.073; rss: 1389MB	codegen passes [4]
time: 0.537; rss: 1382MB	llvm module passes [27]
time: 0.933; rss: 1388MB	codegen passes [38]
time: 0.561; rss: 1405MB	llvm module passes [30]
time: 1.560; rss: 1434MB	codegen passes [11]
time: 1.307; rss: 1438MB	codegen passes [26]
time: 1.612; rss: 1467MB	codegen passes [31]
time: 1.886; rss: 1454MB	codegen passes [15]
time: 1.927; rss: 1439MB	codegen passes [2]
time: 1.812; rss: 1439MB	codegen passes [32]
time: 2.435; rss: 1431MB	codegen passes [10]
time: 1.949; rss: 1427MB	codegen passes [33]
time: 2.169; rss: 1399MB	codegen passes [24]
time: 2.241; rss: 1411MB	codegen passes [12]
time: 2.495; rss: 1432MB	codegen passes [19]
time: 2.742; rss: 1427MB	codegen passes [14]
time: 2.763; rss: 1522MB	codegen passes [34]
time: 3.242; rss: 1509MB	codegen passes [25]
time: 3.083; rss: 1537MB	codegen passes [20]
time: 3.278; rss: 1540MB	codegen passes [21]
time: 3.331; rss: 1580MB	codegen passes [13]
time: 3.717; rss: 1609MB	codegen passes [36]
time: 3.628; rss: 1589MB	codegen passes [9]
time: 3.589; rss: 1580MB	codegen passes [18]
time: 4.312; rss: 1626MB	codegen passes [8]
time: 4.390; rss: 1599MB	codegen passes [37]
time: 4.360; rss: 1577MB	codegen passes [22]
time: 4.082; rss: 1557MB	codegen passes [23]
time: 4.445; rss: 1531MB	codegen passes [35]
time: 4.684; rss: 1513MB	codegen passes [1]
time: 4.165; rss: 1453MB	codegen passes [27]
time: 4.970; rss: 1428MB	codegen passes [6]
time: 5.081; rss: 1403MB	codegen passes [30]
time: 5.499; rss: 1303MB	codegen passes [3]
time: 8.149; rss: 1302MB	LLVM passes
time: 0.000; rss: 1302MB	serialize work products
time: 1.052; rss: 262MB	linking
done
