commit 3db197aa9d343c7974b06a9b18ae5f78d5c64637
Merge: 6d5ec58 fbc3f11
Author: bors <bors@rust-lang.org>
Date:   Sun Dec 11 21:19:34 2016 +0000

    Auto merge of #38265 - bluss:mir-deaggregator-loop, r=nagisa
    
    Reinstate while loop in deaggregator pass
    
    A previous commit must have removed the `while let` loop here by
    mistake; for each basic block, it should find and deaggregate multiple
    statements in their index order, and the `curr` index tracks the
    progress through the block.
    
    This fixes both the case of deaggregating statements in separate
    basic blocks (preserving `curr` could prevent that) as well
    as multiple times in the same block (missing loop prevented that).
    
    The loop was lost in commit bda46c21fe30377b9587b584c64ffe99da6c14ce.
rustc: ./syntex-0.42.2@010-incr
find . -name '*.rs' | xargs touch
RUSTFLAGS="-Z incremental=incr" \
    cargo rustc -p syntex_syntax  -- \
    -Ztime-passes -Zinput-stats -Z incremental-info
time: 0.092; rss: 75MB	parsing
Lines of code:             33687
Pre-expansion node count:  223115
time: 0.000; rss: 75MB	recursion limit
time: 0.000; rss: 75MB	crate injection
time: 0.000; rss: 75MB	plugin loading
time: 0.000; rss: 75MB	plugin registration
time: 0.239; rss: 151MB	expansion
time: 0.000; rss: 151MB	maybe building test harness
time: 0.006; rss: 151MB	maybe creating a macro crate
Post-expansion node count: 638863
time: 0.000; rss: 151MB	checking for inline asm in case the target doesn't support it
time: 0.012; rss: 151MB	complete gated feature checking
time: 0.023; rss: 151MB	early lint checks
time: 0.007; rss: 151MB	AST validation
time: 0.075; rss: 166MB	name resolution
time: 0.058; rss: 199MB	lowering ast -> hir
time: 0.010; rss: 192MB	indexing hir
time: 0.006; rss: 192MB	attribute checking
time: 0.002; rss: 154MB	language item collection
time: 0.011; rss: 156MB	lifetime resolution
time: 0.000; rss: 156MB	looking for entry point
time: 0.000; rss: 156MB	looking for plugin registrar
time: 0.045; rss: 177MB	region resolution
time: 0.007; rss: 177MB	loop checking
time: 0.002; rss: 177MB	static item recursion checking
time: 0.381; rss: 178MB	compute_incremental_hashes_map
time: 0.000; rss: 178MB	load_dep_graph
time: 0.009; rss: 178MB	stability index
time: 0.020; rss: 181MB	stability checking
time: 0.056; rss: 189MB	type collecting
time: 0.004; rss: 189MB	variance inference
time: 0.006; rss: 193MB	impl wf inference
time: 0.026; rss: 196MB	coherence checking
time: 0.087; rss: 199MB	wf checking
time: 0.197; rss: 207MB	item-types checking
time: 3.598; rss: 266MB	item-bodies checking
time: 0.000; rss: 266MB	drop-impl checking
time: 0.219; rss: 276MB	const checking
time: 0.066; rss: 277MB	privacy checking
time: 0.021; rss: 283MB	intrinsic checking
time: 0.016; rss: 283MB	effect checking
time: 0.049; rss: 283MB	match checking
time: 0.049; rss: 290MB	liveness checking
time: 0.178; rss: 292MB	rvalue checking
time: 0.543; rss: 471MB	MIR dump
  time: 0.060; rss: 476MB	SimplifyCfg
  time: 0.075; rss: 476MB	QualifyAndPromoteConstants
  time: 0.176; rss: 493MB	TypeckMir
  time: 0.006; rss: 493MB	SimplifyBranches
  time: 0.047; rss: 494MB	SimplifyCfg
time: 0.365; rss: 494MB	MIR cleanup and validation
time: 0.673; rss: 496MB	borrow checking
time: 0.031; rss: 496MB	reachability checking
time: 0.048; rss: 496MB	death checking
time: 0.000; rss: 496MB	unused lib feature checking
time: 0.249; rss: 496MB	lint checking
time: 0.000; rss: 496MB	resolving dependency formats
  time: 0.005; rss: 496MB	NoLandingPads
  time: 0.040; rss: 496MB	SimplifyCfg
  time: 0.083; rss: 505MB	EraseRegions
  time: 0.015; rss: 505MB	AddCallGuards
  time: 0.383; rss: 525MB	ElaborateDrops
  time: 0.004; rss: 525MB	NoLandingPads
  time: 0.054; rss: 525MB	SimplifyCfg
  time: 0.029; rss: 525MB	InstCombine
  time: 0.013; rss: 524MB	Deaggregator
  time: 0.004; rss: 524MB	CopyPropagation
  time: 0.036; rss: 524MB	SimplifyLocals
  time: 0.010; rss: 524MB	AddCallGuards
  time: 0.003; rss: 524MB	PreTrans
time: 0.679; rss: 524MB	MIR optimisations
  time: 0.084; rss: 532MB	write metadata
  time: 0.418; rss: 545MB	translation item collection
  time: 0.074; rss: 548MB	codegen unit partitioning
  time: 0.053; rss: 1445MB	internalize symbols
time: 13.639; rss: 1445MB	translation
time: 0.000; rss: 1445MB	assert dep graph
time: 2.291; rss: 1473MB	serialize dep graph
incremental: re-using 0 out of 50 modules
time: 0.000; rss: 1192MB	llvm function passes [1]
time: 0.000; rss: 1192MB	llvm module passes [1]
time: 0.001; rss: 1196MB	llvm function passes [0]
time: 0.000; rss: 1198MB	llvm module passes [0]
time: 0.002; rss: 1202MB	llvm function passes [3]
time: 0.000; rss: 1202MB	llvm module passes [3]
time: 0.003; rss: 1202MB	llvm function passes [6]
time: 0.006; rss: 1208MB	llvm function passes [4]
time: 0.000; rss: 1208MB	llvm module passes [4]
time: 0.006; rss: 1208MB	codegen passes [1]
time: 0.002; rss: 1208MB	llvm function passes [8]
time: 0.001; rss: 1208MB	llvm module passes [8]
time: 0.009; rss: 1208MB	llvm function passes [5]
time: 0.010; rss: 1208MB	codegen passes [0]
time: 0.018; rss: 1208MB	llvm function passes [2]
time: 0.017; rss: 1208MB	llvm module passes [6]
time: 0.012; rss: 1208MB	llvm module passes [5]
time: 0.006; rss: 1208MB	llvm module passes [2]
time: 0.023; rss: 1218MB	codegen passes [8]
time: 0.031; rss: 1218MB	codegen passes [3]
time: 0.028; rss: 1231MB	llvm function passes [0]
time: 0.003; rss: 1231MB	llvm function passes [11]
time: 0.001; rss: 1233MB	llvm module passes [11]
time: 0.009; rss: 1233MB	llvm module passes [0]
time: 0.000; rss: 1235MB	llvm function passes [16]
time: 0.000; rss: 1235MB	llvm module passes [16]
time: 0.051; rss: 1242MB	codegen passes [4]
time: 0.000; rss: 1242MB	llvm function passes [4]
time: 0.000; rss: 1242MB	llvm module passes [4]
time: 0.060; rss: 1242MB	llvm function passes [1]
time: 0.033; rss: 1242MB	llvm function passes [3]
time: 0.013; rss: 1244MB	codegen passes [16]
time: 0.000; rss: 1244MB	llvm function passes [16]
time: 0.000; rss: 1244MB	llvm module passes [16]
time: 0.010; rss: 1244MB	codegen passes [4]
time: 0.004; rss: 1244MB	codegen passes [16]
time: 0.008; rss: 1244MB	llvm module passes [3]
time: 0.014; rss: 1244MB	llvm module passes [1]
time: 0.000; rss: 1252MB	llvm function passes [21]
time: 0.000; rss: 1252MB	llvm module passes [21]
time: 0.001; rss: 1252MB	codegen passes [21]
time: 0.069; rss: 1254MB	llvm function passes [15]
time: 0.071; rss: 1254MB	llvm function passes [13]
time: 0.076; rss: 1263MB	codegen passes [11]
time: 0.071; rss: 1263MB	llvm function passes [16]
time: 0.061; rss: 1263MB	llvm function passes [10]
time: 0.000; rss: 1263MB	llvm module passes [10]
time: 0.055; rss: 1263MB	llvm module passes [13]
time: 0.019; rss: 1263MB	llvm module passes [16]
time: 0.119; rss: 1262MB	llvm function passes [17]
time: 0.068; rss: 1262MB	llvm function passes [20]
time: 0.019; rss: 1262MB	llvm module passes [20]
time: 0.024; rss: 1262MB	llvm module passes [17]
time: 0.088; rss: 1262MB	llvm function passes [19]
time: 0.058; rss: 1263MB	codegen passes [10]
time: 0.126; rss: 1265MB	llvm module passes [15]
time: 0.231; rss: 1265MB	llvm function passes [9]
time: 0.032; rss: 1265MB	llvm module passes [19]
time: 0.018; rss: 1265MB	llvm function passes [10]
time: 0.004; rss: 1265MB	llvm module passes [10]
time: 0.127; rss: 1265MB	llvm function passes [11]
time: 0.247; rss: 1266MB	codegen passes [6]
time: 0.272; rss: 1267MB	llvm function passes [7]
time: 0.212; rss: 1268MB	llvm function passes [4]
time: 0.210; rss: 1269MB	llvm function passes [21]
time: 0.049; rss: 1271MB	llvm function passes [6]
time: 0.018; rss: 1272MB	llvm module passes [6]
time: 0.018; rss: 1270MB	llvm function passes [30]
time: 0.232; rss: 1270MB	llvm function passes [22]
time: 0.091; rss: 1270MB	llvm module passes [11]
time: 0.012; rss: 1272MB	llvm module passes [30]
time: 0.303; rss: 1273MB	llvm function passes [18]
time: 0.174; rss: 1277MB	llvm function passes [24]
time: 0.012; rss: 1279MB	llvm module passes [24]
time: 0.114; rss: 1281MB	llvm function passes [26]
time: 0.160; rss: 1286MB	llvm function passes [23]
time: 0.022; rss: 1288MB	llvm module passes [26]
time: 0.158; rss: 1288MB	llvm module passes [4]
time: 0.432; rss: 1287MB	llvm function passes [8]
time: 0.007; rss: 1289MB	llvm function passes [35]
time: 0.363; rss: 1289MB	llvm function passes [12]
time: 0.012; rss: 1292MB	llvm module passes [35]
time: 0.000; rss: 1294MB	llvm function passes [37]
time: 0.000; rss: 1294MB	llvm module passes [37]
time: 0.042; rss: 1296MB	llvm function passes [36]
time: 0.027; rss: 1294MB	llvm module passes [36]
time: 0.239; rss: 1296MB	llvm module passes [21]
time: 0.180; rss: 1296MB	llvm function passes [31]
time: 0.004; rss: 1296MB	codegen passes [38]
time: 0.152; rss: 1296MB	llvm function passes [28]
time: 0.520; rss: 1298MB	llvm function passes [14]
time: 0.070; rss: 1299MB	codegen passes [37]
time: 0.198; rss: 1305MB	llvm module passes [23]
time: 0.301; rss: 1312MB	llvm function passes [33]
time: 0.143; rss: 1312MB	llvm module passes [31]
time: 0.562; rss: 1311MB	codegen passes [5]
time: 0.338; rss: 1311MB	llvm module passes [18]
time: 0.448; rss: 1314MB	llvm module passes [7]
time: 0.176; rss: 1314MB	llvm module passes [28]
time: 0.387; rss: 1315MB	llvm module passes [22]
time: 0.495; rss: 1315MB	llvm module passes [9]
time: 0.562; rss: 1315MB	llvm function passes [25]
time: 0.419; rss: 1317MB	llvm function passes [34]
time: 0.444; rss: 1317MB	llvm function passes [32]
time: 0.146; rss: 1317MB	llvm module passes [33]
time: 0.452; rss: 1328MB	llvm function passes [27]
time: 0.454; rss: 1331MB	codegen passes [30]
time: 0.605; rss: 1335MB	llvm function passes [29]
time: 0.471; rss: 1340MB	codegen passes [35]
time: 0.508; rss: 1341MB	llvm module passes [12]
time: 0.587; rss: 1350MB	llvm module passes [8]
time: 0.824; rss: 1355MB	codegen passes [3]
time: 0.299; rss: 1356MB	llvm module passes [34]
time: 0.818; rss: 1352MB	codegen passes [10]
time: 0.574; rss: 1354MB	llvm module passes [14]
time: 0.299; rss: 1352MB	llvm module passes [27]
time: 0.360; rss: 1353MB	llvm module passes [32]
time: 1.087; rss: 1352MB	codegen passes [2]
time: 0.435; rss: 1348MB	llvm module passes [29]
time: 0.649; rss: 1361MB	llvm module passes [25]
time: 1.317; rss: 1382MB	codegen passes [0]
time: 0.915; rss: 1384MB	codegen passes [36]
time: 1.426; rss: 1435MB	codegen passes [24]
time: 1.732; rss: 1419MB	codegen passes [1]
time: 1.926; rss: 1445MB	codegen passes [13]
time: 1.647; rss: 1432MB	codegen passes [26]
time: 2.162; rss: 1439MB	codegen passes [11]
time: 2.232; rss: 1437MB	codegen passes [17]
time: 2.228; rss: 1414MB	codegen passes [6]
time: 1.880; rss: 1409MB	codegen passes [28]
time: 1.969; rss: 1413MB	codegen passes [31]
time: 2.258; rss: 1417MB	codegen passes [20]
time: 2.651; rss: 1437MB	codegen passes [16]
time: 2.647; rss: 1521MB	codegen passes [33]
time: 3.037; rss: 1514MB	codegen passes [19]
time: 2.993; rss: 1504MB	codegen passes [23]
time: 3.400; rss: 1529MB	codegen passes [15]
time: 3.526; rss: 1538MB	codegen passes [4]
time: 4.000; rss: 1633MB	codegen passes [21]
time: 3.585; rss: 1622MB	codegen passes [27]
time: 3.774; rss: 1593MB	codegen passes [18]
time: 4.147; rss: 1636MB	codegen passes [34]
time: 4.066; rss: 1608MB	codegen passes [22]
time: 4.308; rss: 1561MB	codegen passes [7]
time: 4.168; rss: 1545MB	codegen passes [12]
time: 4.261; rss: 1526MB	codegen passes [29]
time: 4.273; rss: 1484MB	codegen passes [32]
time: 4.753; rss: 1470MB	codegen passes [8]
time: 5.317; rss: 1434MB	codegen passes [9]
time: 4.972; rss: 1372MB	codegen passes [25]
time: 5.690; rss: 1303MB	codegen passes [14]
time: 8.703; rss: 1302MB	LLVM passes
time: 0.000; rss: 1302MB	serialize work products
time: 1.054; rss: 274MB	linking
done
