commit 8327b5afafde7cdd6fd4e939d9a8fe12f76503ef
Merge: d54e723 ff59474
Author: bors <bors@rust-lang.org>
Date:   Sun Dec 18 07:59:32 2016 +0000

    Auto merge of #37429 - camlorn:univariant_layout_optimization, r=eddyb
    
    struct field reordering and optimization
    
    This is work in progress.  The goal is to divorce the order of fields in source code from the order of fields in the LLVM IR, then optimize structs (and tuples/enum variants)by always ordering fields from least to most aligned.  It does not work yet.  I intend to check compiler memory usage as a benchmark, and a crater run will probably be required.
    
    I don't know enough of the compiler to complete this work unaided.  If you see places that still need updating, please mention them.  The only one I know of currently is debuginfo, which I'm putting off intentionally until a bit later.
    
    r? @eddyb
rustc: ./syntex-0.42.2@010-incr
find . -name '*.rs' | xargs touch
RUSTFLAGS="-Z incremental=incr" \
    cargo rustc -p syntex_syntax  -- \
    -Ztime-passes -Zinput-stats -Z incremental-info
time: 0.091; rss: 75MB	parsing
Lines of code:             33687
Pre-expansion node count:  223115
time: 0.000; rss: 75MB	recursion limit
time: 0.000; rss: 75MB	crate injection
time: 0.000; rss: 75MB	plugin loading
time: 0.000; rss: 75MB	plugin registration
time: 0.240; rss: 151MB	expansion
time: 0.000; rss: 151MB	maybe building test harness
time: 0.006; rss: 151MB	maybe creating a macro crate
Post-expansion node count: 638863
time: 0.000; rss: 151MB	checking for inline asm in case the target doesn't support it
time: 0.012; rss: 151MB	complete gated feature checking
time: 0.023; rss: 151MB	early lint checks
time: 0.007; rss: 151MB	AST validation
time: 0.075; rss: 166MB	name resolution
time: 0.058; rss: 200MB	lowering ast -> hir
time: 0.010; rss: 192MB	indexing hir
time: 0.006; rss: 192MB	attribute checking
time: 0.002; rss: 154MB	language item collection
time: 0.011; rss: 156MB	lifetime resolution
time: 0.000; rss: 156MB	looking for entry point
time: 0.000; rss: 156MB	looking for plugin registrar
time: 0.046; rss: 177MB	region resolution
time: 0.008; rss: 177MB	loop checking
time: 0.002; rss: 177MB	static item recursion checking
time: 0.381; rss: 178MB	compute_incremental_hashes_map
time: 0.000; rss: 178MB	load_dep_graph
time: 0.009; rss: 178MB	stability index
time: 0.021; rss: 182MB	stability checking
time: 0.055; rss: 189MB	type collecting
time: 0.004; rss: 189MB	variance inference
time: 0.006; rss: 193MB	impl wf inference
time: 0.025; rss: 197MB	coherence checking
time: 0.087; rss: 199MB	wf checking
time: 0.196; rss: 207MB	item-types checking
time: 3.574; rss: 266MB	item-bodies checking
time: 0.000; rss: 266MB	drop-impl checking
time: 0.226; rss: 277MB	const checking
time: 0.067; rss: 277MB	privacy checking
time: 0.021; rss: 283MB	intrinsic checking
time: 0.016; rss: 283MB	effect checking
time: 0.048; rss: 283MB	match checking
time: 0.046; rss: 291MB	liveness checking
time: 0.178; rss: 293MB	rvalue checking
time: 0.374; rss: 482MB	MIR dump
  time: 0.056; rss: 483MB	SimplifyCfg
  time: 0.073; rss: 483MB	QualifyAndPromoteConstants
  time: 0.121; rss: 500MB	TypeckMir
  time: 0.004; rss: 500MB	SimplifyBranches
  time: 0.031; rss: 500MB	SimplifyCfg
time: 0.286; rss: 500MB	MIR cleanup and validation
time: 0.475; rss: 500MB	borrow checking
time: 0.024; rss: 500MB	reachability checking
time: 0.038; rss: 500MB	death checking
time: 0.000; rss: 500MB	unused lib feature checking
time: 0.177; rss: 500MB	lint checking
time: 0.000; rss: 500MB	resolving dependency formats
  time: 0.004; rss: 500MB	NoLandingPads
  time: 0.027; rss: 500MB	SimplifyCfg
  time: 0.064; rss: 509MB	EraseRegions
  time: 0.011; rss: 509MB	AddCallGuards
  time: 0.271; rss: 529MB	ElaborateDrops
  time: 0.003; rss: 529MB	NoLandingPads
  time: 0.052; rss: 529MB	SimplifyCfg
  time: 0.028; rss: 529MB	InstCombine
  time: 0.013; rss: 529MB	Deaggregator
  time: 0.003; rss: 529MB	CopyPropagation
  time: 0.035; rss: 529MB	SimplifyLocals
  time: 0.010; rss: 529MB	AddCallGuards
  time: 0.003; rss: 529MB	PreTrans
time: 0.524; rss: 529MB	MIR optimisations
  time: 0.064; rss: 537MB	write metadata
  time: 0.391; rss: 550MB	translation item collection
  time: 0.072; rss: 554MB	codegen unit partitioning
  time: 0.048; rss: 1457MB	internalize symbols
time: 11.887; rss: 1457MB	translation
time: 0.000; rss: 1457MB	assert dep graph
time: 1.360; rss: 1485MB	serialize dep graph
incremental: re-using 0 out of 50 modules
time: 0.000; rss: 1197MB	llvm function passes [1]
time: 0.000; rss: 1199MB	llvm module passes [1]
time: 0.001; rss: 1205MB	llvm function passes [3]
time: 0.000; rss: 1208MB	llvm module passes [3]
time: 0.001; rss: 1208MB	llvm function passes [0]
time: 0.000; rss: 1208MB	llvm module passes [0]
time: 0.003; rss: 1208MB	llvm function passes [5]
time: 0.006; rss: 1210MB	llvm function passes [2]
time: 0.000; rss: 1210MB	llvm module passes [2]
time: 0.006; rss: 1210MB	llvm module passes [5]
time: 0.011; rss: 1210MB	llvm function passes [6]
time: 0.001; rss: 1214MB	llvm function passes [10]
time: 0.000; rss: 1214MB	llvm module passes [10]
time: 0.020; rss: 1220MB	llvm function passes [4]
time: 0.015; rss: 1220MB	codegen passes [3]
time: 0.018; rss: 1222MB	codegen passes [1]
time: 0.016; rss: 1222MB	llvm module passes [6]
time: 0.008; rss: 1222MB	llvm module passes [4]
time: 0.014; rss: 1222MB	llvm function passes [3]
time: 0.033; rss: 1224MB	codegen passes [0]
time: 0.008; rss: 1227MB	llvm module passes [3]
time: 0.034; rss: 1227MB	llvm function passes [12]
time: 0.041; rss: 1235MB	codegen passes [10]
time: 0.000; rss: 1235MB	llvm function passes [14]
time: 0.000; rss: 1235MB	llvm module passes [14]
time: 0.004; rss: 1235MB	llvm function passes [10]
time: 0.037; rss: 1235MB	llvm function passes [1]
time: 0.001; rss: 1235MB	llvm module passes [10]
time: 0.008; rss: 1237MB	codegen passes [14]
time: 0.056; rss: 1237MB	codegen passes [2]
time: 0.011; rss: 1237MB	llvm module passes [1]
time: 0.001; rss: 1243MB	llvm function passes [15]
time: 0.000; rss: 1243MB	llvm module passes [15]
time: 0.001; rss: 1243MB	llvm function passes [16]
time: 0.000; rss: 1243MB	llvm module passes [16]
time: 0.030; rss: 1248MB	llvm module passes [12]
time: 0.019; rss: 1254MB	codegen passes [15]
time: 0.000; rss: 1254MB	llvm function passes [15]
time: 0.000; rss: 1254MB	llvm module passes [15]
time: 0.004; rss: 1254MB	codegen passes [15]
time: 0.086; rss: 1254MB	llvm function passes [11]
time: 0.087; rss: 1254MB	llvm function passes [9]
time: 0.014; rss: 1263MB	llvm module passes [11]
time: 0.107; rss: 1265MB	codegen passes [5]
time: 0.000; rss: 1265MB	llvm function passes [5]
time: 0.000; rss: 1265MB	llvm module passes [5]
time: 0.001; rss: 1265MB	codegen passes [5]
time: 0.058; rss: 1270MB	codegen passes [16]
time: 0.075; rss: 1270MB	llvm function passes [14]
time: 0.017; rss: 1280MB	llvm module passes [14]
time: 0.169; rss: 1284MB	llvm function passes [8]
time: 0.071; rss: 1286MB	llvm module passes [9]
time: 0.102; rss: 1286MB	codegen passes [10]
time: 0.062; rss: 1286MB	llvm function passes [17]
time: 0.090; rss: 1292MB	llvm function passes [15]
time: 0.075; rss: 1294MB	llvm function passes [5]
time: 0.030; rss: 1294MB	llvm module passes [17]
time: 0.021; rss: 1294MB	llvm module passes [5]
time: 0.031; rss: 1294MB	llvm module passes [15]
time: 0.251; rss: 1306MB	llvm function passes [7]
time: 0.019; rss: 1308MB	llvm function passes [22]
time: 0.031; rss: 1314MB	llvm function passes [21]
time: 0.008; rss: 1314MB	llvm module passes [22]
time: 0.013; rss: 1324MB	llvm module passes [21]
time: 0.122; rss: 1323MB	llvm module passes [8]
time: 0.169; rss: 1323MB	llvm function passes [18]
time: 0.280; rss: 1323MB	llvm function passes [13]
time: 0.010; rss: 1327MB	llvm function passes [23]
time: 0.004; rss: 1330MB	llvm module passes [23]
time: 0.165; rss: 1335MB	llvm function passes [19]
time: 0.112; rss: 1350MB	llvm function passes [20]
time: 0.091; rss: 1350MB	llvm module passes [18]
time: 0.143; rss: 1353MB	llvm module passes [7]
time: 0.073; rss: 1353MB	llvm module passes [19]
time: 0.036; rss: 1358MB	llvm module passes [20]
time: 0.037; rss: 1358MB	llvm function passes [25]
time: 0.010; rss: 1362MB	llvm module passes [25]
time: 0.126; rss: 1372MB	llvm module passes [13]
time: 0.307; rss: 1372MB	llvm function passes [16]
time: 0.041; rss: 1374MB	llvm function passes [27]
time: 0.030; rss: 1381MB	llvm function passes [29]
time: 0.019; rss: 1382MB	llvm module passes [27]
time: 0.014; rss: 1382MB	llvm module passes [29]
time: 0.035; rss: 1396MB	codegen passes [29]
time: 0.103; rss: 1396MB	llvm function passes [28]
time: 0.228; rss: 1398MB	llvm function passes [24]
time: 0.477; rss: 1399MB	llvm function passes [2]
time: 0.003; rss: 1401MB	llvm function passes [36]
time: 0.003; rss: 1401MB	llvm module passes [36]
time: 0.151; rss: 1406MB	llvm function passes [26]
time: 0.057; rss: 1409MB	llvm module passes [28]
time: 0.041; rss: 1412MB	codegen passes [37]
time: 0.045; rss: 1412MB	llvm function passes [34]
time: 0.441; rss: 1406MB	llvm function passes [10]
time: 0.075; rss: 1402MB	llvm module passes [26]
time: 0.054; rss: 1402MB	codegen passes [36]
time: 0.096; rss: 1404MB	llvm function passes [35]
time: 0.049; rss: 1389MB	llvm module passes [10]
time: 0.314; rss: 1388MB	codegen passes [23]
time: 0.083; rss: 1391MB	llvm module passes [34]
time: 0.175; rss: 1392MB	llvm function passes [33]
time: 0.570; rss: 1383MB	codegen passes [6]
time: 0.169; rss: 1383MB	llvm module passes [24]
time: 0.212; rss: 1385MB	llvm function passes [32]
time: 0.083; rss: 1391MB	llvm module passes [35]
time: 0.065; rss: 1403MB	llvm module passes [33]
time: 0.233; rss: 1406MB	llvm module passes [2]
time: 0.344; rss: 1407MB	llvm module passes [16]
time: 0.344; rss: 1406MB	llvm function passes [30]
time: 0.809; rss: 1413MB	llvm function passes [0]
time: 0.166; rss: 1423MB	llvm module passes [32]
time: 0.165; rss: 1423MB	codegen passes [34]
time: 0.107; rss: 1424MB	llvm module passes [30]
time: 0.857; rss: 1434MB	codegen passes [3]
time: 0.493; rss: 1439MB	llvm function passes [31]
time: 0.516; rss: 1442MB	llvm function passes [29]
time: 0.274; rss: 1462MB	llvm module passes [29]
time: 0.503; rss: 1455MB	llvm module passes [0]
time: 1.356; rss: 1449MB	codegen passes [4]
time: 0.539; rss: 1454MB	llvm module passes [31]
time: 1.262; rss: 1438MB	codegen passes [1]
time: 1.208; rss: 1433MB	codegen passes [22]
time: 1.575; rss: 1466MB	codegen passes [12]
time: 1.126; rss: 1471MB	codegen passes [35]
time: 1.435; rss: 1465MB	codegen passes [25]
time: 1.652; rss: 1431MB	codegen passes [21]
time: 1.972; rss: 1454MB	codegen passes [11]
time: 2.018; rss: 1448MB	codegen passes [14]
time: 2.011; rss: 1443MB	codegen passes [17]
time: 1.408; rss: 1442MB	codegen passes [30]
time: 2.090; rss: 1443MB	codegen passes [27]
time: 2.131; rss: 1503MB	codegen passes [33]
time: 2.464; rss: 1490MB	codegen passes [5]
time: 2.358; rss: 1555MB	codegen passes [32]
time: 2.912; rss: 1564MB	codegen passes [20]
time: 2.813; rss: 1599MB	codegen passes [10]
time: 3.300; rss: 1626MB	codegen passes [9]
time: 3.575; rss: 1606MB	codegen passes [15]
time: 3.364; rss: 1658MB	codegen passes [18]
time: 3.830; rss: 1692MB	codegen passes [28]
time: 3.794; rss: 1670MB	codegen passes [2]
time: 3.455; rss: 1674MB	codegen passes [29]
time: 4.118; rss: 1625MB	codegen passes [19]
time: 4.151; rss: 1618MB	codegen passes [8]
time: 3.974; rss: 1588MB	codegen passes [16]
time: 4.318; rss: 1519MB	codegen passes [26]
time: 4.267; rss: 1520MB	codegen passes [31]
time: 5.225; rss: 1464MB	codegen passes [13]
time: 5.015; rss: 1455MB	codegen passes [24]
time: 5.283; rss: 1384MB	codegen passes [7]
time: 5.718; rss: 1327MB	codegen passes [0]
time: 8.240; rss: 1322MB	LLVM passes
time: 0.000; rss: 1322MB	serialize work products
time: 1.050; rss: 296MB	linking
done
