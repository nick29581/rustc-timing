commit 833b03ad52f1d5381d65ad866ab79cb9a68b0e7f
Merge: cfa668f 516d105
Author: bors <bors@rust-lang.org>
Date:   Thu Dec 15 09:26:25 2016 +0000

    Auto merge of #38185 - jsgf:test-list, r=alexcrichton
    
    libtest: add --list option to list tests and benchmarks
    
    This option lists all the tests and benchmarks a binary provides without running any of them.
    By default the listing is sent to stdout (intended for human consumption), but if `--logfile` is also specified, it is also written there in an easily parsable form.
    
    If filters are specified, they're applied before the output is emitted. The human output will also include a summary unless `-q` is specified.
rustc: ./syntex-0.42.2@000-base
cargo rustc -p syntex_syntax  -- -Ztime-passes -Zinput-stats
time: 0.092; rss: 71MB	parsing
Lines of code:             33687
Pre-expansion node count:  223115
time: 0.000; rss: 71MB	recursion limit
time: 0.000; rss: 71MB	crate injection
time: 0.000; rss: 71MB	plugin loading
time: 0.000; rss: 71MB	plugin registration
time: 0.249; rss: 146MB	expansion
time: 0.000; rss: 146MB	maybe building test harness
time: 0.007; rss: 146MB	maybe creating a macro crate
Post-expansion node count: 638863
time: 0.000; rss: 146MB	checking for inline asm in case the target doesn't support it
time: 0.014; rss: 146MB	complete gated feature checking
time: 0.025; rss: 146MB	early lint checks
time: 0.008; rss: 146MB	AST validation
time: 0.081; rss: 161MB	name resolution
time: 0.067; rss: 194MB	lowering ast -> hir
time: 0.011; rss: 187MB	indexing hir
time: 0.007; rss: 187MB	attribute checking
time: 0.002; rss: 149MB	language item collection
time: 0.012; rss: 149MB	lifetime resolution
time: 0.000; rss: 149MB	looking for entry point
time: 0.000; rss: 149MB	looking for plugin registrar
time: 0.051; rss: 169MB	region resolution
time: 0.009; rss: 169MB	loop checking
time: 0.002; rss: 169MB	static item recursion checking
time: 0.386; rss: 171MB	compute_incremental_hashes_map
time: 0.000; rss: 171MB	load_dep_graph
time: 0.010; rss: 171MB	stability index
time: 0.019; rss: 171MB	stability checking
time: 0.050; rss: 175MB	type collecting
time: 0.002; rss: 175MB	variance inference
time: 0.002; rss: 176MB	impl wf inference
time: 0.018; rss: 177MB	coherence checking
time: 0.085; rss: 179MB	wf checking
time: 0.184; rss: 183MB	item-types checking
time: 3.396; rss: 234MB	item-bodies checking
time: 0.000; rss: 234MB	drop-impl checking
time: 0.209; rss: 244MB	const checking
time: 0.054; rss: 244MB	privacy checking
time: 0.016; rss: 244MB	intrinsic checking
time: 0.013; rss: 244MB	effect checking
time: 0.046; rss: 244MB	match checking
time: 0.045; rss: 251MB	liveness checking
time: 0.168; rss: 251MB	rvalue checking
time: 0.434; rss: 435MB	MIR dump
  time: 0.058; rss: 439MB	SimplifyCfg
  time: 0.074; rss: 439MB	QualifyAndPromoteConstants
  time: 0.107; rss: 439MB	TypeckMir
  time: 0.004; rss: 439MB	SimplifyBranches
  time: 0.030; rss: 439MB	SimplifyCfg
time: 0.274; rss: 439MB	MIR cleanup and validation
time: 0.467; rss: 441MB	borrow checking
time: 0.024; rss: 441MB	reachability checking
time: 0.037; rss: 441MB	death checking
time: 0.000; rss: 441MB	unused lib feature checking
time: 0.174; rss: 441MB	lint checking
time: 0.000; rss: 441MB	resolving dependency formats
  time: 0.003; rss: 441MB	NoLandingPads
  time: 0.026; rss: 441MB	SimplifyCfg
  time: 0.074; rss: 447MB	EraseRegions
  time: 0.011; rss: 447MB	AddCallGuards
  time: 0.309; rss: 466MB	ElaborateDrops
  time: 0.003; rss: 466MB	NoLandingPads
  time: 0.053; rss: 466MB	SimplifyCfg
  time: 0.029; rss: 466MB	InstCombine
  time: 0.012; rss: 465MB	Deaggregator
  time: 0.002; rss: 465MB	CopyPropagation
  time: 0.034; rss: 465MB	SimplifyLocals
  time: 0.009; rss: 465MB	AddCallGuards
  time: 0.002; rss: 465MB	PreTrans
time: 0.569; rss: 465MB	MIR optimisations
  time: 0.081; rss: 473MB	write metadata
  time: 0.405; rss: 485MB	translation item collection
  time: 0.066; rss: 490MB	codegen unit partitioning
  time: 0.054; rss: 744MB	internalize symbols
time: 5.111; rss: 744MB	translation
time: 0.000; rss: 744MB	assert dep graph
time: 0.000; rss: 744MB	serialize dep graph
  time: 0.537; rss: 425MB	llvm function passes [0]
  time: 0.306; rss: 432MB	llvm module passes [0]
  time: 10.508; rss: 426MB	codegen passes [0]
  time: 0.000; rss: 426MB	codegen passes [0]
time: 12.158; rss: 426MB	LLVM passes
time: 0.000; rss: 426MB	serialize work products
time: 0.346; rss: 117MB	linking
done
