commit b197e4a45f31849c29bf6de260531a8f85ba1bf5
Merge: 4cda3b6 e080804
Author: bors <bors@rust-lang.org>
Date:   Wed Dec 14 17:36:01 2016 +0000

    Auto merge of #38295 - dylanmckay:llvm-4.0-di-globalvar, r=michaelwoerister
    
    [LLVM 4.0] Update LLVM global variable debug info API for 4.0
    
    This teaches Rust about an LLVM 4.0 API change for creating debug info
    for global variables.
    
    This change was made in upstream LLVM patch https://reviews.llvm.org/D20147
    
    This is almost a 1:1 copy of how clang did it in http://reviews.llvm.org/D20415
rustc: ./syntex-0.42.2@010-incr
find . -name '*.rs' | xargs touch
RUSTFLAGS="-Z incremental=incr" \
    cargo rustc -p syntex_syntax  -- \
    -Ztime-passes -Zinput-stats -Z incremental-info
time: 0.092; rss: 75MB	parsing
Lines of code:             33687
Pre-expansion node count:  223115
time: 0.000; rss: 75MB	recursion limit
time: 0.000; rss: 75MB	crate injection
time: 0.000; rss: 75MB	plugin loading
time: 0.000; rss: 75MB	plugin registration
time: 0.245; rss: 152MB	expansion
time: 0.000; rss: 152MB	maybe building test harness
time: 0.006; rss: 152MB	maybe creating a macro crate
Post-expansion node count: 638863
time: 0.000; rss: 152MB	checking for inline asm in case the target doesn't support it
time: 0.012; rss: 152MB	complete gated feature checking
time: 0.023; rss: 152MB	early lint checks
time: 0.007; rss: 152MB	AST validation
time: 0.075; rss: 166MB	name resolution
time: 0.058; rss: 200MB	lowering ast -> hir
time: 0.009; rss: 192MB	indexing hir
time: 0.006; rss: 192MB	attribute checking
time: 0.002; rss: 154MB	language item collection
time: 0.011; rss: 156MB	lifetime resolution
time: 0.000; rss: 156MB	looking for entry point
time: 0.000; rss: 156MB	looking for plugin registrar
time: 0.045; rss: 177MB	region resolution
time: 0.007; rss: 177MB	loop checking
time: 0.002; rss: 177MB	static item recursion checking
time: 0.381; rss: 178MB	compute_incremental_hashes_map
time: 0.000; rss: 178MB	load_dep_graph
time: 0.009; rss: 178MB	stability index
time: 0.020; rss: 182MB	stability checking
time: 0.055; rss: 190MB	type collecting
time: 0.003; rss: 190MB	variance inference
time: 0.006; rss: 193MB	impl wf inference
time: 0.026; rss: 197MB	coherence checking
time: 0.087; rss: 200MB	wf checking
time: 0.196; rss: 208MB	item-types checking
time: 3.569; rss: 267MB	item-bodies checking
time: 0.000; rss: 267MB	drop-impl checking
time: 0.219; rss: 277MB	const checking
time: 0.066; rss: 277MB	privacy checking
time: 0.021; rss: 284MB	intrinsic checking
time: 0.016; rss: 284MB	effect checking
time: 0.049; rss: 284MB	match checking
time: 0.049; rss: 292MB	liveness checking
time: 0.176; rss: 294MB	rvalue checking
time: 0.360; rss: 481MB	MIR dump
  time: 0.056; rss: 483MB	SimplifyCfg
  time: 0.074; rss: 483MB	QualifyAndPromoteConstants
  time: 0.121; rss: 500MB	TypeckMir
  time: 0.004; rss: 500MB	SimplifyBranches
  time: 0.033; rss: 500MB	SimplifyCfg
time: 0.289; rss: 500MB	MIR cleanup and validation
time: 0.477; rss: 500MB	borrow checking
time: 0.025; rss: 500MB	reachability checking
time: 0.043; rss: 500MB	death checking
time: 0.000; rss: 500MB	unused lib feature checking
time: 0.181; rss: 500MB	lint checking
time: 0.000; rss: 500MB	resolving dependency formats
  time: 0.004; rss: 500MB	NoLandingPads
  time: 0.029; rss: 500MB	SimplifyCfg
  time: 0.071; rss: 509MB	EraseRegions
  time: 0.012; rss: 509MB	AddCallGuards
  time: 0.280; rss: 529MB	ElaborateDrops
  time: 0.003; rss: 529MB	NoLandingPads
  time: 0.055; rss: 529MB	SimplifyCfg
  time: 0.031; rss: 528MB	InstCombine
  time: 0.012; rss: 528MB	Deaggregator
  time: 0.004; rss: 528MB	CopyPropagation
  time: 0.034; rss: 528MB	SimplifyLocals
  time: 0.010; rss: 528MB	AddCallGuards
  time: 0.003; rss: 528MB	PreTrans
time: 0.550; rss: 528MB	MIR optimisations
  time: 0.064; rss: 537MB	write metadata
  time: 0.397; rss: 549MB	translation item collection
  time: 0.072; rss: 554MB	codegen unit partitioning
  time: 0.048; rss: 1457MB	internalize symbols
time: 12.001; rss: 1457MB	translation
time: 0.000; rss: 1457MB	assert dep graph
time: 1.360; rss: 1485MB	serialize dep graph
incremental: re-using 0 out of 50 modules
time: 0.000; rss: 1193MB	llvm function passes [1]
time: 0.000; rss: 1193MB	llvm module passes [1]
time: 0.001; rss: 1206MB	llvm function passes [0]
time: 0.000; rss: 1206MB	llvm module passes [0]
time: 0.001; rss: 1206MB	llvm function passes [2]
time: 0.000; rss: 1206MB	llvm module passes [2]
time: 0.001; rss: 1206MB	codegen passes [1]
time: 0.002; rss: 1206MB	llvm function passes [3]
time: 0.000; rss: 1206MB	llvm module passes [3]
time: 0.003; rss: 1206MB	codegen passes [0]
time: 0.004; rss: 1206MB	llvm function passes [4]
time: 0.002; rss: 1208MB	llvm module passes [4]
time: 0.001; rss: 1210MB	llvm function passes [30]
time: 0.000; rss: 1210MB	llvm module passes [30]
time: 0.009; rss: 1210MB	llvm function passes [1]
time: 0.016; rss: 1212MB	llvm function passes [5]
time: 0.018; rss: 1223MB	codegen passes [2]
time: 0.007; rss: 1223MB	llvm module passes [5]
time: 0.017; rss: 1229MB	codegen passes [30]
time: 0.000; rss: 1229MB	llvm function passes [30]
time: 0.000; rss: 1229MB	llvm module passes [30]
time: 0.001; rss: 1231MB	codegen passes [30]
time: 0.003; rss: 1231MB	llvm function passes [21]
time: 0.001; rss: 1231MB	llvm module passes [21]
time: 0.028; rss: 1231MB	codegen passes [3]
time: 0.027; rss: 1231MB	llvm module passes [1]
time: 0.000; rss: 1238MB	llvm function passes [29]
time: 0.000; rss: 1238MB	llvm module passes [29]
time: 0.004; rss: 1238MB	codegen passes [29]
time: 0.029; rss: 1242MB	llvm function passes [28]
time: 0.000; rss: 1244MB	llvm function passes [49]
time: 0.000; rss: 1244MB	llvm module passes [49]
time: 0.001; rss: 1244MB	codegen passes [49]
time: 0.008; rss: 1244MB	llvm module passes [28]
time: 0.054; rss: 1244MB	llvm function passes [27]
time: 0.008; rss: 1244MB	llvm module passes [27]
time: 0.084; rss: 1254MB	codegen passes [4]
time: 0.075; rss: 1263MB	llvm function passes [26]
time: 0.082; rss: 1263MB	llvm function passes [18]
time: 0.058; rss: 1267MB	llvm function passes [25]
time: 0.085; rss: 1267MB	llvm function passes [30]
time: 0.014; rss: 1269MB	llvm module passes [25]
time: 0.100; rss: 1267MB	llvm function passes [24]
time: 0.084; rss: 1271MB	llvm function passes [19]
time: 0.000; rss: 1271MB	llvm module passes [19]
time: 0.020; rss: 1271MB	llvm module passes [30]
time: 0.085; rss: 1271MB	llvm function passes [20]
time: 0.000; rss: 1271MB	llvm module passes [20]
time: 0.036; rss: 1271MB	llvm module passes [26]
time: 0.021; rss: 1277MB	llvm function passes [45]
time: 0.091; rss: 1279MB	llvm function passes [49]
time: 0.059; rss: 1278MB	llvm module passes [18]
time: 0.030; rss: 1278MB	llvm module passes [24]
time: 0.032; rss: 1285MB	codegen passes [19]
time: 0.035; rss: 1287MB	codegen passes [20]
time: 0.135; rss: 1287MB	codegen passes [21]
time: 0.030; rss: 1289MB	llvm module passes [45]
time: 0.033; rss: 1291MB	llvm module passes [49]
time: 0.182; rss: 1291MB	llvm function passes [0]
time: 0.028; rss: 1293MB	llvm function passes [20]
time: 0.025; rss: 1293MB	llvm function passes [42]
time: 0.009; rss: 1296MB	llvm module passes [42]
time: 0.013; rss: 1298MB	llvm module passes [20]
time: 0.194; rss: 1307MB	llvm function passes [29]
time: 0.111; rss: 1315MB	llvm function passes [43]
time: 0.179; rss: 1318MB	llvm function passes [46]
time: 0.019; rss: 1321MB	llvm module passes [43]
time: 0.004; rss: 1323MB	llvm function passes [32]
time: 0.064; rss: 1323MB	llvm module passes [29]
time: 0.033; rss: 1330MB	llvm module passes [46]
time: 0.322; rss: 1332MB	llvm function passes [31]
time: 0.076; rss: 1334MB	llvm function passes [34]
time: 0.208; rss: 1334MB	llvm function passes [44]
time: 0.027; rss: 1342MB	llvm function passes [17]
time: 0.000; rss: 1342MB	llvm module passes [17]
time: 0.117; rss: 1369MB	llvm function passes [35]
time: 0.177; rss: 1342MB	llvm module passes [0]
time: 0.035; rss: 1377MB	llvm module passes [44]
time: 0.026; rss: 1376MB	codegen passes [17]
time: 0.292; rss: 1376MB	llvm function passes [47]
time: 0.000; rss: 1376MB	codegen passes [16]
time: 0.062; rss: 1380MB	llvm module passes [35]
time: 0.344; rss: 1381MB	llvm function passes [48]
time: 0.074; rss: 1381MB	llvm module passes [47]
time: 0.232; rss: 1383MB	llvm function passes [40]
time: 0.323; rss: 1391MB	llvm function passes [21]
time: 0.181; rss: 1390MB	llvm module passes [31]
time: 0.072; rss: 1392MB	llvm module passes [48]
time: 0.481; rss: 1392MB	llvm function passes [3]
time: 0.156; rss: 1392MB	llvm function passes [39]
time: 0.002; rss: 1388MB	llvm module passes [39]
time: 0.187; rss: 1388MB	llvm module passes [34]
time: 0.241; rss: 1385MB	llvm module passes [32]
time: 0.451; rss: 1384MB	llvm function passes [4]
time: 0.330; rss: 1380MB	llvm function passes [41]
time: 0.084; rss: 1379MB	llvm module passes [40]
time: 0.036; rss: 1379MB	codegen passes [39]
time: 0.577; rss: 1387MB	llvm function passes [22]
time: 0.074; rss: 1388MB	llvm module passes [4]
time: 0.098; rss: 1395MB	llvm module passes [41]
time: 0.268; rss: 1395MB	llvm function passes [23]
time: 0.390; rss: 1395MB	llvm function passes [37]
time: 0.648; rss: 1397MB	llvm function passes [2]
time: 0.177; rss: 1396MB	llvm module passes [21]
time: 0.509; rss: 1396MB	llvm function passes [19]
time: 0.406; rss: 1392MB	codegen passes [42]
time: 0.395; rss: 1397MB	llvm function passes [33]
time: 0.051; rss: 1398MB	llvm module passes [23]
time: 0.456; rss: 1405MB	llvm function passes [36]
time: 0.091; rss: 1405MB	llvm module passes [37]
time: 0.112; rss: 1414MB	llvm module passes [2]
time: 0.075; rss: 1416MB	llvm module passes [36]
time: 0.179; rss: 1422MB	llvm module passes [19]
time: 0.339; rss: 1422MB	llvm module passes [3]
time: 0.178; rss: 1429MB	llvm module passes [33]
time: 0.881; rss: 1432MB	codegen passes [1]
time: 0.484; rss: 1445MB	codegen passes [32]
time: 0.681; rss: 1461MB	llvm module passes [22]
time: 1.210; rss: 1470MB	codegen passes [5]
time: 1.237; rss: 1455MB	codegen passes [24]
time: 1.213; rss: 1441MB	codegen passes [43]
time: 0.988; rss: 1435MB	codegen passes [23]
time: 1.658; rss: 1430MB	codegen passes [28]
time: 1.384; rss: 1461MB	codegen passes [45]
time: 0.919; rss: 1459MB	codegen passes [37]
time: 1.699; rss: 1452MB	codegen passes [20]
time: 1.929; rss: 1436MB	codegen passes [27]
time: 1.827; rss: 1450MB	codegen passes [26]
time: 2.063; rss: 1480MB	codegen passes [49]
time: 2.145; rss: 1475MB	codegen passes [30]
time: 2.386; rss: 1476MB	codegen passes [25]
time: 2.018; rss: 1505MB	codegen passes [21]
time: 2.363; rss: 1509MB	codegen passes [34]
time: 2.459; rss: 1534MB	codegen passes [44]
time: 2.653; rss: 1519MB	codegen passes [35]
time: 2.711; rss: 1543MB	codegen passes [29]
time: 3.044; rss: 1608MB	codegen passes [46]
time: 3.092; rss: 1587MB	codegen passes [18]
time: 3.313; rss: 1628MB	codegen passes [40]
time: 3.502; rss: 1656MB	codegen passes [4]
time: 3.297; rss: 1630MB	codegen passes [3]
time: 3.606; rss: 1624MB	codegen passes [47]
time: 3.702; rss: 1605MB	codegen passes [33]
time: 3.886; rss: 1600MB	codegen passes [48]
time: 4.616; rss: 1578MB	codegen passes [0]
time: 4.593; rss: 1563MB	codegen passes [41]
time: 4.671; rss: 1558MB	codegen passes [36]
time: 4.159; rss: 1504MB	codegen passes [2]
time: 4.758; rss: 1466MB	codegen passes [19]
time: 5.088; rss: 1412MB	codegen passes [31]
time: 4.891; rss: 1339MB	codegen passes [22]
time: 7.452; rss: 1338MB	LLVM passes
time: 0.000; rss: 1338MB	serialize work products
time: 1.100; rss: 307MB	linking
done
