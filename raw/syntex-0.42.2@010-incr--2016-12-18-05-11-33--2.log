commit 8327b5afafde7cdd6fd4e939d9a8fe12f76503ef
Merge: d54e723 ff59474
Author: bors <bors@rust-lang.org>
Date:   Sun Dec 18 07:59:32 2016 +0000

    Auto merge of #37429 - camlorn:univariant_layout_optimization, r=eddyb
    
    struct field reordering and optimization
    
    This is work in progress.  The goal is to divorce the order of fields in source code from the order of fields in the LLVM IR, then optimize structs (and tuples/enum variants)by always ordering fields from least to most aligned.  It does not work yet.  I intend to check compiler memory usage as a benchmark, and a crater run will probably be required.
    
    I don't know enough of the compiler to complete this work unaided.  If you see places that still need updating, please mention them.  The only one I know of currently is debuginfo, which I'm putting off intentionally until a bit later.
    
    r? @eddyb
rustc: ./syntex-0.42.2@010-incr
find . -name '*.rs' | xargs touch
RUSTFLAGS="-Z incremental=incr" \
    cargo rustc -p syntex_syntax  -- \
    -Ztime-passes -Zinput-stats -Z incremental-info
time: 0.092; rss: 75MB	parsing
Lines of code:             33687
Pre-expansion node count:  223115
time: 0.000; rss: 75MB	recursion limit
time: 0.000; rss: 75MB	crate injection
time: 0.000; rss: 75MB	plugin loading
time: 0.000; rss: 75MB	plugin registration
time: 0.241; rss: 151MB	expansion
time: 0.000; rss: 151MB	maybe building test harness
time: 0.006; rss: 151MB	maybe creating a macro crate
Post-expansion node count: 638863
time: 0.000; rss: 151MB	checking for inline asm in case the target doesn't support it
time: 0.012; rss: 151MB	complete gated feature checking
time: 0.023; rss: 151MB	early lint checks
time: 0.007; rss: 151MB	AST validation
time: 0.075; rss: 166MB	name resolution
time: 0.058; rss: 199MB	lowering ast -> hir
time: 0.010; rss: 192MB	indexing hir
time: 0.006; rss: 192MB	attribute checking
time: 0.002; rss: 154MB	language item collection
time: 0.011; rss: 156MB	lifetime resolution
time: 0.000; rss: 156MB	looking for entry point
time: 0.000; rss: 156MB	looking for plugin registrar
time: 0.045; rss: 177MB	region resolution
time: 0.007; rss: 177MB	loop checking
time: 0.002; rss: 177MB	static item recursion checking
time: 0.381; rss: 178MB	compute_incremental_hashes_map
time: 0.000; rss: 178MB	load_dep_graph
time: 0.009; rss: 178MB	stability index
time: 0.018; rss: 181MB	stability checking
time: 0.054; rss: 190MB	type collecting
time: 0.004; rss: 190MB	variance inference
time: 0.006; rss: 193MB	impl wf inference
time: 0.025; rss: 197MB	coherence checking
time: 0.085; rss: 200MB	wf checking
time: 0.197; rss: 208MB	item-types checking
time: 3.575; rss: 266MB	item-bodies checking
time: 0.000; rss: 266MB	drop-impl checking
time: 0.216; rss: 277MB	const checking
time: 0.057; rss: 277MB	privacy checking
time: 0.019; rss: 284MB	intrinsic checking
time: 0.013; rss: 284MB	effect checking
time: 0.049; rss: 284MB	match checking
time: 0.046; rss: 290MB	liveness checking
time: 0.173; rss: 292MB	rvalue checking
time: 0.359; rss: 482MB	MIR dump
  time: 0.056; rss: 483MB	SimplifyCfg
  time: 0.073; rss: 483MB	QualifyAndPromoteConstants
  time: 0.118; rss: 500MB	TypeckMir
  time: 0.004; rss: 500MB	SimplifyBranches
  time: 0.031; rss: 500MB	SimplifyCfg
time: 0.283; rss: 500MB	MIR cleanup and validation
time: 0.467; rss: 500MB	borrow checking
time: 0.024; rss: 500MB	reachability checking
time: 0.038; rss: 500MB	death checking
time: 0.000; rss: 500MB	unused lib feature checking
time: 0.179; rss: 500MB	lint checking
time: 0.000; rss: 500MB	resolving dependency formats
  time: 0.004; rss: 500MB	NoLandingPads
  time: 0.027; rss: 500MB	SimplifyCfg
  time: 0.064; rss: 509MB	EraseRegions
  time: 0.011; rss: 509MB	AddCallGuards
  time: 0.270; rss: 531MB	ElaborateDrops
  time: 0.004; rss: 531MB	NoLandingPads
  time: 0.054; rss: 529MB	SimplifyCfg
  time: 0.029; rss: 529MB	InstCombine
  time: 0.013; rss: 528MB	Deaggregator
  time: 0.004; rss: 528MB	CopyPropagation
  time: 0.035; rss: 528MB	SimplifyLocals
  time: 0.010; rss: 528MB	AddCallGuards
  time: 0.003; rss: 528MB	PreTrans
time: 0.526; rss: 528MB	MIR optimisations
  time: 0.064; rss: 538MB	write metadata
  time: 0.392; rss: 552MB	translation item collection
  time: 0.071; rss: 554MB	codegen unit partitioning
  time: 0.048; rss: 1457MB	internalize symbols
time: 11.796; rss: 1457MB	translation
time: 0.000; rss: 1457MB	assert dep graph
time: 1.362; rss: 1485MB	serialize dep graph
incremental: re-using 0 out of 50 modules
time: 0.000; rss: 1195MB	llvm function passes [0]
time: 0.000; rss: 1195MB	llvm module passes [0]
time: 0.001; rss: 1204MB	llvm function passes [2]
time: 0.000; rss: 1204MB	llvm module passes [2]
time: 0.001; rss: 1204MB	llvm function passes [1]
time: 0.000; rss: 1204MB	llvm module passes [1]
time: 0.002; rss: 1206MB	llvm function passes [4]
time: 0.002; rss: 1206MB	codegen passes [0]
time: 0.000; rss: 1206MB	llvm module passes [4]
time: 0.004; rss: 1206MB	llvm function passes [3]
time: 0.004; rss: 1208MB	codegen passes [2]
time: 0.002; rss: 1208MB	llvm module passes [3]
time: 0.001; rss: 1208MB	llvm function passes [2]
time: 0.000; rss: 1208MB	llvm module passes [2]
time: 0.007; rss: 1210MB	codegen passes [1]
time: 0.011; rss: 1212MB	llvm function passes [49]
time: 0.017; rss: 1214MB	llvm function passes [5]
time: 0.010; rss: 1214MB	llvm module passes [49]
time: 0.008; rss: 1223MB	llvm module passes [5]
time: 0.024; rss: 1223MB	llvm function passes [1]
time: 0.034; rss: 1223MB	llvm function passes [19]
time: 0.037; rss: 1227MB	codegen passes [2]
time: 0.014; rss: 1227MB	llvm module passes [1]
time: 0.043; rss: 1227MB	codegen passes [4]
time: 0.000; rss: 1227MB	llvm function passes [4]
time: 0.000; rss: 1227MB	llvm module passes [4]
time: 0.001; rss: 1227MB	codegen passes [4]
time: 0.003; rss: 1227MB	llvm function passes [4]
time: 0.001; rss: 1227MB	llvm module passes [4]
time: 0.016; rss: 1229MB	llvm module passes [19]
time: 0.033; rss: 1231MB	llvm function passes [24]
time: 0.051; rss: 1231MB	llvm function passes [6]
time: 0.000; rss: 1246MB	llvm function passes [34]
time: 0.004; rss: 1250MB	llvm module passes [34]
time: 0.032; rss: 1250MB	llvm module passes [24]
time: 0.008; rss: 1250MB	codegen passes [34]
time: 0.000; rss: 1250MB	llvm function passes [34]
time: 0.000; rss: 1250MB	llvm module passes [34]
time: 0.001; rss: 1250MB	codegen passes [34]
time: 0.085; rss: 1250MB	llvm function passes [20]
time: 0.040; rss: 1260MB	llvm function passes [22]
time: 0.000; rss: 1260MB	llvm module passes [22]
time: 0.051; rss: 1263MB	llvm function passes [29]
time: 0.012; rss: 1263MB	llvm module passes [20]
time: 0.048; rss: 1263MB	llvm function passes [33]
time: 0.000; rss: 1263MB	llvm module passes [33]
time: 0.054; rss: 1263MB	llvm module passes [6]
time: 0.027; rss: 1273MB	llvm module passes [29]
time: 0.143; rss: 1282MB	codegen passes [3]
time: 0.034; rss: 1288MB	codegen passes [33]
time: 0.010; rss: 1294MB	llvm function passes [3]
time: 0.004; rss: 1296MB	llvm module passes [3]
time: 0.039; rss: 1282MB	codegen passes [22]
time: 0.002; rss: 1296MB	llvm function passes [22]
time: 0.002; rss: 1296MB	llvm module passes [22]
time: 0.178; rss: 1296MB	llvm function passes [0]
time: 0.116; rss: 1296MB	llvm function passes [21]
time: 0.122; rss: 1300MB	llvm function passes [23]
time: 0.132; rss: 1344MB	codegen passes [4]
time: 0.152; rss: 1333MB	llvm function passes [35]
time: 0.151; rss: 1334MB	llvm function passes [34]
time: 0.082; rss: 1334MB	llvm module passes [0]
time: 0.004; rss: 1334MB	llvm function passes [46]
time: 0.000; rss: 1334MB	llvm function passes [48]
time: 0.000; rss: 1334MB	llvm module passes [48]
time: 0.108; rss: 1334MB	llvm function passes [26]
time: 0.000; rss: 1334MB	codegen passes [8]
time: 0.066; rss: 1334MB	llvm module passes [23]
time: 0.021; rss: 1334MB	llvm module passes [34]
time: 0.043; rss: 1336MB	llvm module passes [35]
time: 0.024; rss: 1336MB	llvm module passes [26]
time: 0.163; rss: 1336MB	llvm function passes [37]
time: 0.047; rss: 1338MB	llvm module passes [46]
time: 0.014; rss: 1346MB	llvm module passes [37]
time: 0.125; rss: 1348MB	llvm function passes [27]
time: 0.226; rss: 1348MB	llvm function passes [25]
time: 0.204; rss: 1350MB	llvm function passes [7]
time: 0.342; rss: 1350MB	llvm function passes [18]
time: 0.153; rss: 1350MB	codegen passes [22]
time: 0.034; rss: 1350MB	llvm module passes [27]
time: 0.024; rss: 1350MB	llvm module passes [7]
time: 0.143; rss: 1352MB	llvm function passes [43]
time: 0.054; rss: 1354MB	llvm module passes [25]
time: 0.380; rss: 1369MB	llvm function passes [30]
time: 0.026; rss: 1373MB	llvm module passes [43]
time: 0.140; rss: 1375MB	codegen passes [48]
time: 0.315; rss: 1387MB	llvm function passes [32]
time: 0.216; rss: 1387MB	llvm function passes [4]
time: 0.117; rss: 1396MB	llvm module passes [18]
time: 0.420; rss: 1396MB	llvm function passes [2]
time: 0.320; rss: 1404MB	llvm function passes [39]
time: 0.239; rss: 1404MB	llvm function passes [44]
time: 0.376; rss: 1404MB	llvm function passes [36]
time: 0.382; rss: 1406MB	llvm function passes [31]
time: 0.012; rss: 1406MB	llvm module passes [39]
time: 0.338; rss: 1404MB	llvm module passes [21]
time: 0.105; rss: 1404MB	llvm module passes [32]
time: 0.303; rss: 1406MB	llvm function passes [42]
time: 0.155; rss: 1414MB	llvm module passes [30]
time: 0.354; rss: 1414MB	llvm function passes [38]
time: 0.326; rss: 1409MB	llvm function passes [47]
time: 0.103; rss: 1408MB	llvm module passes [31]
time: 0.132; rss: 1407MB	llvm module passes [2]
time: 0.114; rss: 1407MB	llvm module passes [36]
time: 0.045; rss: 1405MB	llvm module passes [47]
time: 0.216; rss: 1398MB	llvm module passes [4]
time: 0.077; rss: 1397MB	llvm module passes [38]
time: 0.193; rss: 1399MB	llvm module passes [44]
time: 0.147; rss: 1402MB	llvm module passes [42]
time: 0.554; rss: 1411MB	llvm function passes [33]
time: 0.217; rss: 1418MB	codegen passes [46]
time: 0.595; rss: 1418MB	llvm function passes [45]
time: 0.642; rss: 1423MB	llvm function passes [40]
time: 0.617; rss: 1426MB	codegen passes [3]
time: 0.902; rss: 1429MB	codegen passes [49]
time: 0.211; rss: 1428MB	llvm module passes [40]
time: 0.261; rss: 1439MB	llvm module passes [45]
time: 0.474; rss: 1441MB	llvm module passes [33]
time: 0.624; rss: 1492MB	codegen passes [47]
time: 1.162; rss: 1480MB	codegen passes [24]
time: 1.376; rss: 1467MB	codegen passes [19]
time: 1.181; rss: 1451MB	codegen passes [26]
time: 1.673; rss: 1446MB	codegen passes [5]
time: 1.656; rss: 1437MB	codegen passes [1]
time: 1.365; rss: 1448MB	codegen passes [37]
time: 1.457; rss: 1444MB	codegen passes [39]
time: 1.658; rss: 1428MB	codegen passes [20]
time: 1.826; rss: 1463MB	codegen passes [4]
time: 1.867; rss: 1461MB	codegen passes [44]
time: 2.357; rss: 1482MB	codegen passes [29]
time: 2.147; rss: 1470MB	codegen passes [34]
time: 2.203; rss: 1469MB	codegen passes [7]
time: 2.484; rss: 1472MB	codegen passes [35]
time: 2.410; rss: 1484MB	codegen passes [27]
time: 2.699; rss: 1500MB	codegen passes [43]
time: 3.138; rss: 1620MB	codegen passes [25]
time: 3.208; rss: 1605MB	codegen passes [23]
time: 3.495; rss: 1637MB	codegen passes [6]
time: 3.998; rss: 1713MB	codegen passes [21]
time: 3.785; rss: 1693MB	codegen passes [32]
time: 4.082; rss: 1721MB	codegen passes [40]
time: 4.017; rss: 1712MB	codegen passes [0]
time: 3.899; rss: 1672MB	codegen passes [45]
time: 4.204; rss: 1626MB	codegen passes [36]
time: 4.216; rss: 1591MB	codegen passes [31]
time: 4.101; rss: 1555MB	codegen passes [38]
time: 4.374; rss: 1531MB	codegen passes [42]
time: 4.983; rss: 1504MB	codegen passes [30]
time: 4.678; rss: 1472MB	codegen passes [18]
time: 4.951; rss: 1402MB	codegen passes [33]
time: 5.659; rss: 1339MB	codegen passes [2]
time: 7.750; rss: 1339MB	LLVM passes
time: 0.000; rss: 1339MB	serialize work products
time: 1.114; rss: 298MB	linking
done
