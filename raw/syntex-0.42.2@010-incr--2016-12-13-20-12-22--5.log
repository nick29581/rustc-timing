commit aa7a2e9e61cfb9469c7eb88308fa2e1a087ebdb4
Merge: a274617 5bf4d6f
Author: bors <bors@rust-lang.org>
Date:   Wed Dec 14 00:31:48 2016 +0000

    Auto merge of #38181 - jsgf:test-filter-exact, r=alexcrichton
    
    libtest: add --exact to make filter matching exact
    
    Filter matching is by substring by default. This makes it impossible
    to run a single test if its name is a substring of some other test.
    For example, its not possible to run just `mymod::test` with these
    tests:
    
    ```
      mymod::test
      mymod::test1
      mymod::test_module::moretests
    ```
    
    You could declare by convention that no test has a name that's a
    substring of another test, but that's not really practical.
    
    This PR adds the `--exact` flag, to make filter matching exactly
    match the complete name.
rustc: ./syntex-0.42.2@010-incr
find . -name '*.rs' | xargs touch
RUSTFLAGS="-Z incremental=incr" \
    cargo rustc -p syntex_syntax  -- \
    -Ztime-passes -Zinput-stats -Z incremental-info
time: 0.091; rss: 75MB	parsing
Lines of code:             33687
Pre-expansion node count:  223115
time: 0.000; rss: 75MB	recursion limit
time: 0.000; rss: 75MB	crate injection
time: 0.000; rss: 75MB	plugin loading
time: 0.000; rss: 75MB	plugin registration
time: 0.240; rss: 152MB	expansion
time: 0.000; rss: 152MB	maybe building test harness
time: 0.006; rss: 152MB	maybe creating a macro crate
Post-expansion node count: 638863
time: 0.000; rss: 152MB	checking for inline asm in case the target doesn't support it
time: 0.012; rss: 152MB	complete gated feature checking
time: 0.023; rss: 152MB	early lint checks
time: 0.007; rss: 152MB	AST validation
time: 0.075; rss: 166MB	name resolution
time: 0.058; rss: 200MB	lowering ast -> hir
time: 0.010; rss: 192MB	indexing hir
time: 0.006; rss: 192MB	attribute checking
time: 0.002; rss: 154MB	language item collection
time: 0.011; rss: 156MB	lifetime resolution
time: 0.000; rss: 156MB	looking for entry point
time: 0.000; rss: 156MB	looking for plugin registrar
time: 0.045; rss: 177MB	region resolution
time: 0.007; rss: 177MB	loop checking
time: 0.002; rss: 177MB	static item recursion checking
time: 0.380; rss: 178MB	compute_incremental_hashes_map
time: 0.000; rss: 178MB	load_dep_graph
time: 0.009; rss: 178MB	stability index
time: 0.021; rss: 182MB	stability checking
time: 0.055; rss: 190MB	type collecting
time: 0.003; rss: 190MB	variance inference
time: 0.006; rss: 193MB	impl wf inference
time: 0.026; rss: 197MB	coherence checking
time: 0.087; rss: 199MB	wf checking
time: 0.272; rss: 208MB	item-types checking
time: 3.760; rss: 268MB	item-bodies checking
time: 0.000; rss: 268MB	drop-impl checking
time: 0.214; rss: 277MB	const checking
time: 0.057; rss: 277MB	privacy checking
time: 0.021; rss: 283MB	intrinsic checking
time: 0.016; rss: 283MB	effect checking
time: 0.049; rss: 283MB	match checking
time: 0.049; rss: 291MB	liveness checking
time: 0.179; rss: 293MB	rvalue checking
time: 0.368; rss: 482MB	MIR dump
  time: 0.058; rss: 483MB	SimplifyCfg
  time: 0.074; rss: 483MB	QualifyAndPromoteConstants
  time: 0.120; rss: 500MB	TypeckMir
  time: 0.004; rss: 500MB	SimplifyBranches
  time: 0.033; rss: 500MB	SimplifyCfg
time: 0.289; rss: 500MB	MIR cleanup and validation
time: 0.477; rss: 500MB	borrow checking
time: 0.024; rss: 500MB	reachability checking
time: 0.038; rss: 500MB	death checking
time: 0.000; rss: 500MB	unused lib feature checking
time: 0.181; rss: 500MB	lint checking
time: 0.000; rss: 500MB	resolving dependency formats
  time: 0.004; rss: 500MB	NoLandingPads
  time: 0.027; rss: 500MB	SimplifyCfg
  time: 0.064; rss: 509MB	EraseRegions
  time: 0.011; rss: 509MB	AddCallGuards
  time: 0.270; rss: 531MB	ElaborateDrops
  time: 0.004; rss: 531MB	NoLandingPads
  time: 0.052; rss: 531MB	SimplifyCfg
  time: 0.028; rss: 531MB	InstCombine
  time: 0.013; rss: 531MB	Deaggregator
  time: 0.004; rss: 531MB	CopyPropagation
  time: 0.035; rss: 531MB	SimplifyLocals
  time: 0.010; rss: 531MB	AddCallGuards
  time: 0.003; rss: 531MB	PreTrans
time: 0.523; rss: 531MB	MIR optimisations
  time: 0.065; rss: 539MB	write metadata
  time: 0.393; rss: 552MB	translation item collection
  time: 0.072; rss: 556MB	codegen unit partitioning
  time: 0.048; rss: 1458MB	internalize symbols
time: 11.774; rss: 1458MB	translation
time: 0.000; rss: 1458MB	assert dep graph
time: 1.370; rss: 1486MB	serialize dep graph
incremental: re-using 0 out of 50 modules
time: 0.000; rss: 1193MB	llvm function passes [0]
time: 0.000; rss: 1193MB	llvm module passes [0]
time: 0.001; rss: 1210MB	llvm function passes [1]
time: 0.000; rss: 1210MB	llvm module passes [1]
time: 0.004; rss: 1216MB	llvm function passes [2]
time: 0.000; rss: 1216MB	llvm module passes [2]
time: 0.004; rss: 1216MB	llvm function passes [5]
time: 0.007; rss: 1218MB	codegen passes [0]
time: 0.001; rss: 1218MB	llvm function passes [10]
time: 0.003; rss: 1218MB	llvm module passes [5]
time: 0.000; rss: 1218MB	llvm module passes [10]
time: 0.010; rss: 1218MB	llvm function passes [6]
time: 0.010; rss: 1218MB	codegen passes [1]
time: 0.009; rss: 1223MB	codegen passes [2]
time: 0.006; rss: 1223MB	llvm module passes [6]
time: 0.022; rss: 1225MB	llvm function passes [4]
time: 0.008; rss: 1225MB	llvm module passes [4]
time: 0.024; rss: 1225MB	llvm function passes [0]
time: 0.023; rss: 1234MB	codegen passes [10]
time: 0.029; rss: 1234MB	llvm function passes [3]
time: 0.000; rss: 1234MB	llvm module passes [3]
time: 0.015; rss: 1238MB	llvm module passes [0]
time: 0.038; rss: 1238MB	llvm function passes [1]
time: 0.000; rss: 1240MB	llvm function passes [12]
time: 0.000; rss: 1240MB	llvm module passes [12]
time: 0.001; rss: 1240MB	codegen passes [12]
time: 0.003; rss: 1243MB	llvm function passes [12]
time: 0.001; rss: 1243MB	llvm module passes [12]
time: 0.008; rss: 1243MB	llvm module passes [1]
time: 0.038; rss: 1250MB	llvm function passes [11]
time: 0.045; rss: 1252MB	llvm function passes [10]
time: 0.008; rss: 1252MB	llvm module passes [11]
time: 0.066; rss: 1254MB	llvm function passes [2]
time: 0.047; rss: 1254MB	codegen passes [3]
time: 0.076; rss: 1261MB	codegen passes [5]
time: 0.000; rss: 1261MB	llvm function passes [5]
time: 0.000; rss: 1261MB	llvm module passes [5]
time: 0.012; rss: 1261MB	llvm module passes [10]
time: 0.004; rss: 1263MB	codegen passes [5]
time: 0.000; rss: 1265MB	llvm function passes [21]
time: 0.000; rss: 1265MB	llvm module passes [21]
time: 0.001; rss: 1265MB	codegen passes [21]
time: 0.060; rss: 1288MB	llvm module passes [2]
time: 0.040; rss: 1288MB	llvm function passes [21]
time: 0.146; rss: 1293MB	llvm function passes [8]
time: 0.064; rss: 1293MB	llvm function passes [15]
time: 0.000; rss: 1293MB	llvm module passes [15]
time: 0.065; rss: 1293MB	llvm function passes [17]
time: 0.000; rss: 1293MB	llvm module passes [17]
time: 0.095; rss: 1293MB	codegen passes [12]
time: 0.086; rss: 1293MB	llvm function passes [14]
time: 0.022; rss: 1295MB	llvm module passes [21]
time: 0.021; rss: 1303MB	llvm function passes [22]
time: 0.032; rss: 1313MB	llvm module passes [14]
time: 0.012; rss: 1313MB	llvm module passes [22]
time: 0.044; rss: 1317MB	codegen passes [17]
time: 0.218; rss: 1319MB	llvm function passes [7]
time: 0.029; rss: 1323MB	llvm function passes [17]
time: 0.079; rss: 1323MB	llvm module passes [8]
time: 0.008; rss: 1323MB	llvm module passes [17]
time: 0.142; rss: 1323MB	llvm function passes [16]
time: 0.095; rss: 1325MB	codegen passes [15]
time: 0.011; rss: 1327MB	llvm function passes [15]
time: 0.003; rss: 1327MB	llvm module passes [15]
time: 0.032; rss: 1333MB	llvm module passes [16]
time: 0.090; rss: 1333MB	llvm function passes [23]
time: 0.189; rss: 1339MB	llvm function passes [20]
time: 0.023; rss: 1345MB	llvm module passes [23]
time: 0.022; rss: 1349MB	llvm function passes [24]
time: 0.285; rss: 1351MB	llvm function passes [9]
time: 0.012; rss: 1351MB	llvm module passes [24]
time: 0.030; rss: 1351MB	llvm function passes [25]
time: 0.050; rss: 1359MB	llvm module passes [20]
time: 0.140; rss: 1364MB	llvm module passes [7]
time: 0.276; rss: 1368MB	llvm function passes [5]
time: 0.252; rss: 1365MB	llvm function passes [19]
time: 0.053; rss: 1365MB	llvm module passes [25]
time: 0.268; rss: 1367MB	llvm function passes [18]
time: 0.125; rss: 1390MB	llvm module passes [9]
time: 0.073; rss: 1389MB	llvm module passes [19]
time: 0.062; rss: 1389MB	llvm function passes [29]
time: 0.367; rss: 1389MB	llvm function passes [3]
time: 0.082; rss: 1389MB	llvm module passes [5]
time: 0.002; rss: 1389MB	llvm module passes [29]
time: 0.070; rss: 1390MB	llvm module passes [18]
time: 0.213; rss: 1391MB	llvm function passes [26]
time: 0.043; rss: 1389MB	codegen passes [29]
time: 0.004; rss: 1392MB	llvm function passes [29]
time: 0.001; rss: 1392MB	llvm module passes [29]
time: 0.483; rss: 1391MB	llvm function passes [13]
time: 0.144; rss: 1398MB	llvm function passes [28]
time: 0.175; rss: 1397MB	llvm function passes [27]
time: 0.012; rss: 1404MB	codegen passes [37]
time: 0.073; rss: 1401MB	codegen passes [29]
time: 0.021; rss: 1401MB	llvm function passes [36]
time: 0.001; rss: 1401MB	llvm module passes [36]
time: 0.116; rss: 1405MB	llvm module passes [26]
time: 0.054; rss: 1404MB	llvm module passes [28]
time: 0.081; rss: 1403MB	llvm module passes [27]
time: 0.201; rss: 1407MB	llvm function passes [31]
time: 0.649; rss: 1400MB	codegen passes [6]
time: 0.222; rss: 1398MB	llvm function passes [33]
time: 0.158; rss: 1399MB	llvm function passes [35]
time: 0.233; rss: 1401MB	llvm function passes [32]
time: 0.100; rss: 1402MB	codegen passes [36]
time: 0.021; rss: 1400MB	llvm module passes [35]
time: 0.595; rss: 1404MB	llvm function passes [12]
time: 0.130; rss: 1404MB	llvm module passes [31]
time: 0.352; rss: 1405MB	llvm function passes [30]
time: 0.261; rss: 1407MB	llvm function passes [34]
time: 0.383; rss: 1412MB	llvm module passes [3]
time: 0.494; rss: 1417MB	codegen passes [15]
time: 0.095; rss: 1412MB	llvm module passes [34]
time: 0.217; rss: 1426MB	llvm module passes [33]
time: 0.196; rss: 1422MB	llvm module passes [12]
time: 0.239; rss: 1425MB	llvm module passes [32]
time: 0.243; rss: 1431MB	llvm module passes [30]
time: 0.605; rss: 1448MB	llvm module passes [13]
time: 1.097; rss: 1501MB	codegen passes [11]
time: 1.122; rss: 1472MB	codegen passes [17]
time: 0.860; rss: 1507MB	codegen passes [35]
time: 1.390; rss: 1494MB	codegen passes [4]
time: 1.405; rss: 1494MB	codegen passes [1]
time: 1.590; rss: 1424MB	codegen passes [10]
time: 1.520; rss: 1417MB	codegen passes [22]
time: 1.243; rss: 1453MB	codegen passes [31]
time: 1.785; rss: 1428MB	codegen passes [14]
time: 1.902; rss: 1420MB	codegen passes [0]
time: 1.923; rss: 1457MB	codegen passes [5]
time: 2.131; rss: 1462MB	codegen passes [24]
time: 2.145; rss: 1446MB	codegen passes [21]
time: 2.242; rss: 1467MB	codegen passes [25]
time: 2.196; rss: 1536MB	codegen passes [33]
time: 2.831; rss: 1530MB	codegen passes [23]
time: 2.320; rss: 1578MB	codegen passes [32]
time: 3.325; rss: 1600MB	codegen passes [2]
time: 3.256; rss: 1601MB	codegen passes [16]
time: 2.748; rss: 1589MB	codegen passes [12]
time: 3.551; rss: 1664MB	codegen passes [20]
time: 3.353; rss: 1686MB	codegen passes [3]
time: 3.844; rss: 1664MB	codegen passes [28]
time: 4.090; rss: 1681MB	codegen passes [18]
time: 4.278; rss: 1663MB	codegen passes [8]
time: 4.052; rss: 1610MB	codegen passes [34]
time: 4.384; rss: 1562MB	codegen passes [19]
time: 4.264; rss: 1585MB	codegen passes [27]
time: 4.454; rss: 1510MB	codegen passes [9]
time: 4.379; rss: 1462MB	codegen passes [30]
time: 5.118; rss: 1445MB	codegen passes [26]
time: 5.555; rss: 1397MB	codegen passes [7]
time: 5.709; rss: 1324MB	codegen passes [13]
time: 7.962; rss: 1321MB	LLVM passes
time: 0.000; rss: 1321MB	serialize work products
time: 1.041; rss: 296MB	linking
done
