commit e0158e02f97957c3d8cbd9c52da5aadaf898d447
Merge: 368e092 55180d0
Author: bors <bors@rust-lang.org>
Date:   Sun Dec 11 09:33:05 2016 +0000

    Auto merge of #38249 - arielb1:special-substs, r=nikomatsakis
    
    erase lifetimes when translating specialized substs
    
    Projections can generate lifetime variables with equality constraints,
    that will not be resolved by `resolve_type_vars_if_possible`, so substs
    need to be lifetime-erased after that.
    
    Fixes #36848.
rustc: ./regex-0.1.80@020-incr-from-scratch
find . -name "*.rs" | xargs touch
RUSTFLAGS="""" cargo rustc  -- \
  -Ztime-passes -Zinput-stats -Z incremental-info
time: 0.024; rss: 50MB	parsing
Lines of code:             10689
Pre-expansion node count:  55396
time: 0.000; rss: 50MB	recursion limit
time: 0.000; rss: 50MB	crate injection
time: 0.000; rss: 50MB	plugin loading
time: 0.000; rss: 50MB	plugin registration
time: 0.043; rss: 82MB	expansion
time: 0.000; rss: 82MB	maybe building test harness
time: 0.001; rss: 82MB	maybe creating a macro crate
Post-expansion node count: 86869
time: 0.000; rss: 82MB	checking for inline asm in case the target doesn't support it
time: 0.001; rss: 82MB	complete gated feature checking
time: 0.003; rss: 82MB	early lint checks
time: 0.001; rss: 82MB	AST validation
time: 0.010; rss: 84MB	name resolution
time: 0.008; rss: 89MB	lowering ast -> hir
time: 0.001; rss: 91MB	indexing hir
time: 0.001; rss: 91MB	attribute checking
time: 0.000; rss: 85MB	language item collection
time: 0.002; rss: 85MB	lifetime resolution
time: 0.000; rss: 85MB	looking for entry point
time: 0.000; rss: 85MB	looking for plugin registrar
time: 0.005; rss: 89MB	region resolution
time: 0.001; rss: 89MB	loop checking
time: 0.000; rss: 89MB	static item recursion checking
time: 0.033; rss: 89MB	compute_incremental_hashes_map
time: 0.000; rss: 89MB	load_dep_graph
time: 0.001; rss: 89MB	stability index
time: 0.002; rss: 90MB	stability checking
time: 0.010; rss: 91MB	type collecting
time: 0.000; rss: 91MB	variance inference
time: 0.000; rss: 91MB	impl wf inference
time: 0.012; rss: 93MB	coherence checking
time: 0.020; rss: 94MB	wf checking
time: 0.115; rss: 98MB	item-types checking
time: 0.284; rss: 106MB	item-bodies checking
time: 0.000; rss: 106MB	drop-impl checking
time: 0.107; rss: 134MB	const checking
time: 0.008; rss: 134MB	privacy checking
time: 0.002; rss: 134MB	intrinsic checking
time: 0.001; rss: 134MB	effect checking
time: 0.005; rss: 134MB	match checking
time: 0.004; rss: 134MB	liveness checking
time: 0.015; rss: 134MB	rvalue checking
time: 0.044; rss: 155MB	MIR dump
  time: 0.006; rss: 155MB	SimplifyCfg
  time: 0.009; rss: 155MB	QualifyAndPromoteConstants
  time: 0.012; rss: 155MB	TypeckMir
  time: 0.000; rss: 155MB	SimplifyBranches
  time: 0.003; rss: 155MB	SimplifyCfg
time: 0.031; rss: 155MB	MIR cleanup and validation
time: 0.044; rss: 156MB	borrow checking
time: 0.001; rss: 156MB	reachability checking
time: 0.004; rss: 156MB	death checking
time: 0.000; rss: 156MB	unused lib feature checking
time: 0.028; rss: 156MB	lint checking
time: 0.000; rss: 156MB	resolving dependency formats
  time: 0.000; rss: 156MB	NoLandingPads
  time: 0.003; rss: 156MB	SimplifyCfg
  time: 0.008; rss: 157MB	EraseRegions
  time: 0.001; rss: 157MB	AddCallGuards
  time: 0.017; rss: 158MB	ElaborateDrops
  time: 0.000; rss: 158MB	NoLandingPads
  time: 0.004; rss: 158MB	SimplifyCfg
  time: 0.003; rss: 158MB	InstCombine
  time: 0.002; rss: 158MB	Deaggregator
  time: 0.000; rss: 158MB	CopyPropagation
  time: 0.004; rss: 158MB	SimplifyLocals
  time: 0.001; rss: 158MB	AddCallGuards
  time: 0.000; rss: 158MB	PreTrans
time: 0.043; rss: 158MB	MIR optimisations
  time: 0.008; rss: 162MB	write metadata
  time: 0.083; rss: 167MB	translation item collection
  time: 0.012; rss: 169MB	codegen unit partitioning
  time: 0.012; rss: 225MB	internalize symbols
time: 1.140; rss: 225MB	translation
time: 0.000; rss: 225MB	assert dep graph
time: 0.000; rss: 225MB	serialize dep graph
incremental: re-using 0 out of 1 modules
  time: 0.086; rss: 143MB	llvm function passes [0]
  time: 0.445; rss: 177MB	llvm module passes [0]
  time: 2.651; rss: 182MB	codegen passes [0]
  time: 0.000; rss: 182MB	codegen passes [0]
time: 3.402; rss: 181MB	LLVM passes
time: 0.000; rss: 181MB	serialize work products
time: 0.120; rss: 94MB	linking
done
