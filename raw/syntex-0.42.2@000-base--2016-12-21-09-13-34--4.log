commit 1b38776c1f68c6fd47c1b2f7b7974efc7dd64901
Merge: 439c312 0013d4c
Author: bors <bors@rust-lang.org>
Date:   Wed Dec 21 10:38:22 2016 +0000

    Auto merge of #38302 - Mark-Simulacrum:trans-cleanup, r=eddyb
    
    Cleanup old trans
    
    This is a cleanup of old trans, with the following main points:
     - Remove the `build.rs` API (prefer using `Builder` directly, which is now passed where needed through `BlockAndBuilder`).
     - Remove `Block` (inlining it into `BlockAndBuilder`)
     - Remove `Callee::call`, primarily through inlining and simplification of code.
     - Thinned `FunctionContext`:
       - `mir`, `debug_scopes`, `scopes`, and `fn_ty` are moved to `MirContext`.
       - `param_env` is moved to `SharedCrateContext` and renamed to `empty_param_env`.
       - `llretslotptr` is removed, replaced with more careful management of the return values in calls.
       - `landingpad_alloca` is inlined into cleanup.
       - `param_substs` are moved to `MirContext`.
       - `span` is removed, it was never set to anything but `None`.
       - `block_arena` and `lpad_arena` are removed, since neither was necessary (landing pads and block are quite small, and neither needs arena allocation).
     - Fixed `drop_in_place` not running other destructors in the same function.
    
    Fixes #35566 (thanks to @est31 for confirming).
rustc: ./syntex-0.42.2@000-base
cargo rustc -p syntex_syntax  -- -Ztime-passes -Zinput-stats
time: 0.092; rss: 71MB	parsing
Lines of code:             33687
Pre-expansion node count:  223115
time: 0.000; rss: 71MB	recursion limit
time: 0.000; rss: 71MB	crate injection
time: 0.000; rss: 71MB	plugin loading
time: 0.000; rss: 71MB	plugin registration
time: 0.242; rss: 146MB	expansion
time: 0.000; rss: 146MB	maybe building test harness
time: 0.006; rss: 146MB	maybe creating a macro crate
Post-expansion node count: 638863
time: 0.000; rss: 146MB	checking for inline asm in case the target doesn't support it
time: 0.012; rss: 146MB	complete gated feature checking
time: 0.023; rss: 146MB	early lint checks
time: 0.007; rss: 146MB	AST validation
time: 0.076; rss: 161MB	name resolution
time: 0.059; rss: 194MB	lowering ast -> hir
time: 0.010; rss: 187MB	indexing hir
time: 0.006; rss: 187MB	attribute checking
time: 0.002; rss: 149MB	language item collection
time: 0.011; rss: 149MB	lifetime resolution
time: 0.000; rss: 149MB	looking for entry point
time: 0.000; rss: 149MB	looking for plugin registrar
time: 0.047; rss: 169MB	region resolution
time: 0.007; rss: 169MB	loop checking
time: 0.002; rss: 169MB	static item recursion checking
time: 0.380; rss: 171MB	compute_incremental_hashes_map
time: 0.000; rss: 171MB	load_dep_graph
time: 0.009; rss: 171MB	stability index
time: 0.017; rss: 171MB	stability checking
time: 0.047; rss: 175MB	type collecting
time: 0.001; rss: 175MB	variance inference
time: 0.002; rss: 176MB	impl wf inference
time: 0.017; rss: 177MB	coherence checking
time: 0.084; rss: 180MB	wf checking
time: 0.182; rss: 184MB	item-types checking
time: 3.398; rss: 235MB	item-bodies checking
time: 0.000; rss: 235MB	drop-impl checking
time: 0.212; rss: 244MB	const checking
time: 0.056; rss: 244MB	privacy checking
time: 0.016; rss: 244MB	intrinsic checking
time: 0.014; rss: 244MB	effect checking
time: 0.048; rss: 244MB	match checking
time: 0.046; rss: 251MB	liveness checking
time: 0.170; rss: 251MB	rvalue checking
time: 0.359; rss: 441MB	MIR dump
  time: 0.056; rss: 443MB	SimplifyCfg
  time: 0.073; rss: 443MB	QualifyAndPromoteConstants
  time: 0.107; rss: 443MB	TypeckMir
  time: 0.004; rss: 443MB	SimplifyBranches
  time: 0.030; rss: 443MB	SimplifyCfg
time: 0.269; rss: 443MB	MIR cleanup and validation
time: 0.464; rss: 443MB	borrow checking
time: 0.024; rss: 443MB	reachability checking
time: 0.038; rss: 443MB	death checking
time: 0.000; rss: 443MB	unused lib feature checking
time: 0.176; rss: 443MB	lint checking
time: 0.000; rss: 443MB	resolving dependency formats
  time: 0.003; rss: 443MB	NoLandingPads
  time: 0.026; rss: 443MB	SimplifyCfg
  time: 0.064; rss: 452MB	EraseRegions
  time: 0.011; rss: 452MB	AddCallGuards
  time: 0.268; rss: 471MB	ElaborateDrops
  time: 0.003; rss: 471MB	NoLandingPads
  time: 0.052; rss: 471MB	SimplifyCfg
  time: 0.028; rss: 471MB	InstCombine
  time: 0.012; rss: 471MB	Deaggregator
  time: 0.002; rss: 471MB	CopyPropagation
  time: 0.034; rss: 471MB	SimplifyLocals
  time: 0.009; rss: 471MB	AddCallGuards
  time: 0.002; rss: 471MB	PreTrans
time: 0.514; rss: 471MB	MIR optimisations
  time: 0.064; rss: 480MB	write metadata
  time: 0.378; rss: 493MB	translation item collection
  time: 0.057; rss: 496MB	codegen unit partitioning
  time: 0.046; rss: 756MB	internalize symbols
time: 4.488; rss: 756MB	translation
time: 0.000; rss: 756MB	assert dep graph
time: 0.000; rss: 756MB	serialize dep graph
  time: 0.524; rss: 427MB	llvm function passes [0]
  time: 0.305; rss: 433MB	llvm module passes [0]
  time: 10.517; rss: 437MB	codegen passes [0]
  time: 0.000; rss: 437MB	codegen passes [0]
time: 12.118; rss: 437MB	LLVM passes
time: 0.000; rss: 437MB	serialize work products
time: 0.342; rss: 118MB	linking
done
