commit 01d53df82ef12625f947f5c0a6004e1aea2f9782
Merge: 5d3ec6b 5e991e0
Author: bors <bors@rust-lang.org>
Date:   Wed Dec 14 09:56:38 2016 +0000

    Auto merge of #38340 - alexcrichton:fix-travis, r=alexcrichton
    
    Fix travis builds
    
    After reading some articles [1] [2] yesterday about Docker and the "init"
    process I got to thinking about the problems that we've been seeing on Travis.
    The basic problem is that a Linux system may need an "init" process to work
    properly when processes become zombies. Docker by default doesn't handle this
    and the root process typically isn't an init process, so this can occasionally
    cause quite a few problems.
    
    We've been seeing spurious errors on Travis inside containers which look like
    OOM and such, but my guess is that zombie processes were being reparented to the
    top-level shell. The shell didn't expect the zombies and then behaved very
    strangely.
    
    This commit fixes these problems by using Yelp's "dumb-init" program [2] as the
    init process in all of our containers. This ensures that there's a valid init
    ready to reap children when they're reparented, which our test suite apparently
    generates a bunch of throughout the tests and such.
    
    [1]: https://blog.phusion.nl/2015/01/20/docker-and-the-pid-1-zombie-reaping-problem/
    [2]: https://engineeringblog.yelp.com/2016/01/dumb-init-an-init-for-docker.html
rustc: ./syntex-0.42.2@010-incr
find . -name '*.rs' | xargs touch
RUSTFLAGS="-Z incremental=incr" \
    cargo rustc -p syntex_syntax  -- \
    -Ztime-passes -Zinput-stats -Z incremental-info
time: 0.092; rss: 75MB	parsing
Lines of code:             33687
Pre-expansion node count:  223115
time: 0.000; rss: 75MB	recursion limit
time: 0.000; rss: 75MB	crate injection
time: 0.000; rss: 75MB	plugin loading
time: 0.000; rss: 75MB	plugin registration
time: 0.242; rss: 151MB	expansion
time: 0.000; rss: 151MB	maybe building test harness
time: 0.006; rss: 151MB	maybe creating a macro crate
Post-expansion node count: 638863
time: 0.000; rss: 151MB	checking for inline asm in case the target doesn't support it
time: 0.012; rss: 151MB	complete gated feature checking
time: 0.023; rss: 151MB	early lint checks
time: 0.007; rss: 151MB	AST validation
time: 0.075; rss: 166MB	name resolution
time: 0.059; rss: 199MB	lowering ast -> hir
time: 0.010; rss: 192MB	indexing hir
time: 0.006; rss: 192MB	attribute checking
time: 0.002; rss: 154MB	language item collection
time: 0.011; rss: 156MB	lifetime resolution
time: 0.000; rss: 156MB	looking for entry point
time: 0.000; rss: 156MB	looking for plugin registrar
time: 0.046; rss: 176MB	region resolution
time: 0.008; rss: 176MB	loop checking
time: 0.002; rss: 176MB	static item recursion checking
time: 0.381; rss: 178MB	compute_incremental_hashes_map
time: 0.000; rss: 178MB	load_dep_graph
time: 0.009; rss: 178MB	stability index
time: 0.021; rss: 181MB	stability checking
time: 0.056; rss: 190MB	type collecting
time: 0.004; rss: 190MB	variance inference
time: 0.006; rss: 193MB	impl wf inference
time: 0.026; rss: 197MB	coherence checking
time: 0.089; rss: 199MB	wf checking
time: 0.198; rss: 208MB	item-types checking
time: 3.605; rss: 267MB	item-bodies checking
time: 0.000; rss: 267MB	drop-impl checking
time: 0.215; rss: 277MB	const checking
time: 0.059; rss: 277MB	privacy checking
time: 0.021; rss: 283MB	intrinsic checking
time: 0.014; rss: 283MB	effect checking
time: 0.052; rss: 283MB	match checking
time: 0.047; rss: 290MB	liveness checking
time: 0.173; rss: 292MB	rvalue checking
time: 0.366; rss: 482MB	MIR dump
  time: 0.058; rss: 483MB	SimplifyCfg
  time: 0.075; rss: 483MB	QualifyAndPromoteConstants
  time: 0.123; rss: 500MB	TypeckMir
  time: 0.004; rss: 500MB	SimplifyBranches
  time: 0.032; rss: 500MB	SimplifyCfg
time: 0.292; rss: 500MB	MIR cleanup and validation
time: 0.475; rss: 500MB	borrow checking
time: 0.024; rss: 500MB	reachability checking
time: 0.039; rss: 500MB	death checking
time: 0.000; rss: 500MB	unused lib feature checking
time: 0.183; rss: 500MB	lint checking
time: 0.000; rss: 500MB	resolving dependency formats
  time: 0.004; rss: 500MB	NoLandingPads
  time: 0.028; rss: 500MB	SimplifyCfg
  time: 0.065; rss: 509MB	EraseRegions
  time: 0.011; rss: 509MB	AddCallGuards
  time: 0.277; rss: 529MB	ElaborateDrops
  time: 0.004; rss: 529MB	NoLandingPads
  time: 0.054; rss: 529MB	SimplifyCfg
  time: 0.029; rss: 528MB	InstCombine
  time: 0.013; rss: 528MB	Deaggregator
  time: 0.004; rss: 528MB	CopyPropagation
  time: 0.036; rss: 528MB	SimplifyLocals
  time: 0.010; rss: 528MB	AddCallGuards
  time: 0.003; rss: 528MB	PreTrans
time: 0.538; rss: 528MB	MIR optimisations
  time: 0.068; rss: 537MB	write metadata
  time: 0.396; rss: 551MB	translation item collection
  time: 0.073; rss: 555MB	codegen unit partitioning
  time: 0.049; rss: 1457MB	internalize symbols
time: 11.895; rss: 1457MB	translation
time: 0.000; rss: 1457MB	assert dep graph
time: 1.446; rss: 1485MB	serialize dep graph
incremental: re-using 0 out of 50 modules
time: 0.000; rss: 1199MB	llvm function passes [2]
time: 0.000; rss: 1201MB	llvm module passes [2]
time: 0.001; rss: 1209MB	llvm function passes [1]
time: 0.000; rss: 1211MB	llvm module passes [1]
time: 0.001; rss: 1211MB	llvm function passes [3]
time: 0.000; rss: 1211MB	llvm module passes [3]
time: 0.002; rss: 1211MB	llvm function passes [0]
time: 0.000; rss: 1211MB	llvm module passes [0]
time: 0.002; rss: 1211MB	codegen passes [2]
time: 0.004; rss: 1211MB	llvm function passes [4]
time: 0.002; rss: 1211MB	llvm module passes [4]
time: 0.005; rss: 1211MB	codegen passes [1]
time: 0.001; rss: 1211MB	llvm function passes [1]
time: 0.000; rss: 1211MB	llvm module passes [1]
time: 0.011; rss: 1211MB	llvm function passes [7]
time: 0.006; rss: 1211MB	llvm module passes [7]
time: 0.017; rss: 1211MB	llvm function passes [5]
time: 0.019; rss: 1224MB	codegen passes [0]
time: 0.016; rss: 1224MB	codegen passes [1]
time: 0.008; rss: 1224MB	llvm module passes [5]
time: 0.018; rss: 1236MB	llvm function passes [0]
time: 0.000; rss: 1241MB	llvm function passes [13]
time: 0.000; rss: 1241MB	llvm module passes [13]
time: 0.001; rss: 1243MB	codegen passes [13]
time: 0.009; rss: 1242MB	llvm module passes [0]
time: 0.053; rss: 1244MB	codegen passes [3]
time: 0.001; rss: 1244MB	llvm function passes [3]
time: 0.000; rss: 1244MB	llvm module passes [3]
time: 0.000; rss: 1248MB	llvm function passes [43]
time: 0.000; rss: 1248MB	llvm module passes [43]
time: 0.005; rss: 1248MB	codegen passes [3]
time: 0.004; rss: 1248MB	llvm function passes [17]
time: 0.000; rss: 1248MB	llvm module passes [17]
time: 0.003; rss: 1248MB	codegen passes [43]
time: 0.000; rss: 1253MB	llvm function passes [41]
time: 0.000; rss: 1253MB	llvm module passes [41]
time: 0.001; rss: 1253MB	codegen passes [41]
time: 0.031; rss: 1255MB	llvm function passes [13]
time: 0.001; rss: 1255MB	llvm module passes [13]
time: 0.035; rss: 1257MB	llvm function passes [14]
time: 0.061; rss: 1257MB	llvm function passes [10]
time: 0.015; rss: 1261MB	llvm module passes [14]
time: 0.091; rss: 1261MB	llvm function passes [8]
time: 0.120; rss: 1261MB	llvm function passes [6]
time: 0.030; rss: 1270MB	llvm module passes [10]
time: 0.054; rss: 1270MB	llvm function passes [41]
time: 0.014; rss: 1276MB	llvm module passes [41]
time: 0.038; rss: 1276MB	llvm module passes [8]
time: 0.113; rss: 1276MB	llvm function passes [11]
time: 0.146; rss: 1276MB	codegen passes [4]
time: 0.134; rss: 1276MB	llvm function passes [1]
time: 0.091; rss: 1280MB	codegen passes [17]
time: 0.018; rss: 1290MB	llvm function passes [4]
time: 0.004; rss: 1290MB	llvm module passes [4]
time: 0.112; rss: 1290MB	llvm function passes [43]
time: 0.131; rss: 1290MB	llvm function passes [18]
time: 0.020; rss: 1290MB	llvm function passes [25]
time: 0.002; rss: 1290MB	llvm module passes [25]
time: 0.044; rss: 1292MB	llvm module passes [11]
time: 0.107; rss: 1294MB	codegen passes [13]
time: 0.061; rss: 1296MB	llvm function passes [17]
time: 0.102; rss: 1296MB	llvm function passes [38]
time: 0.025; rss: 1303MB	llvm module passes [17]
time: 0.127; rss: 1303MB	llvm module passes [6]
time: 0.103; rss: 1303MB	llvm function passes [40]
time: 0.086; rss: 1303MB	llvm function passes [45]
time: 0.027; rss: 1303MB	llvm module passes [38]
time: 0.077; rss: 1303MB	llvm module passes [43]
time: 0.021; rss: 1305MB	llvm module passes [45]
time: 0.004; rss: 1305MB	llvm function passes [48]
time: 0.168; rss: 1305MB	llvm function passes [44]
time: 0.005; rss: 1305MB	llvm module passes [48]
time: 0.037; rss: 1307MB	llvm module passes [40]
time: 0.103; rss: 1311MB	llvm module passes [18]
time: 0.000; rss: 1319MB	codegen passes [20]
time: 0.219; rss: 1322MB	llvm function passes [22]
time: 0.031; rss: 1323MB	llvm module passes [44]
time: 0.173; rss: 1323MB	llvm function passes [23]
time: 0.257; rss: 1330MB	llvm function passes [21]
time: 0.023; rss: 1332MB	llvm module passes [23]
time: 0.205; rss: 1349MB	llvm module passes [1]
time: 0.054; rss: 1356MB	llvm module passes [21]
time: 0.101; rss: 1356MB	llvm module passes [22]
time: 0.297; rss: 1356MB	llvm function passes [39]
time: 0.189; rss: 1358MB	llvm function passes [15]
time: 0.258; rss: 1365MB	llvm function passes [24]
time: 0.180; rss: 1371MB	llvm function passes [16]
time: 0.041; rss: 1370MB	llvm module passes [15]
time: 0.005; rss: 1370MB	llvm module passes [16]
time: 0.098; rss: 1370MB	llvm function passes [27]
time: 0.463; rss: 1369MB	llvm function passes [2]
time: 0.442; rss: 1371MB	llvm function passes [9]
time: 0.323; rss: 1377MB	llvm function passes [46]
time: 0.082; rss: 1385MB	llvm module passes [24]
time: 0.071; rss: 1386MB	llvm module passes [27]
time: 0.122; rss: 1386MB	llvm module passes [39]
time: 0.074; rss: 1385MB	llvm module passes [46]
time: 0.371; rss: 1383MB	llvm function passes [13]
time: 0.294; rss: 1387MB	llvm function passes [47]
time: 0.128; rss: 1383MB	llvm module passes [2]
time: 0.128; rss: 1380MB	llvm module passes [9]
time: 0.368; rss: 1376MB	llvm function passes [49]
time: 0.579; rss: 1375MB	codegen passes [7]
time: 0.079; rss: 1376MB	codegen passes [27]
time: 0.163; rss: 1371MB	codegen passes [48]
time: 0.560; rss: 1370MB	llvm function passes [3]
time: 0.033; rss: 1371MB	llvm module passes [3]
time: 0.075; rss: 1371MB	llvm module passes [13]
time: 0.497; rss: 1369MB	llvm function passes [19]
time: 0.689; rss: 1365MB	llvm function passes [12]
time: 0.492; rss: 1378MB	codegen passes [4]
time: 0.195; rss: 1378MB	llvm module passes [47]
time: 0.126; rss: 1374MB	llvm module passes [19]
time: 0.237; rss: 1393MB	codegen passes [25]
time: 0.793; rss: 1417MB	llvm function passes [26]
time: 0.464; rss: 1412MB	llvm module passes [49]
time: 0.123; rss: 1419MB	llvm module passes [26]
time: 1.081; rss: 1428MB	codegen passes [0]
time: 0.698; rss: 1449MB	llvm module passes [12]
time: 0.786; rss: 1441MB	codegen passes [16]
time: 1.397; rss: 1441MB	codegen passes [5]
time: 1.177; rss: 1442MB	codegen passes [10]
time: 1.176; rss: 1433MB	codegen passes [40]
time: 1.179; rss: 1439MB	codegen passes [38]
time: 1.306; rss: 1403MB	codegen passes [11]
time: 1.584; rss: 1392MB	codegen passes [8]
time: 1.645; rss: 1401MB	codegen passes [17]
time: 1.388; rss: 1428MB	codegen passes [47]
time: 1.884; rss: 1436MB	codegen passes [14]
time: 1.579; rss: 1452MB	codegen passes [13]
time: 2.186; rss: 1456MB	codegen passes [41]
time: 2.359; rss: 1484MB	codegen passes [43]
time: 2.385; rss: 1489MB	codegen passes [15]
time: 2.715; rss: 1512MB	codegen passes [45]
time: 2.720; rss: 1497MB	codegen passes [23]
time: 2.793; rss: 1562MB	codegen passes [44]
time: 3.342; rss: 1600MB	codegen passes [18]
time: 3.316; rss: 1623MB	codegen passes [1]
time: 3.147; rss: 1632MB	codegen passes [3]
time: 3.326; rss: 1597MB	codegen passes [24]
time: 3.491; rss: 1597MB	codegen passes [21]
time: 3.804; rss: 1657MB	codegen passes [22]
time: 3.936; rss: 1629MB	codegen passes [6]
time: 4.158; rss: 1609MB	codegen passes [39]
time: 3.883; rss: 1567MB	codegen passes [49]
time: 4.263; rss: 1557MB	codegen passes [46]
time: 4.460; rss: 1498MB	codegen passes [9]
time: 4.456; rss: 1466MB	codegen passes [26]
time: 4.941; rss: 1442MB	codegen passes [2]
time: 5.480; rss: 1393MB	codegen passes [19]
time: 5.207; rss: 1325MB	codegen passes [12]
time: 8.026; rss: 1324MB	LLVM passes
time: 0.000; rss: 1324MB	serialize work products
time: 1.197; rss: 300MB	linking
done
