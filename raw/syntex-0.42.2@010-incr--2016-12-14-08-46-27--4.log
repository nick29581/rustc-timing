commit 01d53df82ef12625f947f5c0a6004e1aea2f9782
Merge: 5d3ec6b 5e991e0
Author: bors <bors@rust-lang.org>
Date:   Wed Dec 14 09:56:38 2016 +0000

    Auto merge of #38340 - alexcrichton:fix-travis, r=alexcrichton
    
    Fix travis builds
    
    After reading some articles [1] [2] yesterday about Docker and the "init"
    process I got to thinking about the problems that we've been seeing on Travis.
    The basic problem is that a Linux system may need an "init" process to work
    properly when processes become zombies. Docker by default doesn't handle this
    and the root process typically isn't an init process, so this can occasionally
    cause quite a few problems.
    
    We've been seeing spurious errors on Travis inside containers which look like
    OOM and such, but my guess is that zombie processes were being reparented to the
    top-level shell. The shell didn't expect the zombies and then behaved very
    strangely.
    
    This commit fixes these problems by using Yelp's "dumb-init" program [2] as the
    init process in all of our containers. This ensures that there's a valid init
    ready to reap children when they're reparented, which our test suite apparently
    generates a bunch of throughout the tests and such.
    
    [1]: https://blog.phusion.nl/2015/01/20/docker-and-the-pid-1-zombie-reaping-problem/
    [2]: https://engineeringblog.yelp.com/2016/01/dumb-init-an-init-for-docker.html
rustc: ./syntex-0.42.2@010-incr
find . -name '*.rs' | xargs touch
RUSTFLAGS="-Z incremental=incr" \
    cargo rustc -p syntex_syntax  -- \
    -Ztime-passes -Zinput-stats -Z incremental-info
time: 0.092; rss: 75MB	parsing
Lines of code:             33687
Pre-expansion node count:  223115
time: 0.000; rss: 75MB	recursion limit
time: 0.000; rss: 75MB	crate injection
time: 0.000; rss: 75MB	plugin loading
time: 0.000; rss: 75MB	plugin registration
time: 0.243; rss: 151MB	expansion
time: 0.000; rss: 151MB	maybe building test harness
time: 0.006; rss: 151MB	maybe creating a macro crate
Post-expansion node count: 638863
time: 0.000; rss: 151MB	checking for inline asm in case the target doesn't support it
time: 0.012; rss: 151MB	complete gated feature checking
time: 0.023; rss: 151MB	early lint checks
time: 0.007; rss: 151MB	AST validation
time: 0.076; rss: 166MB	name resolution
time: 0.059; rss: 200MB	lowering ast -> hir
time: 0.010; rss: 192MB	indexing hir
time: 0.006; rss: 192MB	attribute checking
time: 0.002; rss: 154MB	language item collection
time: 0.011; rss: 156MB	lifetime resolution
time: 0.000; rss: 156MB	looking for entry point
time: 0.000; rss: 156MB	looking for plugin registrar
time: 0.047; rss: 177MB	region resolution
time: 0.008; rss: 177MB	loop checking
time: 0.002; rss: 177MB	static item recursion checking
time: 0.381; rss: 178MB	compute_incremental_hashes_map
time: 0.000; rss: 178MB	load_dep_graph
time: 0.009; rss: 178MB	stability index
time: 0.021; rss: 182MB	stability checking
time: 0.056; rss: 190MB	type collecting
time: 0.004; rss: 190MB	variance inference
time: 0.006; rss: 194MB	impl wf inference
time: 0.026; rss: 198MB	coherence checking
time: 0.086; rss: 200MB	wf checking
time: 0.196; rss: 208MB	item-types checking
time: 3.567; rss: 267MB	item-bodies checking
time: 0.000; rss: 267MB	drop-impl checking
time: 0.215; rss: 277MB	const checking
time: 0.059; rss: 277MB	privacy checking
time: 0.021; rss: 283MB	intrinsic checking
time: 0.016; rss: 283MB	effect checking
time: 0.049; rss: 283MB	match checking
time: 0.047; rss: 291MB	liveness checking
time: 0.174; rss: 293MB	rvalue checking
time: 0.362; rss: 482MB	MIR dump
  time: 0.056; rss: 483MB	SimplifyCfg
  time: 0.075; rss: 483MB	QualifyAndPromoteConstants
  time: 0.120; rss: 500MB	TypeckMir
  time: 0.004; rss: 500MB	SimplifyBranches
  time: 0.031; rss: 500MB	SimplifyCfg
time: 0.286; rss: 500MB	MIR cleanup and validation
time: 0.473; rss: 501MB	borrow checking
time: 0.024; rss: 501MB	reachability checking
time: 0.038; rss: 501MB	death checking
time: 0.000; rss: 501MB	unused lib feature checking
time: 0.182; rss: 501MB	lint checking
time: 0.000; rss: 501MB	resolving dependency formats
  time: 0.004; rss: 501MB	NoLandingPads
  time: 0.027; rss: 501MB	SimplifyCfg
  time: 0.065; rss: 509MB	EraseRegions
  time: 0.011; rss: 509MB	AddCallGuards
  time: 0.273; rss: 531MB	ElaborateDrops
  time: 0.003; rss: 531MB	NoLandingPads
  time: 0.052; rss: 531MB	SimplifyCfg
  time: 0.029; rss: 530MB	InstCombine
  time: 0.013; rss: 530MB	Deaggregator
  time: 0.004; rss: 530MB	CopyPropagation
  time: 0.035; rss: 530MB	SimplifyLocals
  time: 0.010; rss: 530MB	AddCallGuards
  time: 0.003; rss: 530MB	PreTrans
time: 0.528; rss: 530MB	MIR optimisations
  time: 0.066; rss: 538MB	write metadata
  time: 0.393; rss: 551MB	translation item collection
  time: 0.072; rss: 554MB	codegen unit partitioning
  time: 0.069; rss: 1457MB	internalize symbols
time: 12.037; rss: 1457MB	translation
time: 0.000; rss: 1457MB	assert dep graph
time: 1.445; rss: 1485MB	serialize dep graph
incremental: re-using 0 out of 50 modules
time: 0.000; rss: 1201MB	llvm function passes [2]
time: 0.000; rss: 1203MB	llvm module passes [2]
time: 0.001; rss: 1203MB	llvm function passes [0]
time: 0.000; rss: 1205MB	llvm module passes [0]
time: 0.001; rss: 1207MB	llvm function passes [3]
time: 0.000; rss: 1207MB	llvm module passes [3]
time: 0.002; rss: 1207MB	llvm function passes [4]
time: 0.000; rss: 1207MB	llvm module passes [4]
time: 0.004; rss: 1213MB	llvm function passes [5]
time: 0.001; rss: 1220MB	llvm function passes [13]
time: 0.001; rss: 1222MB	llvm module passes [13]
time: 0.007; rss: 1230MB	llvm module passes [5]
time: 0.012; rss: 1230MB	llvm function passes [1]
time: 0.009; rss: 1230MB	llvm function passes [17]
time: 0.005; rss: 1232MB	llvm module passes [1]
time: 0.016; rss: 1239MB	llvm function passes [15]
time: 0.000; rss: 1241MB	llvm function passes [16]
time: 0.000; rss: 1241MB	llvm module passes [16]
time: 0.006; rss: 1245MB	llvm module passes [15]
time: 0.038; rss: 1245MB	codegen passes [2]
time: 0.000; rss: 1245MB	llvm function passes [2]
time: 0.000; rss: 1245MB	llvm module passes [2]
time: 0.037; rss: 1247MB	llvm function passes [12]
time: 0.001; rss: 1247MB	llvm function passes [20]
time: 0.000; rss: 1247MB	llvm module passes [20]
time: 0.036; rss: 1247MB	llvm function passes [11]
time: 0.009; rss: 1247MB	llvm module passes [11]
time: 0.028; rss: 1247MB	llvm function passes [21]
time: 0.044; rss: 1247MB	llvm module passes [17]
time: 0.014; rss: 1247MB	llvm module passes [12]
time: 0.037; rss: 1251MB	codegen passes [16]
time: 0.000; rss: 1251MB	llvm function passes [16]
time: 0.000; rss: 1251MB	llvm module passes [16]
time: 0.016; rss: 1253MB	llvm module passes [21]
time: 0.056; rss: 1255MB	llvm function passes [8]
time: 0.012; rss: 1266MB	llvm module passes [8]
time: 0.073; rss: 1266MB	llvm function passes [10]
time: 0.001; rss: 1266MB	llvm module passes [10]
time: 0.000; rss: 1281MB	llvm function passes [24]
time: 0.000; rss: 1281MB	llvm module passes [24]
time: 0.001; rss: 1281MB	codegen passes [24]
time: 0.120; rss: 1281MB	llvm function passes [14]
time: 0.053; rss: 1285MB	llvm function passes [23]
time: 0.151; rss: 1285MB	llvm function passes [6]
time: 0.050; rss: 1295MB	llvm function passes [24]
time: 0.032; rss: 1295MB	llvm module passes [23]
time: 0.158; rss: 1297MB	llvm function passes [18]
time: 0.149; rss: 1303MB	codegen passes [2]
time: 0.060; rss: 1303MB	llvm function passes [22]
time: 0.023; rss: 1303MB	llvm module passes [24]
time: 0.014; rss: 1303MB	llvm module passes [22]
time: 0.211; rss: 1307MB	codegen passes [0]
time: 0.067; rss: 1307MB	llvm module passes [6]
time: 0.236; rss: 1311MB	llvm function passes [7]
time: 0.112; rss: 1311MB	llvm module passes [14]
time: 0.200; rss: 1313MB	codegen passes [20]
time: 0.248; rss: 1317MB	codegen passes [3]
time: 0.251; rss: 1321MB	llvm function passes [9]
time: 0.261; rss: 1322MB	codegen passes [13]
time: 0.207; rss: 1328MB	codegen passes [16]
time: 0.026; rss: 1328MB	llvm function passes [3]
time: 0.274; rss: 1328MB	codegen passes [4]
time: 0.011; rss: 1328MB	llvm function passes [16]
time: 0.004; rss: 1328MB	llvm module passes [16]
time: 0.102; rss: 1328MB	llvm module passes [18]
time: 0.023; rss: 1328MB	llvm module passes [3]
time: 0.238; rss: 1350MB	codegen passes [10]
time: 0.032; rss: 1350MB	llvm function passes [28]
time: 0.342; rss: 1354MB	codegen passes [5]
time: 0.111; rss: 1354MB	llvm function passes [20]
time: 0.092; rss: 1354MB	llvm function passes [13]
time: 0.018; rss: 1354MB	llvm module passes [28]
time: 0.079; rss: 1355MB	llvm function passes [29]
time: 0.013; rss: 1362MB	llvm module passes [29]
time: 0.031; rss: 1363MB	llvm module passes [20]
time: 0.155; rss: 1363MB	llvm module passes [7]
time: 0.119; rss: 1363MB	llvm function passes [26]
time: 0.008; rss: 1362MB	llvm module passes [26]
time: 0.147; rss: 1364MB	llvm module passes [9]
time: 0.068; rss: 1364MB	llvm function passes [10]
time: 0.051; rss: 1364MB	llvm module passes [13]
time: 0.002; rss: 1369MB	llvm module passes [10]
time: 0.243; rss: 1378MB	llvm function passes [25]
time: 0.271; rss: 1397MB	llvm function passes [0]
time: 0.055; rss: 1397MB	llvm module passes [25]
time: 0.043; rss: 1396MB	llvm function passes [33]
time: 0.025; rss: 1405MB	llvm module passes [33]
time: 0.222; rss: 1414MB	llvm function passes [27]
time: 0.051; rss: 1414MB	llvm function passes [35]
time: 0.018; rss: 1413MB	llvm function passes [37]
time: 0.002; rss: 1415MB	llvm module passes [37]
time: 0.028; rss: 1415MB	codegen passes [38]
time: 0.277; rss: 1404MB	codegen passes [16]
time: 0.049; rss: 1404MB	codegen passes [37]
time: 0.098; rss: 1404MB	llvm function passes [36]
time: 0.595; rss: 1403MB	llvm function passes [19]
time: 0.064; rss: 1399MB	llvm module passes [35]
time: 0.172; rss: 1394MB	llvm function passes [32]
time: 0.447; rss: 1395MB	llvm function passes [2]
time: 0.079; rss: 1395MB	llvm module passes [27]
time: 0.283; rss: 1392MB	llvm function passes [5]
time: 0.029; rss: 1395MB	llvm module passes [36]
time: 0.032; rss: 1393MB	llvm module passes [32]
time: 0.227; rss: 1384MB	llvm module passes [0]
time: 0.451; rss: 1386MB	llvm function passes [4]
time: 0.357; rss: 1389MB	llvm function passes [30]
time: 0.213; rss: 1400MB	codegen passes [10]
time: 0.621; rss: 1398MB	codegen passes [17]
time: 0.142; rss: 1399MB	llvm module passes [5]
time: 0.329; rss: 1393MB	llvm function passes [34]
time: 0.214; rss: 1402MB	llvm module passes [2]
time: 0.141; rss: 1405MB	llvm module passes [30]
time: 0.181; rss: 1418MB	llvm module passes [4]
time: 0.280; rss: 1420MB	codegen passes [36]
time: 0.630; rss: 1419MB	llvm function passes [31]
time: 0.462; rss: 1424MB	codegen passes [35]
time: 0.288; rss: 1423MB	llvm module passes [34]
time: 0.934; rss: 1442MB	codegen passes [1]
time: 1.230; rss: 1450MB	codegen passes [15]
time: 0.827; rss: 1463MB	llvm module passes [19]
time: 1.071; rss: 1469MB	codegen passes [3]
time: 0.618; rss: 1484MB	llvm module passes [31]
time: 1.467; rss: 1470MB	codegen passes [11]
time: 1.474; rss: 1425MB	codegen passes [8]
time: 1.491; rss: 1419MB	codegen passes [12]
time: 1.576; rss: 1442MB	codegen passes [26]
time: 1.868; rss: 1482MB	codegen passes [29]
time: 1.546; rss: 1491MB	codegen passes [30]
time: 2.181; rss: 1492MB	codegen passes [22]
time: 2.275; rss: 1482MB	codegen passes [21]
time: 2.212; rss: 1477MB	codegen passes [33]
time: 2.227; rss: 1463MB	codegen passes [28]
time: 1.961; rss: 1450MB	codegen passes [32]
time: 2.371; rss: 1448MB	codegen passes [24]
time: 2.630; rss: 1496MB	codegen passes [13]
time: 2.927; rss: 1571MB	codegen passes [20]
time: 3.107; rss: 1582MB	codegen passes [14]
time: 3.387; rss: 1575MB	codegen passes [23]
time: 3.911; rss: 1727MB	codegen passes [18]
time: 3.708; rss: 1676MB	codegen passes [5]
time: 3.866; rss: 1653MB	codegen passes [25]
time: 3.837; rss: 1667MB	codegen passes [6]
time: 3.868; rss: 1659MB	codegen passes [34]
time: 3.813; rss: 1600MB	codegen passes [2]
time: 3.932; rss: 1557MB	codegen passes [0]
time: 4.365; rss: 1574MB	codegen passes [27]
time: 4.032; rss: 1537MB	codegen passes [31]
time: 4.738; rss: 1499MB	codegen passes [9]
time: 5.023; rss: 1461MB	codegen passes [7]
time: 4.945; rss: 1392MB	codegen passes [4]
time: 4.766; rss: 1326MB	codegen passes [19]
time: 7.549; rss: 1323MB	LLVM passes
time: 0.000; rss: 1323MB	serialize work products
time: 1.083; rss: 299MB	linking
done
