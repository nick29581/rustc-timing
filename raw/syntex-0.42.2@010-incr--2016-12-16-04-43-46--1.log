commit d250169cb5a96481a3e7c8f9fe05de49f60e5ae5
Merge: c6d8ab0 96a5fc7
Author: bors <bors@rust-lang.org>
Date:   Fri Dec 16 07:26:41 2016 +0000

    Auto merge of #38359 - alexcrichton:sccache, r=brson
    
    rustbuild: Add sccache support
    
    This commit adds support for sccache, a ccache-like compiler which works on MSVC
    and stores results into an S3 bucket. This also switches over all Travis and
    AppVeyor automation to using sccache to ensure a shared and unified cache over
    time which can be shared across builders.
    
    The support for sccache manifests as a new `--enable-sccache` option which
    instructs us to configure LLVM differently to use a 'sccache' binary instead of
    a 'ccache' binary. All docker images for Travis builds are updated to download
    Mozilla's tooltool builds of sccache onto various containers and systems.
    Additionally a new `rust-lang-ci-sccache` bucket is configured to hold all of
    our ccache goodies.
    
    ---
    
    Note that this does not currently change Windows [due to previously written up issues](https://github.com/rust-lang/rust/issues/38119#issuecomment-266631585). Despite that, however, I was curious to get timings for the builds on Travis to see what ranges we're working with. As a result, this is a WIP PR I'm using to gauge build times and such.
rustc: ./syntex-0.42.2@010-incr
find . -name '*.rs' | xargs touch
RUSTFLAGS="-Z incremental=incr" \
    cargo rustc -p syntex_syntax  -- \
    -Ztime-passes -Zinput-stats -Z incremental-info
time: 0.093; rss: 75MB	parsing
Lines of code:             33687
Pre-expansion node count:  223115
time: 0.000; rss: 75MB	recursion limit
time: 0.000; rss: 75MB	crate injection
time: 0.000; rss: 75MB	plugin loading
time: 0.000; rss: 75MB	plugin registration
time: 0.247; rss: 151MB	expansion
time: 0.000; rss: 151MB	maybe building test harness
time: 0.006; rss: 151MB	maybe creating a macro crate
Post-expansion node count: 638863
time: 0.000; rss: 151MB	checking for inline asm in case the target doesn't support it
time: 0.012; rss: 151MB	complete gated feature checking
time: 0.023; rss: 151MB	early lint checks
time: 0.007; rss: 151MB	AST validation
time: 0.075; rss: 166MB	name resolution
time: 0.058; rss: 199MB	lowering ast -> hir
time: 0.009; rss: 192MB	indexing hir
time: 0.006; rss: 192MB	attribute checking
time: 0.002; rss: 154MB	language item collection
time: 0.011; rss: 156MB	lifetime resolution
time: 0.000; rss: 156MB	looking for entry point
time: 0.000; rss: 156MB	looking for plugin registrar
time: 0.045; rss: 176MB	region resolution
time: 0.007; rss: 176MB	loop checking
time: 0.002; rss: 176MB	static item recursion checking
time: 0.381; rss: 178MB	compute_incremental_hashes_map
time: 0.000; rss: 178MB	load_dep_graph
time: 0.009; rss: 178MB	stability index
time: 0.021; rss: 181MB	stability checking
time: 0.056; rss: 189MB	type collecting
time: 0.004; rss: 189MB	variance inference
time: 0.006; rss: 193MB	impl wf inference
time: 0.026; rss: 197MB	coherence checking
time: 0.086; rss: 199MB	wf checking
time: 0.196; rss: 207MB	item-types checking
time: 3.560; rss: 266MB	item-bodies checking
time: 0.000; rss: 266MB	drop-impl checking
time: 0.217; rss: 276MB	const checking
time: 0.057; rss: 277MB	privacy checking
time: 0.021; rss: 283MB	intrinsic checking
time: 0.016; rss: 283MB	effect checking
time: 0.049; rss: 283MB	match checking
time: 0.049; rss: 290MB	liveness checking
time: 0.178; rss: 292MB	rvalue checking
time: 0.369; rss: 481MB	MIR dump
  time: 0.060; rss: 483MB	SimplifyCfg
  time: 0.079; rss: 483MB	QualifyAndPromoteConstants
  time: 0.121; rss: 499MB	TypeckMir
  time: 0.004; rss: 499MB	SimplifyBranches
  time: 0.033; rss: 499MB	SimplifyCfg
time: 0.297; rss: 499MB	MIR cleanup and validation
time: 0.472; rss: 500MB	borrow checking
time: 0.024; rss: 500MB	reachability checking
time: 0.038; rss: 500MB	death checking
time: 0.000; rss: 500MB	unused lib feature checking
time: 0.183; rss: 500MB	lint checking
time: 0.000; rss: 500MB	resolving dependency formats
  time: 0.004; rss: 500MB	NoLandingPads
  time: 0.027; rss: 500MB	SimplifyCfg
  time: 0.064; rss: 509MB	EraseRegions
  time: 0.011; rss: 509MB	AddCallGuards
  time: 0.270; rss: 530MB	ElaborateDrops
  time: 0.004; rss: 530MB	NoLandingPads
  time: 0.054; rss: 529MB	SimplifyCfg
  time: 0.029; rss: 528MB	InstCombine
  time: 0.012; rss: 528MB	Deaggregator
  time: 0.004; rss: 528MB	CopyPropagation
  time: 0.035; rss: 528MB	SimplifyLocals
  time: 0.010; rss: 528MB	AddCallGuards
  time: 0.003; rss: 528MB	PreTrans
time: 0.526; rss: 528MB	MIR optimisations
  time: 0.064; rss: 536MB	write metadata
  time: 0.397; rss: 551MB	translation item collection
  time: 0.073; rss: 554MB	codegen unit partitioning
  time: 0.048; rss: 1457MB	internalize symbols
time: 11.877; rss: 1457MB	translation
time: 0.000; rss: 1457MB	assert dep graph
time: 1.425; rss: 1485MB	serialize dep graph
incremental: re-using 0 out of 50 modules
time: 0.000; rss: 1197MB	llvm function passes [0]
time: 0.000; rss: 1199MB	llvm module passes [0]
time: 0.001; rss: 1210MB	llvm function passes [1]
time: 0.000; rss: 1210MB	llvm module passes [1]
time: 0.002; rss: 1210MB	llvm function passes [3]
time: 0.000; rss: 1210MB	llvm module passes [3]
time: 0.002; rss: 1210MB	llvm function passes [2]
time: 0.000; rss: 1210MB	llvm module passes [2]
time: 0.002; rss: 1210MB	codegen passes [0]
time: 0.004; rss: 1210MB	llvm function passes [6]
time: 0.005; rss: 1210MB	codegen passes [1]
time: 0.002; rss: 1210MB	llvm module passes [6]
time: 0.001; rss: 1210MB	llvm function passes [1]
time: 0.000; rss: 1210MB	llvm module passes [1]
time: 0.011; rss: 1212MB	llvm function passes [5]
time: 0.008; rss: 1212MB	codegen passes [3]
time: 0.017; rss: 1214MB	llvm function passes [4]
time: 0.006; rss: 1214MB	llvm module passes [5]
time: 0.017; rss: 1216MB	codegen passes [2]
time: 0.007; rss: 1216MB	llvm module passes [4]
time: 0.016; rss: 1216MB	codegen passes [1]
time: 0.025; rss: 1226MB	llvm function passes [3]
time: 0.000; rss: 1233MB	llvm function passes [12]
time: 0.000; rss: 1233MB	llvm module passes [12]
time: 0.001; rss: 1233MB	codegen passes [12]
time: 0.014; rss: 1233MB	llvm module passes [3]
time: 0.038; rss: 1235MB	llvm function passes [8]
time: 0.001; rss: 1239MB	llvm function passes [15]
time: 0.000; rss: 1239MB	llvm module passes [15]
time: 0.008; rss: 1239MB	llvm module passes [8]
time: 0.001; rss: 1244MB	llvm function passes [16]
time: 0.000; rss: 1244MB	llvm module passes [16]
time: 0.000; rss: 1246MB	llvm function passes [17]
time: 0.000; rss: 1246MB	llvm module passes [17]
time: 0.061; rss: 1250MB	codegen passes [6]
time: 0.000; rss: 1259MB	llvm function passes [19]
time: 0.000; rss: 1259MB	llvm module passes [19]
time: 0.001; rss: 1259MB	codegen passes [19]
time: 0.066; rss: 1269MB	llvm function passes [2]
time: 0.032; rss: 1279MB	codegen passes [17]
time: 0.032; rss: 1279MB	llvm function passes [6]
time: 0.059; rss: 1323MB	llvm function passes [12]
time: 0.001; rss: 1325MB	llvm module passes [12]
time: 0.016; rss: 1325MB	llvm module passes [6]
time: 0.122; rss: 1325MB	llvm function passes [7]
time: 0.036; rss: 1325MB	llvm module passes [2]
time: 0.033; rss: 1327MB	llvm function passes [26]
time: 0.099; rss: 1327MB	llvm function passes [9]
time: 0.011; rss: 1327MB	llvm module passes [26]
time: 0.087; rss: 1331MB	codegen passes [15]
time: 0.028; rss: 1331MB	llvm module passes [9]
time: 0.078; rss: 1331MB	llvm function passes [25]
time: 0.067; rss: 1331MB	llvm function passes [27]
time: 0.091; rss: 1335MB	llvm function passes [17]
time: 0.004; rss: 1335MB	llvm module passes [17]
time: 0.024; rss: 1335MB	llvm module passes [25]
time: 0.139; rss: 1339MB	codegen passes [16]
time: 0.000; rss: 1339MB	llvm function passes [16]
time: 0.000; rss: 1339MB	llvm module passes [16]
time: 0.003; rss: 1339MB	codegen passes [16]
time: 0.000; rss: 1339MB	codegen passes [16]
time: 0.028; rss: 1339MB	llvm module passes [27]
time: 0.172; rss: 1339MB	llvm function passes [10]
time: 0.015; rss: 1339MB	llvm function passes [38]
time: 0.146; rss: 1339MB	llvm function passes [19]
time: 0.133; rss: 1343MB	llvm function passes [23]
time: 0.009; rss: 1343MB	llvm module passes [38]
time: 0.166; rss: 1343MB	llvm function passes [18]
time: 0.028; rss: 1343MB	llvm module passes [10]
time: 0.023; rss: 1343MB	llvm function passes [39]
time: 0.005; rss: 1343MB	llvm module passes [39]
time: 0.196; rss: 1345MB	llvm function passes [13]
time: 0.037; rss: 1345MB	llvm module passes [19]
time: 0.144; rss: 1345MB	llvm module passes [7]
time: 0.147; rss: 1356MB	codegen passes [12]
time: 0.065; rss: 1356MB	llvm module passes [23]
time: 0.045; rss: 1356MB	llvm module passes [13]
time: 0.194; rss: 1362MB	llvm function passes [28]
time: 0.075; rss: 1360MB	llvm module passes [18]
time: 0.015; rss: 1362MB	llvm module passes [28]
time: 0.209; rss: 1362MB	llvm function passes [29]
time: 0.166; rss: 1373MB	llvm function passes [35]
time: 0.022; rss: 1373MB	llvm module passes [29]
time: 0.026; rss: 1386MB	llvm module passes [35]
time: 0.307; rss: 1394MB	llvm function passes [20]
time: 0.334; rss: 1394MB	llvm function passes [14]
time: 0.335; rss: 1400MB	llvm function passes [21]
time: 0.054; rss: 1420MB	llvm module passes [20]
time: 0.367; rss: 1422MB	llvm function passes [22]
time: 0.319; rss: 1429MB	llvm function passes [34]
time: 0.485; rss: 1432MB	llvm function passes [0]
time: 0.246; rss: 1432MB	codegen passes [38]
time: 0.015; rss: 1432MB	llvm module passes [34]
time: 0.358; rss: 1433MB	llvm function passes [33]
time: 0.097; rss: 1433MB	llvm module passes [21]
time: 0.077; rss: 1434MB	llvm module passes [22]
time: 0.324; rss: 1434MB	llvm function passes [32]
time: 0.507; rss: 1434MB	llvm function passes [11]
time: 0.283; rss: 1435MB	codegen passes [17]
time: 0.179; rss: 1427MB	llvm module passes [14]
time: 0.066; rss: 1420MB	llvm module passes [33]
time: 0.541; rss: 1419MB	codegen passes [5]
time: 0.428; rss: 1420MB	llvm function passes [15]
time: 0.048; rss: 1418MB	llvm module passes [32]
time: 0.349; rss: 1420MB	llvm function passes [36]
time: 0.454; rss: 1406MB	llvm function passes [37]
time: 0.077; rss: 1407MB	llvm module passes [15]
time: 0.563; rss: 1405MB	llvm function passes [30]
time: 0.061; rss: 1405MB	llvm module passes [36]
time: 0.211; rss: 1410MB	llvm module passes [0]
time: 0.682; rss: 1406MB	llvm function passes [1]
time: 0.106; rss: 1412MB	llvm module passes [30]
time: 0.252; rss: 1421MB	codegen passes [32]
time: 0.341; rss: 1438MB	llvm module passes [37]
time: 0.288; rss: 1438MB	llvm module passes [1]
time: 0.894; rss: 1435MB	llvm function passes [24]
time: 0.585; rss: 1449MB	llvm module passes [11]
time: 0.948; rss: 1480MB	codegen passes [27]
time: 0.551; rss: 1488MB	llvm module passes [24]
time: 1.021; rss: 1474MB	codegen passes [39]
time: 1.361; rss: 1464MB	codegen passes [9]
time: 1.351; rss: 1477MB	codegen passes [4]
time: 1.508; rss: 1515MB	codegen passes [26]
time: 1.876; rss: 1490MB	codegen passes [3]
time: 1.650; rss: 1490MB	codegen passes [10]
time: 1.754; rss: 1471MB	codegen passes [8]
time: 1.324; rss: 1489MB	codegen passes [36]
time: 1.739; rss: 1497MB	codegen passes [13]
time: 1.907; rss: 1488MB	codegen passes [28]
time: 1.936; rss: 1483MB	codegen passes [19]
time: 1.847; rss: 1455MB	codegen passes [34]
time: 2.120; rss: 1455MB	codegen passes [35]
time: 2.031; rss: 1440MB	codegen passes [29]
time: 2.663; rss: 1524MB	codegen passes [6]
time: 2.852; rss: 1560MB	codegen passes [25]
time: 2.670; rss: 1563MB	codegen passes [18]
time: 2.633; rss: 1535MB	codegen passes [23]
time: 3.242; rss: 1560MB	codegen passes [2]
time: 3.519; rss: 1641MB	codegen passes [20]
time: 3.850; rss: 1672MB	codegen passes [33]
time: 3.735; rss: 1643MB	codegen passes [14]
time: 4.198; rss: 1692MB	codegen passes [7]
time: 4.037; rss: 1660MB	codegen passes [21]
time: 4.178; rss: 1608MB	codegen passes [22]
time: 4.159; rss: 1565MB	codegen passes [37]
time: 4.297; rss: 1533MB	codegen passes [15]
time: 4.087; rss: 1570MB	codegen passes [24]
time: 4.996; rss: 1508MB	codegen passes [0]
time: 4.622; rss: 1442MB	codegen passes [1]
time: 5.014; rss: 1390MB	codegen passes [30]
time: 5.049; rss: 1324MB	codegen passes [11]
time: 7.770; rss: 1323MB	LLVM passes
time: 0.000; rss: 1323MB	serialize work products
time: 1.058; rss: 287MB	linking
done
