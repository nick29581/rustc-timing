commit 1b38776c1f68c6fd47c1b2f7b7974efc7dd64901
Merge: 439c312 0013d4c
Author: bors <bors@rust-lang.org>
Date:   Wed Dec 21 10:38:22 2016 +0000

    Auto merge of #38302 - Mark-Simulacrum:trans-cleanup, r=eddyb
    
    Cleanup old trans
    
    This is a cleanup of old trans, with the following main points:
     - Remove the `build.rs` API (prefer using `Builder` directly, which is now passed where needed through `BlockAndBuilder`).
     - Remove `Block` (inlining it into `BlockAndBuilder`)
     - Remove `Callee::call`, primarily through inlining and simplification of code.
     - Thinned `FunctionContext`:
       - `mir`, `debug_scopes`, `scopes`, and `fn_ty` are moved to `MirContext`.
       - `param_env` is moved to `SharedCrateContext` and renamed to `empty_param_env`.
       - `llretslotptr` is removed, replaced with more careful management of the return values in calls.
       - `landingpad_alloca` is inlined into cleanup.
       - `param_substs` are moved to `MirContext`.
       - `span` is removed, it was never set to anything but `None`.
       - `block_arena` and `lpad_arena` are removed, since neither was necessary (landing pads and block are quite small, and neither needs arena allocation).
     - Fixed `drop_in_place` not running other destructors in the same function.
    
    Fixes #35566 (thanks to @est31 for confirming).
rustc: ./regex-0.1.80@010-baseline
cargo rustc  -- -Ztime-passes -Zinput-stats
time: 0.024; rss: 50MB	parsing
Lines of code:             10689
Pre-expansion node count:  55396
time: 0.000; rss: 50MB	recursion limit
time: 0.000; rss: 50MB	crate injection
time: 0.000; rss: 50MB	plugin loading
time: 0.000; rss: 50MB	plugin registration
time: 0.043; rss: 82MB	expansion
time: 0.000; rss: 82MB	maybe building test harness
time: 0.001; rss: 82MB	maybe creating a macro crate
Post-expansion node count: 86869
time: 0.000; rss: 82MB	checking for inline asm in case the target doesn't support it
time: 0.001; rss: 82MB	complete gated feature checking
time: 0.003; rss: 82MB	early lint checks
time: 0.001; rss: 82MB	AST validation
time: 0.010; rss: 84MB	name resolution
time: 0.008; rss: 88MB	lowering ast -> hir
time: 0.001; rss: 90MB	indexing hir
time: 0.001; rss: 90MB	attribute checking
time: 0.000; rss: 85MB	language item collection
time: 0.001; rss: 85MB	lifetime resolution
time: 0.000; rss: 85MB	looking for entry point
time: 0.000; rss: 85MB	looking for plugin registrar
time: 0.005; rss: 89MB	region resolution
time: 0.001; rss: 89MB	loop checking
time: 0.000; rss: 89MB	static item recursion checking
time: 0.034; rss: 89MB	compute_incremental_hashes_map
time: 0.000; rss: 89MB	load_dep_graph
time: 0.001; rss: 89MB	stability index
time: 0.002; rss: 89MB	stability checking
time: 0.010; rss: 91MB	type collecting
time: 0.000; rss: 91MB	variance inference
time: 0.000; rss: 91MB	impl wf inference
time: 0.012; rss: 92MB	coherence checking
time: 0.020; rss: 93MB	wf checking
time: 0.114; rss: 98MB	item-types checking
time: 0.283; rss: 106MB	item-bodies checking
time: 0.000; rss: 106MB	drop-impl checking
time: 0.038; rss: 135MB	const checking
time: 0.006; rss: 135MB	privacy checking
time: 0.002; rss: 135MB	intrinsic checking
time: 0.001; rss: 135MB	effect checking
time: 0.005; rss: 135MB	match checking
time: 0.004; rss: 135MB	liveness checking
time: 0.015; rss: 135MB	rvalue checking
time: 0.043; rss: 156MB	MIR dump
  time: 0.006; rss: 157MB	SimplifyCfg
  time: 0.009; rss: 157MB	QualifyAndPromoteConstants
  time: 0.012; rss: 157MB	TypeckMir
  time: 0.000; rss: 157MB	SimplifyBranches
  time: 0.003; rss: 157MB	SimplifyCfg
time: 0.030; rss: 157MB	MIR cleanup and validation
time: 0.044; rss: 157MB	borrow checking
time: 0.001; rss: 157MB	reachability checking
time: 0.004; rss: 157MB	death checking
time: 0.000; rss: 157MB	unused lib feature checking
time: 0.027; rss: 157MB	lint checking
time: 0.000; rss: 157MB	resolving dependency formats
  time: 0.000; rss: 157MB	NoLandingPads
  time: 0.002; rss: 157MB	SimplifyCfg
  time: 0.007; rss: 157MB	EraseRegions
  time: 0.001; rss: 157MB	AddCallGuards
  time: 0.017; rss: 160MB	ElaborateDrops
  time: 0.000; rss: 160MB	NoLandingPads
  time: 0.004; rss: 160MB	SimplifyCfg
  time: 0.003; rss: 160MB	InstCombine
  time: 0.002; rss: 160MB	Deaggregator
  time: 0.000; rss: 160MB	CopyPropagation
  time: 0.004; rss: 160MB	SimplifyLocals
  time: 0.001; rss: 160MB	AddCallGuards
  time: 0.000; rss: 160MB	PreTrans
time: 0.042; rss: 160MB	MIR optimisations
  time: 0.008; rss: 162MB	write metadata
  time: 0.082; rss: 167MB	translation item collection
  time: 0.012; rss: 171MB	codegen unit partitioning
  time: 0.012; rss: 227MB	internalize symbols
time: 0.895; rss: 227MB	translation
time: 0.000; rss: 227MB	assert dep graph
time: 0.000; rss: 227MB	serialize dep graph
  time: 0.083; rss: 147MB	llvm function passes [0]
  time: 0.427; rss: 183MB	llvm module passes [0]
  time: 2.449; rss: 181MB	codegen passes [0]
  time: 0.000; rss: 181MB	codegen passes [0]
time: 3.173; rss: 181MB	LLVM passes
time: 0.000; rss: 181MB	serialize work products
time: 0.119; rss: 95MB	linking
done
