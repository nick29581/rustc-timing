commit aa7a2e9e61cfb9469c7eb88308fa2e1a087ebdb4
Merge: a274617 5bf4d6f
Author: bors <bors@rust-lang.org>
Date:   Wed Dec 14 00:31:48 2016 +0000

    Auto merge of #38181 - jsgf:test-filter-exact, r=alexcrichton
    
    libtest: add --exact to make filter matching exact
    
    Filter matching is by substring by default. This makes it impossible
    to run a single test if its name is a substring of some other test.
    For example, its not possible to run just `mymod::test` with these
    tests:
    
    ```
      mymod::test
      mymod::test1
      mymod::test_module::moretests
    ```
    
    You could declare by convention that no test has a name that's a
    substring of another test, but that's not really practical.
    
    This PR adds the `--exact` flag, to make filter matching exactly
    match the complete name.
rustc: ./syntex-0.42.2@010-incr
find . -name '*.rs' | xargs touch
RUSTFLAGS="-Z incremental=incr" \
    cargo rustc -p syntex_syntax  -- \
    -Ztime-passes -Zinput-stats -Z incremental-info
time: 0.092; rss: 75MB	parsing
Lines of code:             33687
Pre-expansion node count:  223115
time: 0.000; rss: 75MB	recursion limit
time: 0.000; rss: 75MB	crate injection
time: 0.000; rss: 75MB	plugin loading
time: 0.000; rss: 75MB	plugin registration
time: 0.247; rss: 152MB	expansion
time: 0.000; rss: 152MB	maybe building test harness
time: 0.006; rss: 152MB	maybe creating a macro crate
Post-expansion node count: 638863
time: 0.000; rss: 152MB	checking for inline asm in case the target doesn't support it
time: 0.012; rss: 152MB	complete gated feature checking
time: 0.023; rss: 152MB	early lint checks
time: 0.007; rss: 152MB	AST validation
time: 0.075; rss: 166MB	name resolution
time: 0.058; rss: 200MB	lowering ast -> hir
time: 0.010; rss: 192MB	indexing hir
time: 0.006; rss: 192MB	attribute checking
time: 0.002; rss: 154MB	language item collection
time: 0.011; rss: 156MB	lifetime resolution
time: 0.000; rss: 156MB	looking for entry point
time: 0.000; rss: 156MB	looking for plugin registrar
time: 0.046; rss: 177MB	region resolution
time: 0.008; rss: 177MB	loop checking
time: 0.002; rss: 177MB	static item recursion checking
time: 0.381; rss: 178MB	compute_incremental_hashes_map
time: 0.000; rss: 178MB	load_dep_graph
time: 0.009; rss: 178MB	stability index
time: 0.021; rss: 182MB	stability checking
time: 0.056; rss: 190MB	type collecting
time: 0.004; rss: 190MB	variance inference
time: 0.006; rss: 194MB	impl wf inference
time: 0.026; rss: 197MB	coherence checking
time: 0.086; rss: 200MB	wf checking
time: 0.196; rss: 208MB	item-types checking
time: 3.556; rss: 268MB	item-bodies checking
time: 0.000; rss: 268MB	drop-impl checking
time: 0.219; rss: 277MB	const checking
time: 0.057; rss: 277MB	privacy checking
time: 0.020; rss: 284MB	intrinsic checking
time: 0.014; rss: 284MB	effect checking
time: 0.049; rss: 284MB	match checking
time: 0.047; rss: 290MB	liveness checking
time: 0.173; rss: 293MB	rvalue checking
time: 0.361; rss: 482MB	MIR dump
  time: 0.057; rss: 484MB	SimplifyCfg
  time: 0.074; rss: 484MB	QualifyAndPromoteConstants
  time: 0.119; rss: 500MB	TypeckMir
  time: 0.004; rss: 500MB	SimplifyBranches
  time: 0.031; rss: 500MB	SimplifyCfg
time: 0.284; rss: 500MB	MIR cleanup and validation
time: 0.471; rss: 500MB	borrow checking
time: 0.024; rss: 500MB	reachability checking
time: 0.038; rss: 500MB	death checking
time: 0.000; rss: 500MB	unused lib feature checking
time: 0.178; rss: 500MB	lint checking
time: 0.000; rss: 500MB	resolving dependency formats
  time: 0.004; rss: 500MB	NoLandingPads
  time: 0.027; rss: 500MB	SimplifyCfg
  time: 0.064; rss: 509MB	EraseRegions
  time: 0.011; rss: 509MB	AddCallGuards
  time: 0.271; rss: 531MB	ElaborateDrops
  time: 0.004; rss: 531MB	NoLandingPads
  time: 0.052; rss: 531MB	SimplifyCfg
  time: 0.029; rss: 530MB	InstCombine
  time: 0.013; rss: 530MB	Deaggregator
  time: 0.004; rss: 530MB	CopyPropagation
  time: 0.035; rss: 530MB	SimplifyLocals
  time: 0.010; rss: 530MB	AddCallGuards
  time: 0.003; rss: 530MB	PreTrans
time: 0.525; rss: 530MB	MIR optimisations
  time: 0.065; rss: 538MB	write metadata
  time: 0.392; rss: 551MB	translation item collection
  time: 0.072; rss: 553MB	codegen unit partitioning
  time: 0.048; rss: 1457MB	internalize symbols
time: 11.743; rss: 1457MB	translation
time: 0.000; rss: 1457MB	assert dep graph
time: 1.401; rss: 1485MB	serialize dep graph
incremental: re-using 0 out of 50 modules
time: 0.000; rss: 1197MB	llvm function passes [2]
time: 0.000; rss: 1199MB	llvm module passes [2]
time: 0.001; rss: 1208MB	llvm function passes [0]
time: 0.000; rss: 1208MB	llvm module passes [0]
time: 0.001; rss: 1208MB	llvm function passes [1]
time: 0.000; rss: 1208MB	llvm module passes [1]
time: 0.002; rss: 1212MB	llvm function passes [3]
time: 0.000; rss: 1212MB	llvm module passes [3]
time: 0.002; rss: 1212MB	codegen passes [2]
time: 0.001; rss: 1212MB	llvm function passes [2]
time: 0.001; rss: 1212MB	llvm module passes [2]
time: 0.004; rss: 1212MB	llvm function passes [6]
time: 0.005; rss: 1212MB	codegen passes [0]
time: 0.001; rss: 1212MB	llvm module passes [6]
time: 0.008; rss: 1214MB	codegen passes [1]
time: 0.011; rss: 1214MB	llvm function passes [4]
time: 0.006; rss: 1217MB	llvm module passes [4]
time: 0.017; rss: 1217MB	llvm function passes [5]
time: 0.017; rss: 1219MB	codegen passes [2]
time: 0.007; rss: 1221MB	llvm module passes [5]
time: 0.018; rss: 1223MB	llvm function passes [1]
time: 0.025; rss: 1225MB	llvm function passes [0]
time: 0.030; rss: 1229MB	codegen passes [3]
time: 0.008; rss: 1229MB	llvm module passes [1]
time: 0.000; rss: 1231MB	llvm function passes [12]
time: 0.000; rss: 1231MB	llvm module passes [12]
time: 0.001; rss: 1231MB	codegen passes [12]
time: 0.015; rss: 1234MB	llvm module passes [0]
time: 0.000; rss: 1245MB	llvm function passes [15]
time: 0.000; rss: 1244MB	llvm module passes [15]
time: 0.001; rss: 1244MB	llvm function passes [16]
time: 0.000; rss: 1244MB	llvm module passes [16]
time: 0.000; rss: 1248MB	llvm function passes [17]
time: 0.000; rss: 1248MB	llvm module passes [17]
time: 0.000; rss: 1258MB	llvm function passes [20]
time: 0.000; rss: 1258MB	llvm module passes [20]
time: 0.061; rss: 1258MB	codegen passes [6]
time: 0.001; rss: 1258MB	codegen passes [20]
time: 0.066; rss: 1269MB	llvm function passes [2]
time: 0.038; rss: 1283MB	llvm function passes [6]
time: 0.003; rss: 1283MB	llvm function passes [32]
time: 0.038; rss: 1284MB	llvm module passes [2]
time: 0.023; rss: 1284MB	llvm module passes [6]
time: 0.107; rss: 1288MB	llvm function passes [12]
time: 0.001; rss: 1288MB	llvm module passes [12]
time: 0.004; rss: 1288MB	llvm function passes [39]
time: 0.000; rss: 1288MB	llvm function passes [41]
time: 0.000; rss: 1288MB	llvm module passes [41]
time: 0.109; rss: 1293MB	codegen passes [15]
time: 0.042; rss: 1293MB	llvm module passes [32]
time: 0.108; rss: 1295MB	codegen passes [17]
time: 0.038; rss: 1300MB	llvm module passes [39]
time: 0.178; rss: 1300MB	llvm function passes [7]
time: 0.039; rss: 1301MB	codegen passes [41]
time: 0.206; rss: 1297MB	llvm function passes [8]
time: 0.068; rss: 1298MB	codegen passes [15]
time: 0.180; rss: 1302MB	codegen passes [16]
time: 0.105; rss: 1306MB	llvm function passes [40]
time: 0.168; rss: 1297MB	llvm function passes [27]
time: 0.004; rss: 1297MB	llvm module passes [27]
time: 0.018; rss: 1297MB	llvm module passes [40]
time: 0.256; rss: 1297MB	llvm function passes [10]
time: 0.198; rss: 1297MB	llvm function passes [26]
time: 0.227; rss: 1296MB	llvm function passes [24]
time: 0.211; rss: 1296MB	llvm function passes [29]
time: 0.011; rss: 1297MB	llvm module passes [24]
time: 0.040; rss: 1297MB	llvm module passes [10]
time: 0.040; rss: 1297MB	llvm module passes [26]
time: 0.306; rss: 1298MB	llvm function passes [11]
time: 0.153; rss: 1298MB	llvm module passes [7]
time: 0.303; rss: 1298MB	llvm function passes [13]
time: 0.258; rss: 1298MB	llvm function passes [25]
time: 0.036; rss: 1298MB	llvm module passes [29]
time: 0.292; rss: 1301MB	llvm function passes [19]
time: 0.164; rss: 1305MB	llvm module passes [8]
time: 0.031; rss: 1307MB	llvm module passes [13]
time: 0.310; rss: 1309MB	llvm function passes [23]
time: 0.062; rss: 1315MB	llvm module passes [11]
time: 0.058; rss: 1315MB	llvm module passes [25]
time: 0.055; rss: 1315MB	llvm module passes [19]
time: 0.362; rss: 1315MB	llvm function passes [18]
time: 0.037; rss: 1315MB	llvm module passes [23]
time: 0.168; rss: 1332MB	codegen passes [12]
time: 0.406; rss: 1339MB	llvm function passes [14]
time: 0.122; rss: 1344MB	codegen passes [39]
time: 0.049; rss: 1348MB	llvm module passes [18]
time: 0.422; rss: 1359MB	llvm function passes [20]
time: 0.444; rss: 1368MB	llvm function passes [22]
time: 0.478; rss: 1381MB	llvm function passes [21]
time: 0.105; rss: 1381MB	llvm module passes [14]
time: 0.086; rss: 1380MB	llvm module passes [20]
time: 0.452; rss: 1385MB	llvm function passes [36]
time: 0.490; rss: 1386MB	llvm function passes [28]
time: 0.486; rss: 1388MB	llvm function passes [34]
time: 0.073; rss: 1393MB	llvm module passes [21]
time: 0.103; rss: 1393MB	llvm module passes [22]
time: 0.013; rss: 1393MB	llvm module passes [34]
time: 0.539; rss: 1398MB	llvm function passes [30]
time: 0.647; rss: 1392MB	llvm function passes [3]
time: 0.625; rss: 1388MB	codegen passes [1]
time: 0.324; rss: 1388MB	codegen passes [27]
time: 0.559; rss: 1388MB	llvm function passes [37]
time: 0.118; rss: 1389MB	llvm module passes [28]
time: 0.089; rss: 1390MB	llvm module passes [30]
time: 0.724; rss: 1389MB	llvm function passes [9]
time: 0.617; rss: 1387MB	llvm function passes [38]
time: 0.664; rss: 1373MB	llvm function passes [33]
time: 0.152; rss: 1383MB	llvm module passes [37]
time: 0.263; rss: 1383MB	llvm module passes [36]
time: 0.723; rss: 1385MB	llvm function passes [35]
time: 0.097; rss: 1386MB	llvm module passes [38]
time: 0.747; rss: 1386MB	llvm function passes [31]
time: 0.756; rss: 1396MB	codegen passes [32]
time: 0.126; rss: 1399MB	llvm module passes [35]
time: 0.392; rss: 1411MB	llvm module passes [3]
time: 0.391; rss: 1426MB	llvm module passes [33]
time: 0.457; rss: 1434MB	llvm module passes [9]
time: 1.170; rss: 1447MB	codegen passes [5]
time: 1.015; rss: 1442MB	codegen passes [4]
time: 0.374; rss: 1439MB	llvm module passes [31]
time: 1.288; rss: 1411MB	codegen passes [0]
time: 0.904; rss: 1434MB	codegen passes [40]
time: 1.166; rss: 1427MB	codegen passes [10]
time: 1.174; rss: 1442MB	codegen passes [24]
time: 1.697; rss: 1419MB	codegen passes [6]
time: 1.341; rss: 1417MB	codegen passes [26]
time: 1.483; rss: 1388MB	codegen passes [11]
time: 1.774; rss: 1410MB	codegen passes [29]
time: 2.081; rss: 1465MB	codegen passes [34]
time: 2.224; rss: 1474MB	codegen passes [19]
time: 2.389; rss: 1481MB	codegen passes [13]
time: 1.946; rss: 1492MB	codegen passes [30]
time: 2.136; rss: 1486MB	codegen passes [37]
time: 2.569; rss: 1520MB	codegen passes [25]
time: 3.416; rss: 1530MB	codegen passes [2]
time: 2.802; rss: 1591MB	codegen passes [36]
time: 3.075; rss: 1586MB	codegen passes [18]
time: 3.540; rss: 1607MB	codegen passes [23]
time: 3.144; rss: 1589MB	codegen passes [14]
time: 4.114; rss: 1751MB	codegen passes [20]
time: 3.972; rss: 1707MB	codegen passes [33]
time: 4.875; rss: 1681MB	codegen passes [7]
time: 3.943; rss: 1663MB	codegen passes [22]
time: 4.120; rss: 1633MB	codegen passes [35]
time: 4.343; rss: 1597MB	codegen passes [38]
time: 4.299; rss: 1546MB	codegen passes [21]
time: 4.371; rss: 1549MB	codegen passes [31]
time: 4.222; rss: 1499MB	codegen passes [9]
time: 5.638; rss: 1477MB	codegen passes [8]
time: 5.012; rss: 1407MB	codegen passes [28]
time: 5.260; rss: 1323MB	codegen passes [3]
time: 7.299; rss: 1322MB	LLVM passes
time: 0.000; rss: 1322MB	serialize work products
time: 1.055; rss: 292MB	linking
done
