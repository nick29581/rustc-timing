commit d250169cb5a96481a3e7c8f9fe05de49f60e5ae5
Merge: c6d8ab0 96a5fc7
Author: bors <bors@rust-lang.org>
Date:   Fri Dec 16 07:26:41 2016 +0000

    Auto merge of #38359 - alexcrichton:sccache, r=brson
    
    rustbuild: Add sccache support
    
    This commit adds support for sccache, a ccache-like compiler which works on MSVC
    and stores results into an S3 bucket. This also switches over all Travis and
    AppVeyor automation to using sccache to ensure a shared and unified cache over
    time which can be shared across builders.
    
    The support for sccache manifests as a new `--enable-sccache` option which
    instructs us to configure LLVM differently to use a 'sccache' binary instead of
    a 'ccache' binary. All docker images for Travis builds are updated to download
    Mozilla's tooltool builds of sccache onto various containers and systems.
    Additionally a new `rust-lang-ci-sccache` bucket is configured to hold all of
    our ccache goodies.
    
    ---
    
    Note that this does not currently change Windows [due to previously written up issues](https://github.com/rust-lang/rust/issues/38119#issuecomment-266631585). Despite that, however, I was curious to get timings for the builds on Travis to see what ranges we're working with. As a result, this is a WIP PR I'm using to gauge build times and such.
rustc: ./syntex-0.42.2@010-incr
find . -name '*.rs' | xargs touch
RUSTFLAGS="-Z incremental=incr" \
    cargo rustc -p syntex_syntax  -- \
    -Ztime-passes -Zinput-stats -Z incremental-info
time: 0.092; rss: 75MB	parsing
Lines of code:             33687
Pre-expansion node count:  223115
time: 0.000; rss: 75MB	recursion limit
time: 0.000; rss: 75MB	crate injection
time: 0.000; rss: 75MB	plugin loading
time: 0.000; rss: 75MB	plugin registration
time: 0.246; rss: 151MB	expansion
time: 0.000; rss: 151MB	maybe building test harness
time: 0.006; rss: 151MB	maybe creating a macro crate
Post-expansion node count: 638863
time: 0.000; rss: 151MB	checking for inline asm in case the target doesn't support it
time: 0.012; rss: 151MB	complete gated feature checking
time: 0.023; rss: 151MB	early lint checks
time: 0.007; rss: 151MB	AST validation
time: 0.075; rss: 166MB	name resolution
time: 0.058; rss: 200MB	lowering ast -> hir
time: 0.010; rss: 192MB	indexing hir
time: 0.006; rss: 192MB	attribute checking
time: 0.002; rss: 154MB	language item collection
time: 0.011; rss: 156MB	lifetime resolution
time: 0.000; rss: 156MB	looking for entry point
time: 0.000; rss: 156MB	looking for plugin registrar
time: 0.045; rss: 177MB	region resolution
time: 0.007; rss: 177MB	loop checking
time: 0.002; rss: 177MB	static item recursion checking
time: 0.381; rss: 178MB	compute_incremental_hashes_map
time: 0.000; rss: 178MB	load_dep_graph
time: 0.009; rss: 178MB	stability index
time: 0.021; rss: 182MB	stability checking
time: 0.055; rss: 190MB	type collecting
time: 0.004; rss: 190MB	variance inference
time: 0.006; rss: 193MB	impl wf inference
time: 0.025; rss: 197MB	coherence checking
time: 0.087; rss: 200MB	wf checking
time: 0.196; rss: 208MB	item-types checking
time: 3.558; rss: 266MB	item-bodies checking
time: 0.000; rss: 266MB	drop-impl checking
time: 0.219; rss: 277MB	const checking
time: 0.066; rss: 277MB	privacy checking
time: 0.021; rss: 283MB	intrinsic checking
time: 0.016; rss: 283MB	effect checking
time: 0.049; rss: 283MB	match checking
time: 0.049; rss: 290MB	liveness checking
time: 0.179; rss: 293MB	rvalue checking
time: 0.366; rss: 482MB	MIR dump
  time: 0.060; rss: 483MB	SimplifyCfg
  time: 0.079; rss: 483MB	QualifyAndPromoteConstants
  time: 0.127; rss: 500MB	TypeckMir
  time: 0.004; rss: 500MB	SimplifyBranches
  time: 0.033; rss: 500MB	SimplifyCfg
time: 0.303; rss: 500MB	MIR cleanup and validation
time: 0.473; rss: 500MB	borrow checking
time: 0.024; rss: 500MB	reachability checking
time: 0.038; rss: 500MB	death checking
time: 0.000; rss: 500MB	unused lib feature checking
time: 0.184; rss: 500MB	lint checking
time: 0.000; rss: 500MB	resolving dependency formats
  time: 0.004; rss: 500MB	NoLandingPads
  time: 0.027; rss: 500MB	SimplifyCfg
  time: 0.064; rss: 509MB	EraseRegions
  time: 0.011; rss: 509MB	AddCallGuards
  time: 0.270; rss: 531MB	ElaborateDrops
  time: 0.004; rss: 531MB	NoLandingPads
  time: 0.076; rss: 531MB	SimplifyCfg
  time: 0.038; rss: 530MB	InstCombine
  time: 0.018; rss: 530MB	Deaggregator
  time: 0.005; rss: 530MB	CopyPropagation
  time: 0.045; rss: 530MB	SimplifyLocals
  time: 0.014; rss: 530MB	AddCallGuards
  time: 0.004; rss: 530MB	PreTrans
time: 0.580; rss: 530MB	MIR optimisations
  time: 0.096; rss: 538MB	write metadata
  time: 0.549; rss: 551MB	translation item collection
  time: 0.071; rss: 556MB	codegen unit partitioning
  time: 0.048; rss: 1457MB	internalize symbols
time: 12.269; rss: 1457MB	translation
time: 0.000; rss: 1457MB	assert dep graph
time: 1.367; rss: 1485MB	serialize dep graph
incremental: re-using 0 out of 50 modules
time: 0.000; rss: 1197MB	llvm function passes [2]
time: 0.000; rss: 1201MB	llvm module passes [2]
time: 0.001; rss: 1205MB	llvm function passes [0]
time: 0.000; rss: 1205MB	llvm module passes [0]
time: 0.001; rss: 1206MB	llvm function passes [3]
time: 0.000; rss: 1206MB	llvm module passes [3]
time: 0.001; rss: 1206MB	llvm function passes [4]
time: 0.000; rss: 1206MB	llvm module passes [4]
time: 0.002; rss: 1208MB	codegen passes [2]
time: 0.004; rss: 1208MB	llvm function passes [5]
time: 0.004; rss: 1208MB	codegen passes [0]
time: 0.002; rss: 1210MB	llvm module passes [5]
time: 0.001; rss: 1210MB	llvm function passes [7]
time: 0.000; rss: 1210MB	llvm module passes [7]
time: 0.012; rss: 1220MB	codegen passes [3]
time: 0.017; rss: 1220MB	llvm function passes [1]
time: 0.008; rss: 1225MB	llvm module passes [1]
time: 0.017; rss: 1225MB	codegen passes [7]
time: 0.031; rss: 1227MB	llvm function passes [30]
time: 0.013; rss: 1227MB	llvm function passes [33]
time: 0.010; rss: 1231MB	llvm module passes [33]
time: 0.000; rss: 1237MB	llvm function passes [9]
time: 0.000; rss: 1237MB	llvm module passes [9]
time: 0.048; rss: 1237MB	codegen passes [4]
time: 0.028; rss: 1237MB	llvm function passes [7]
time: 0.031; rss: 1238MB	llvm module passes [30]
time: 0.015; rss: 1240MB	codegen passes [9]
time: 0.012; rss: 1246MB	llvm module passes [7]
time: 0.061; rss: 1246MB	codegen passes [5]
time: 0.000; rss: 1246MB	llvm function passes [32]
time: 0.005; rss: 1252MB	llvm module passes [32]
time: 0.004; rss: 1252MB	codegen passes [32]
time: 0.000; rss: 1252MB	llvm function passes [32]
time: 0.000; rss: 1252MB	llvm module passes [32]
time: 0.068; rss: 1257MB	llvm function passes [8]
time: 0.078; rss: 1257MB	llvm function passes [31]
time: 0.083; rss: 1257MB	llvm function passes [29]
time: 0.008; rss: 1257MB	llvm module passes [8]
time: 0.016; rss: 1263MB	codegen passes [32]
time: 0.011; rss: 1263MB	llvm module passes [29]
time: 0.045; rss: 1263MB	llvm function passes [9]
time: 0.000; rss: 1263MB	llvm module passes [9]
time: 0.065; rss: 1263MB	llvm function passes [10]
time: 0.001; rss: 1263MB	llvm module passes [10]
time: 0.125; rss: 1267MB	llvm function passes [2]
time: 0.056; rss: 1275MB	llvm function passes [12]
time: 0.000; rss: 1275MB	llvm module passes [12]
time: 0.046; rss: 1275MB	llvm module passes [31]
time: 0.061; rss: 1274MB	llvm function passes [14]
time: 0.016; rss: 1284MB	llvm module passes [14]
time: 0.110; rss: 1284MB	llvm function passes [11]
time: 0.036; rss: 1292MB	codegen passes [12]
time: 0.063; rss: 1294MB	codegen passes [9]
time: 0.011; rss: 1294MB	llvm function passes [12]
time: 0.004; rss: 1296MB	llvm module passes [12]
time: 0.083; rss: 1344MB	llvm module passes [2]
time: 0.209; rss: 1344MB	llvm function passes [0]
time: 0.090; rss: 1344MB	codegen passes [10]
time: 0.048; rss: 1346MB	llvm module passes [11]
time: 0.088; rss: 1354MB	llvm function passes [21]
time: 0.032; rss: 1354MB	llvm function passes [6]
time: 0.025; rss: 1352MB	llvm module passes [21]
time: 0.021; rss: 1354MB	llvm module passes [6]
time: 0.150; rss: 1359MB	llvm function passes [16]
time: 0.169; rss: 1359MB	llvm function passes [15]
time: 0.153; rss: 1359MB	llvm function passes [17]
time: 0.012; rss: 1359MB	llvm module passes [16]
time: 0.000; rss: 1357MB	codegen passes [23]
time: 0.224; rss: 1358MB	llvm function passes [13]
time: 0.150; rss: 1364MB	llvm function passes [35]
time: 0.032; rss: 1366MB	llvm module passes [15]
time: 0.025; rss: 1370MB	llvm module passes [17]
time: 0.020; rss: 1370MB	llvm module passes [13]
time: 0.228; rss: 1374MB	llvm function passes [20]
time: 0.271; rss: 1378MB	llvm function passes [19]
time: 0.040; rss: 1378MB	llvm module passes [35]
time: 0.048; rss: 1382MB	llvm function passes [40]
time: 0.000; rss: 1382MB	llvm module passes [40]
time: 0.191; rss: 1388MB	llvm module passes [0]
time: 0.320; rss: 1394MB	llvm function passes [32]
time: 0.078; rss: 1396MB	llvm module passes [20]
time: 0.068; rss: 1401MB	llvm module passes [19]
time: 0.380; rss: 1409MB	llvm function passes [5]
time: 0.234; rss: 1409MB	llvm function passes [36]
time: 0.172; rss: 1410MB	llvm function passes [41]
time: 0.001; rss: 1410MB	llvm module passes [41]
time: 0.215; rss: 1410MB	llvm function passes [42]
time: 0.433; rss: 1409MB	llvm function passes [4]
time: 0.066; rss: 1408MB	llvm module passes [32]
time: 0.183; rss: 1408MB	llvm function passes [24]
time: 0.312; rss: 1410MB	llvm function passes [18]
time: 0.054; rss: 1410MB	llvm module passes [36]
time: 0.322; rss: 1410MB	llvm function passes [37]
time: 0.054; rss: 1409MB	llvm module passes [42]
time: 0.013; rss: 1409MB	llvm module passes [37]
time: 0.245; rss: 1409MB	llvm function passes [43]
time: 0.014; rss: 1408MB	llvm module passes [43]
time: 0.170; rss: 1414MB	codegen passes [40]
time: 0.076; rss: 1409MB	llvm module passes [18]
time: 0.551; rss: 1406MB	llvm function passes [34]
time: 0.172; rss: 1395MB	llvm module passes [5]
time: 0.426; rss: 1402MB	llvm function passes [10]
time: 0.013; rss: 1403MB	llvm module passes [10]
time: 0.646; rss: 1405MB	llvm function passes [3]
time: 0.497; rss: 1407MB	llvm function passes [9]
time: 0.530; rss: 1410MB	codegen passes [30]
time: 0.148; rss: 1418MB	codegen passes [42]
time: 0.119; rss: 1429MB	codegen passes [41]
time: 0.262; rss: 1427MB	llvm module passes [4]
time: 0.348; rss: 1440MB	llvm module passes [24]
time: 0.237; rss: 1435MB	llvm module passes [3]
time: 0.669; rss: 1444MB	codegen passes [12]
time: 0.705; rss: 1439MB	llvm function passes [44]
time: 0.759; rss: 1443MB	llvm function passes [45]
time: 0.071; rss: 1444MB	llvm module passes [45]
time: 0.454; rss: 1447MB	llvm module passes [9]
time: 0.266; rss: 1474MB	llvm module passes [44]
time: 0.958; rss: 1474MB	codegen passes [1]
time: 0.672; rss: 1474MB	llvm module passes [34]
time: 0.783; rss: 1478MB	codegen passes [43]
time: 1.444; rss: 1477MB	codegen passes [33]
time: 1.224; rss: 1473MB	codegen passes [21]
time: 1.516; rss: 1461MB	codegen passes [7]
time: 1.566; rss: 1456MB	codegen passes [8]
time: 1.457; rss: 1456MB	codegen passes [16]
time: 1.660; rss: 1451MB	codegen passes [29]
time: 1.617; rss: 1444MB	codegen passes [37]
time: 1.930; rss: 1450MB	codegen passes [11]
time: 1.764; rss: 1464MB	codegen passes [10]
time: 2.250; rss: 1458MB	codegen passes [13]
time: 2.387; rss: 1468MB	codegen passes [14]
time: 2.327; rss: 1475MB	codegen passes [35]
time: 2.339; rss: 1475MB	codegen passes [6]
time: 2.613; rss: 1511MB	codegen passes [17]
time: 2.829; rss: 1598MB	codegen passes [24]
time: 2.904; rss: 1569MB	codegen passes [15]
time: 3.155; rss: 1583MB	codegen passes [31]
time: 3.300; rss: 1565MB	codegen passes [5]
time: 3.783; rss: 1747MB	codegen passes [19]
time: 3.702; rss: 1722MB	codegen passes [4]
time: 4.038; rss: 1714MB	codegen passes [36]
time: 4.119; rss: 1668MB	codegen passes [2]
time: 4.144; rss: 1658MB	codegen passes [32]
time: 3.978; rss: 1595MB	codegen passes [45]
time: 4.118; rss: 1559MB	codegen passes [20]
time: 4.557; rss: 1554MB	codegen passes [18]
time: 4.382; rss: 1544MB	codegen passes [44]
time: 4.555; rss: 1504MB	codegen passes [3]
time: 4.988; rss: 1446MB	codegen passes [0]
time: 5.454; rss: 1417MB	codegen passes [9]
time: 5.599; rss: 1338MB	codegen passes [34]
time: 8.076; rss: 1337MB	LLVM passes
time: 0.000; rss: 1337MB	serialize work products
time: 1.046; rss: 300MB	linking
done
