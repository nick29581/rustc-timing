commit 833b03ad52f1d5381d65ad866ab79cb9a68b0e7f
Merge: cfa668f 516d105
Author: bors <bors@rust-lang.org>
Date:   Thu Dec 15 09:26:25 2016 +0000

    Auto merge of #38185 - jsgf:test-list, r=alexcrichton
    
    libtest: add --list option to list tests and benchmarks
    
    This option lists all the tests and benchmarks a binary provides without running any of them.
    By default the listing is sent to stdout (intended for human consumption), but if `--logfile` is also specified, it is also written there in an easily parsable form.
    
    If filters are specified, they're applied before the output is emitted. The human output will also include a summary unless `-q` is specified.
rustc: ./syntex-0.42.2@010-incr
find . -name '*.rs' | xargs touch
RUSTFLAGS="-Z incremental=incr" \
    cargo rustc -p syntex_syntax  -- \
    -Ztime-passes -Zinput-stats -Z incremental-info
time: 0.092; rss: 75MB	parsing
Lines of code:             33687
Pre-expansion node count:  223115
time: 0.000; rss: 75MB	recursion limit
time: 0.000; rss: 75MB	crate injection
time: 0.000; rss: 75MB	plugin loading
time: 0.000; rss: 75MB	plugin registration
time: 0.240; rss: 151MB	expansion
time: 0.000; rss: 151MB	maybe building test harness
time: 0.006; rss: 151MB	maybe creating a macro crate
Post-expansion node count: 638863
time: 0.000; rss: 151MB	checking for inline asm in case the target doesn't support it
time: 0.012; rss: 151MB	complete gated feature checking
time: 0.023; rss: 151MB	early lint checks
time: 0.007; rss: 151MB	AST validation
time: 0.076; rss: 166MB	name resolution
time: 0.059; rss: 199MB	lowering ast -> hir
time: 0.010; rss: 192MB	indexing hir
time: 0.006; rss: 192MB	attribute checking
time: 0.002; rss: 154MB	language item collection
time: 0.011; rss: 156MB	lifetime resolution
time: 0.000; rss: 156MB	looking for entry point
time: 0.000; rss: 156MB	looking for plugin registrar
time: 0.047; rss: 176MB	region resolution
time: 0.008; rss: 176MB	loop checking
time: 0.002; rss: 176MB	static item recursion checking
time: 0.380; rss: 178MB	compute_incremental_hashes_map
time: 0.000; rss: 178MB	load_dep_graph
time: 0.009; rss: 178MB	stability index
time: 0.021; rss: 181MB	stability checking
time: 0.056; rss: 190MB	type collecting
time: 0.004; rss: 190MB	variance inference
time: 0.006; rss: 193MB	impl wf inference
time: 0.025; rss: 197MB	coherence checking
time: 0.089; rss: 200MB	wf checking
time: 0.197; rss: 208MB	item-types checking
time: 3.831; rss: 265MB	item-bodies checking
time: 0.000; rss: 265MB	drop-impl checking
time: 0.219; rss: 276MB	const checking
time: 0.059; rss: 277MB	privacy checking
time: 0.022; rss: 283MB	intrinsic checking
time: 0.016; rss: 283MB	effect checking
time: 0.049; rss: 283MB	match checking
time: 0.046; rss: 290MB	liveness checking
time: 0.176; rss: 292MB	rvalue checking
time: 0.367; rss: 481MB	MIR dump
  time: 0.056; rss: 483MB	SimplifyCfg
  time: 0.076; rss: 483MB	QualifyAndPromoteConstants
  time: 0.120; rss: 500MB	TypeckMir
  time: 0.004; rss: 500MB	SimplifyBranches
  time: 0.031; rss: 500MB	SimplifyCfg
time: 0.287; rss: 500MB	MIR cleanup and validation
time: 0.477; rss: 500MB	borrow checking
time: 0.024; rss: 500MB	reachability checking
time: 0.038; rss: 500MB	death checking
time: 0.000; rss: 500MB	unused lib feature checking
time: 0.178; rss: 500MB	lint checking
time: 0.000; rss: 500MB	resolving dependency formats
  time: 0.003; rss: 500MB	NoLandingPads
  time: 0.027; rss: 500MB	SimplifyCfg
  time: 0.065; rss: 509MB	EraseRegions
  time: 0.011; rss: 509MB	AddCallGuards
  time: 0.271; rss: 531MB	ElaborateDrops
  time: 0.004; rss: 531MB	NoLandingPads
  time: 0.052; rss: 531MB	SimplifyCfg
  time: 0.029; rss: 530MB	InstCombine
  time: 0.012; rss: 530MB	Deaggregator
  time: 0.004; rss: 530MB	CopyPropagation
  time: 0.035; rss: 530MB	SimplifyLocals
  time: 0.010; rss: 530MB	AddCallGuards
  time: 0.003; rss: 530MB	PreTrans
time: 0.526; rss: 530MB	MIR optimisations
  time: 0.066; rss: 538MB	write metadata
  time: 0.401; rss: 552MB	translation item collection
  time: 0.072; rss: 554MB	codegen unit partitioning
  time: 0.053; rss: 1452MB	internalize symbols
time: 13.449; rss: 1452MB	translation
time: 0.000; rss: 1452MB	assert dep graph
time: 2.109; rss: 1480MB	serialize dep graph
incremental: re-using 0 out of 50 modules
time: 0.000; rss: 1190MB	llvm function passes [2]
time: 0.000; rss: 1192MB	llvm module passes [2]
time: 0.001; rss: 1199MB	llvm function passes [0]
time: 0.000; rss: 1203MB	llvm module passes [0]
time: 0.002; rss: 1211MB	llvm function passes [1]
time: 0.000; rss: 1211MB	llvm module passes [1]
time: 0.002; rss: 1211MB	llvm function passes [4]
time: 0.000; rss: 1211MB	llvm module passes [4]
time: 0.003; rss: 1211MB	llvm function passes [5]
time: 0.004; rss: 1211MB	codegen passes [2]
time: 0.001; rss: 1211MB	llvm module passes [5]
time: 0.001; rss: 1211MB	llvm function passes [2]
time: 0.000; rss: 1211MB	llvm module passes [2]
time: 0.006; rss: 1214MB	codegen passes [0]
time: 0.008; rss: 1218MB	codegen passes [1]
time: 0.017; rss: 1225MB	llvm function passes [0]
time: 0.025; rss: 1225MB	llvm function passes [3]
time: 0.000; rss: 1229MB	llvm function passes [15]
time: 0.000; rss: 1229MB	llvm module passes [15]
time: 0.028; rss: 1229MB	llvm function passes [6]
time: 0.003; rss: 1231MB	codegen passes [15]
time: 0.008; rss: 1231MB	llvm module passes [0]
time: 0.029; rss: 1235MB	codegen passes [2]
time: 0.010; rss: 1237MB	llvm module passes [6]
time: 0.035; rss: 1237MB	codegen passes [4]
time: 0.000; rss: 1237MB	llvm function passes [4]
time: 0.000; rss: 1237MB	llvm module passes [4]
time: 0.004; rss: 1239MB	codegen passes [4]
time: 0.037; rss: 1243MB	llvm function passes [13]
time: 0.027; rss: 1246MB	llvm module passes [3]
time: 0.008; rss: 1246MB	llvm module passes [13]
time: 0.000; rss: 1250MB	llvm function passes [36]
time: 0.000; rss: 1250MB	llvm module passes [36]
time: 0.001; rss: 1250MB	codegen passes [36]
time: 0.059; rss: 1253MB	llvm function passes [11]
time: 0.055; rss: 1255MB	llvm function passes [22]
time: 0.051; rss: 1257MB	llvm function passes [17]
time: 0.001; rss: 1257MB	llvm module passes [17]
time: 0.018; rss: 1257MB	llvm module passes [11]
time: 0.011; rss: 1257MB	llvm module passes [22]
time: 0.088; rss: 1257MB	llvm function passes [12]
time: 0.111; rss: 1261MB	codegen passes [5]
time: 0.084; rss: 1261MB	llvm function passes [2]
time: 0.000; rss: 1261MB	llvm module passes [2]
time: 0.014; rss: 1272MB	codegen passes [2]
time: 0.112; rss: 1272MB	llvm function passes [15]
time: 0.109; rss: 1274MB	llvm function passes [19]
time: 0.000; rss: 1274MB	llvm module passes [19]
time: 0.012; rss: 1286MB	llvm module passes [15]
time: 0.026; rss: 1286MB	llvm function passes [2]
time: 0.066; rss: 1286MB	llvm module passes [12]
time: 0.012; rss: 1286MB	llvm module passes [2]
time: 0.186; rss: 1285MB	llvm function passes [7]
time: 0.160; rss: 1285MB	llvm function passes [14]
time: 0.228; rss: 1284MB	llvm function passes [8]
time: 0.030; rss: 1284MB	llvm module passes [14]
time: 0.186; rss: 1284MB	llvm function passes [16]
time: 0.023; rss: 1284MB	llvm module passes [16]
time: 0.107; rss: 1284MB	llvm function passes [23]
time: 0.008; rss: 1284MB	llvm module passes [23]
time: 0.134; rss: 1284MB	codegen passes [19]
time: 0.249; rss: 1282MB	llvm function passes [4]
time: 0.108; rss: 1286MB	llvm module passes [7]
time: 0.003; rss: 1286MB	llvm function passes [38]
time: 0.001; rss: 1287MB	llvm module passes [38]
time: 0.000; rss: 1287MB	llvm function passes [32]
time: 0.000; rss: 1287MB	llvm module passes [32]
time: 0.050; rss: 1287MB	llvm function passes [31]
time: 0.014; rss: 1285MB	codegen passes [32]
time: 0.000; rss: 1285MB	codegen passes [32]
time: 0.019; rss: 1284MB	llvm function passes [49]
time: 0.015; rss: 1282MB	llvm module passes [31]
time: 0.052; rss: 1282MB	llvm function passes [10]
time: 0.186; rss: 1282MB	llvm function passes [24]
time: 0.226; rss: 1282MB	llvm function passes [20]
time: 0.247; rss: 1282MB	llvm function passes [5]
time: 0.016; rss: 1282MB	llvm module passes [10]
time: 0.019; rss: 1283MB	llvm module passes [24]
time: 0.176; rss: 1286MB	llvm function passes [29]
time: 0.008; rss: 1288MB	llvm module passes [29]
time: 0.373; rss: 1288MB	llvm function passes [21]
time: 0.426; rss: 1293MB	llvm function passes [1]
time: 0.102; rss: 1293MB	llvm module passes [49]
time: 0.342; rss: 1292MB	llvm function passes [18]
time: 0.182; rss: 1299MB	llvm function passes [9]
time: 0.015; rss: 1297MB	llvm module passes [9]
time: 0.420; rss: 1299MB	codegen passes [17]
time: 0.210; rss: 1299MB	llvm function passes [37]
time: 0.222; rss: 1300MB	llvm module passes [4]
time: 0.203; rss: 1299MB	llvm function passes [25]
time: 0.486; rss: 1302MB	llvm function passes [36]
time: 0.184; rss: 1302MB	llvm module passes [5]
time: 0.242; rss: 1303MB	llvm function passes [39]
time: 0.260; rss: 1304MB	llvm function passes [34]
time: 0.265; rss: 1305MB	llvm function passes [27]
time: 0.071; rss: 1307MB	llvm module passes [25]
time: 0.585; rss: 1306MB	llvm function passes [35]
time: 0.111; rss: 1307MB	llvm module passes [37]
time: 0.101; rss: 1315MB	llvm module passes [36]
time: 0.294; rss: 1320MB	codegen passes [31]
time: 0.321; rss: 1321MB	codegen passes [38]
time: 0.144; rss: 1322MB	llvm module passes [27]
time: 0.490; rss: 1322MB	llvm module passes [8]
time: 0.442; rss: 1323MB	llvm function passes [19]
time: 0.303; rss: 1323MB	llvm module passes [1]
time: 0.203; rss: 1325MB	llvm module passes [34]
time: 0.459; rss: 1326MB	llvm function passes [26]
time: 0.330; rss: 1329MB	llvm module passes [18]
time: 0.251; rss: 1329MB	llvm module passes [39]
time: 0.100; rss: 1333MB	llvm module passes [19]
time: 0.467; rss: 1339MB	llvm module passes [21]
time: 0.535; rss: 1339MB	llvm module passes [20]
time: 0.581; rss: 1337MB	llvm function passes [28]
time: 0.742; rss: 1344MB	codegen passes [6]
time: 0.455; rss: 1372MB	llvm module passes [28]
time: 0.588; rss: 1373MB	llvm module passes [26]
time: 0.892; rss: 1382MB	codegen passes [29]
time: 0.833; rss: 1386MB	llvm module passes [35]
time: 0.840; rss: 1386MB	codegen passes [49]
time: 1.281; rss: 1405MB	codegen passes [3]
time: 1.414; rss: 1402MB	codegen passes [0]
time: 1.661; rss: 1405MB	codegen passes [13]
time: 1.382; rss: 1408MB	codegen passes [23]
time: 1.803; rss: 1409MB	codegen passes [2]
time: 1.550; rss: 1415MB	codegen passes [9]
time: 2.055; rss: 1425MB	codegen passes [22]
time: 2.162; rss: 1441MB	codegen passes [11]
time: 2.047; rss: 1476MB	codegen passes [25]
time: 2.300; rss: 1468MB	codegen passes [4]
time: 2.276; rss: 1451MB	codegen passes [10]
time: 2.099; rss: 1440MB	codegen passes [37]
time: 2.520; rss: 1430MB	codegen passes [15]
time: 2.247; rss: 1443MB	codegen passes [27]
time: 2.538; rss: 1446MB	codegen passes [16]
time: 3.083; rss: 1491MB	codegen passes [24]
time: 3.232; rss: 1542MB	codegen passes [14]
time: 3.789; rss: 1597MB	codegen passes [12]
time: 3.520; rss: 1602MB	codegen passes [5]
time: 3.829; rss: 1639MB	codegen passes [36]
time: 3.687; rss: 1613MB	codegen passes [21]
time: 3.898; rss: 1575MB	codegen passes [19]
time: 4.289; rss: 1611MB	codegen passes [7]
time: 4.037; rss: 1581MB	codegen passes [39]
time: 4.351; rss: 1581MB	codegen passes [20]
time: 4.349; rss: 1542MB	codegen passes [18]
time: 4.662; rss: 1551MB	codegen passes [34]
time: 4.429; rss: 1521MB	codegen passes [28]
time: 4.979; rss: 1458MB	codegen passes [1]
time: 5.368; rss: 1466MB	codegen passes [8]
time: 5.031; rss: 1390MB	codegen passes [26]
time: 5.055; rss: 1300MB	codegen passes [35]
time: 8.288; rss: 1299MB	LLVM passes
time: 0.000; rss: 1299MB	serialize work products
time: 1.053; rss: 274MB	linking
done
