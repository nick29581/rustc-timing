commit d250169cb5a96481a3e7c8f9fe05de49f60e5ae5
Merge: c6d8ab0 96a5fc7
Author: bors <bors@rust-lang.org>
Date:   Fri Dec 16 07:26:41 2016 +0000

    Auto merge of #38359 - alexcrichton:sccache, r=brson
    
    rustbuild: Add sccache support
    
    This commit adds support for sccache, a ccache-like compiler which works on MSVC
    and stores results into an S3 bucket. This also switches over all Travis and
    AppVeyor automation to using sccache to ensure a shared and unified cache over
    time which can be shared across builders.
    
    The support for sccache manifests as a new `--enable-sccache` option which
    instructs us to configure LLVM differently to use a 'sccache' binary instead of
    a 'ccache' binary. All docker images for Travis builds are updated to download
    Mozilla's tooltool builds of sccache onto various containers and systems.
    Additionally a new `rust-lang-ci-sccache` bucket is configured to hold all of
    our ccache goodies.
    
    ---
    
    Note that this does not currently change Windows [due to previously written up issues](https://github.com/rust-lang/rust/issues/38119#issuecomment-266631585). Despite that, however, I was curious to get timings for the builds on Travis to see what ranges we're working with. As a result, this is a WIP PR I'm using to gauge build times and such.
rustc: ./syntex-0.42.2@010-incr
find . -name '*.rs' | xargs touch
RUSTFLAGS="-Z incremental=incr" \
    cargo rustc -p syntex_syntax  -- \
    -Ztime-passes -Zinput-stats -Z incremental-info
time: 0.092; rss: 75MB	parsing
Lines of code:             33687
Pre-expansion node count:  223115
time: 0.000; rss: 75MB	recursion limit
time: 0.000; rss: 75MB	crate injection
time: 0.000; rss: 75MB	plugin loading
time: 0.000; rss: 75MB	plugin registration
time: 0.251; rss: 152MB	expansion
time: 0.000; rss: 152MB	maybe building test harness
time: 0.007; rss: 152MB	maybe creating a macro crate
Post-expansion node count: 638863
time: 0.000; rss: 152MB	checking for inline asm in case the target doesn't support it
time: 0.014; rss: 152MB	complete gated feature checking
time: 0.025; rss: 152MB	early lint checks
time: 0.009; rss: 152MB	AST validation
time: 0.082; rss: 166MB	name resolution
time: 0.067; rss: 200MB	lowering ast -> hir
time: 0.010; rss: 192MB	indexing hir
time: 0.006; rss: 192MB	attribute checking
time: 0.002; rss: 154MB	language item collection
time: 0.011; rss: 156MB	lifetime resolution
time: 0.000; rss: 156MB	looking for entry point
time: 0.000; rss: 156MB	looking for plugin registrar
time: 0.047; rss: 177MB	region resolution
time: 0.008; rss: 177MB	loop checking
time: 0.002; rss: 177MB	static item recursion checking
time: 0.381; rss: 178MB	compute_incremental_hashes_map
time: 0.000; rss: 178MB	load_dep_graph
time: 0.009; rss: 178MB	stability index
time: 0.021; rss: 182MB	stability checking
time: 0.055; rss: 190MB	type collecting
time: 0.004; rss: 190MB	variance inference
time: 0.006; rss: 194MB	impl wf inference
time: 0.026; rss: 197MB	coherence checking
time: 0.088; rss: 200MB	wf checking
time: 0.197; rss: 208MB	item-types checking
time: 3.668; rss: 266MB	item-bodies checking
time: 0.000; rss: 266MB	drop-impl checking
time: 0.214; rss: 277MB	const checking
time: 0.058; rss: 277MB	privacy checking
time: 0.019; rss: 284MB	intrinsic checking
time: 0.015; rss: 284MB	effect checking
time: 0.048; rss: 284MB	match checking
time: 0.047; rss: 291MB	liveness checking
time: 0.171; rss: 293MB	rvalue checking
time: 0.365; rss: 482MB	MIR dump
  time: 0.057; rss: 484MB	SimplifyCfg
  time: 0.075; rss: 484MB	QualifyAndPromoteConstants
  time: 0.121; rss: 500MB	TypeckMir
  time: 0.004; rss: 500MB	SimplifyBranches
  time: 0.033; rss: 500MB	SimplifyCfg
time: 0.290; rss: 500MB	MIR cleanup and validation
time: 0.472; rss: 500MB	borrow checking
time: 0.024; rss: 500MB	reachability checking
time: 0.038; rss: 500MB	death checking
time: 0.000; rss: 500MB	unused lib feature checking
time: 0.183; rss: 500MB	lint checking
time: 0.000; rss: 500MB	resolving dependency formats
  time: 0.004; rss: 500MB	NoLandingPads
  time: 0.027; rss: 500MB	SimplifyCfg
  time: 0.064; rss: 509MB	EraseRegions
  time: 0.011; rss: 509MB	AddCallGuards
  time: 0.271; rss: 533MB	ElaborateDrops
  time: 0.004; rss: 533MB	NoLandingPads
  time: 0.053; rss: 533MB	SimplifyCfg
  time: 0.029; rss: 532MB	InstCombine
  time: 0.013; rss: 532MB	Deaggregator
  time: 0.004; rss: 532MB	CopyPropagation
  time: 0.035; rss: 532MB	SimplifyLocals
  time: 0.010; rss: 532MB	AddCallGuards
  time: 0.003; rss: 532MB	PreTrans
time: 0.527; rss: 532MB	MIR optimisations
  time: 0.065; rss: 540MB	write metadata
  time: 0.404; rss: 554MB	translation item collection
  time: 0.073; rss: 556MB	codegen unit partitioning
  time: 0.049; rss: 1457MB	internalize symbols
time: 11.904; rss: 1457MB	translation
time: 0.000; rss: 1457MB	assert dep graph
time: 1.462; rss: 1485MB	serialize dep graph
incremental: re-using 0 out of 50 modules
time: 0.000; rss: 1198MB	llvm function passes [2]
time: 0.000; rss: 1198MB	llvm module passes [2]
time: 0.001; rss: 1204MB	llvm function passes [0]
time: 0.000; rss: 1204MB	llvm module passes [0]
time: 0.001; rss: 1206MB	llvm function passes [1]
time: 0.000; rss: 1206MB	llvm module passes [1]
time: 0.002; rss: 1214MB	llvm function passes [3]
time: 0.000; rss: 1216MB	llvm module passes [3]
time: 0.001; rss: 1216MB	llvm function passes [11]
time: 0.003; rss: 1216MB	llvm function passes [4]
time: 0.008; rss: 1227MB	llvm function passes [6]
time: 0.010; rss: 1233MB	llvm module passes [11]
time: 0.016; rss: 1233MB	llvm function passes [5]
time: 0.013; rss: 1233MB	llvm function passes [7]
time: 0.018; rss: 1233MB	llvm module passes [4]
time: 0.006; rss: 1233MB	llvm module passes [5]
time: 0.019; rss: 1233MB	llvm function passes [16]
time: 0.026; rss: 1235MB	llvm function passes [8]
time: 0.021; rss: 1235MB	llvm module passes [7]
time: 0.011; rss: 1235MB	llvm module passes [16]
time: 0.000; rss: 1237MB	llvm function passes [18]
time: 0.000; rss: 1237MB	llvm module passes [18]
time: 0.041; rss: 1240MB	codegen passes [2]
time: 0.035; rss: 1240MB	llvm module passes [6]
time: 0.036; rss: 1240MB	llvm function passes [12]
time: 0.005; rss: 1244MB	codegen passes [18]
time: 0.001; rss: 1244MB	llvm function passes [18]
time: 0.000; rss: 1244MB	llvm module passes [18]
time: 0.014; rss: 1246MB	llvm module passes [8]
time: 0.015; rss: 1250MB	llvm module passes [12]
time: 0.058; rss: 1252MB	llvm function passes [9]
time: 0.042; rss: 1261MB	llvm function passes [17]
time: 0.001; rss: 1261MB	llvm module passes [17]
time: 0.001; rss: 1267MB	llvm function passes [22]
time: 0.000; rss: 1267MB	llvm module passes [22]
time: 0.000; rss: 1269MB	llvm function passes [20]
time: 0.000; rss: 1269MB	llvm module passes [20]
time: 0.068; rss: 1273MB	llvm function passes [2]
time: 0.016; rss: 1279MB	llvm module passes [2]
time: 0.066; rss: 1282MB	llvm module passes [9]
time: 0.134; rss: 1287MB	codegen passes [1]
time: 0.145; rss: 1287MB	codegen passes [0]
time: 0.000; rss: 1287MB	llvm function passes [0]
time: 0.000; rss: 1287MB	llvm module passes [0]
time: 0.001; rss: 1287MB	codegen passes [0]
time: 0.101; rss: 1289MB	codegen passes [18]
time: 0.061; rss: 1293MB	llvm function passes [21]
time: 0.176; rss: 1295MB	llvm function passes [13]
time: 0.091; rss: 1306MB	codegen passes [22]
time: 0.032; rss: 1308MB	llvm module passes [21]
time: 0.111; rss: 1308MB	codegen passes [20]
time: 0.210; rss: 1308MB	llvm function passes [10]
time: 0.137; rss: 1321MB	codegen passes [17]
time: 0.094; rss: 1321MB	llvm function passes [1]
time: 0.227; rss: 1321MB	codegen passes [3]
time: 0.229; rss: 1321MB	llvm function passes [15]
time: 0.228; rss: 1327MB	codegen passes [11]
time: 0.097; rss: 1327MB	llvm function passes [0]
time: 0.015; rss: 1327MB	llvm module passes [1]
time: 0.036; rss: 1327MB	llvm function passes [26]
time: 0.011; rss: 1327MB	llvm module passes [26]
time: 0.222; rss: 1333MB	llvm function passes [19]
time: 0.016; rss: 1333MB	llvm function passes [23]
time: 0.114; rss: 1335MB	llvm module passes [13]
time: 0.038; rss: 1333MB	llvm module passes [0]
time: 0.016; rss: 1336MB	llvm module passes [23]
time: 0.268; rss: 1336MB	codegen passes [4]
time: 0.042; rss: 1345MB	llvm function passes [25]
time: 0.059; rss: 1347MB	llvm module passes [19]
time: 0.018; rss: 1347MB	llvm module passes [25]
time: 0.123; rss: 1360MB	llvm function passes [3]
time: 0.180; rss: 1365MB	llvm function passes [24]
time: 0.161; rss: 1365MB	llvm function passes [20]
time: 0.193; rss: 1375MB	llvm module passes [10]
time: 0.173; rss: 1379MB	llvm module passes [15]
time: 0.052; rss: 1383MB	llvm function passes [28]
time: 0.002; rss: 1382MB	llvm module passes [28]
time: 0.053; rss: 1382MB	llvm module passes [20]
time: 0.066; rss: 1386MB	llvm module passes [24]
time: 0.288; rss: 1388MB	llvm function passes [18]
time: 0.095; rss: 1387MB	llvm module passes [3]
time: 0.152; rss: 1386MB	llvm function passes [4]
time: 0.029; rss: 1385MB	llvm module passes [4]
time: 0.049; rss: 1391MB	llvm function passes [32]
time: 0.188; rss: 1396MB	llvm function passes [27]
time: 0.003; rss: 1396MB	llvm function passes [35]
time: 0.001; rss: 1398MB	llvm module passes [35]
time: 0.109; rss: 1398MB	codegen passes [28]
time: 0.297; rss: 1398MB	llvm function passes [11]
time: 0.360; rss: 1400MB	llvm function passes [22]
time: 0.012; rss: 1400MB	llvm function passes [28]
time: 0.000; rss: 1400MB	llvm function passes [36]
time: 0.000; rss: 1400MB	llvm module passes [36]
time: 0.003; rss: 1400MB	codegen passes [36]
time: 0.000; rss: 1400MB	codegen passes [36]
time: 0.173; rss: 1401MB	llvm function passes [29]
time: 0.018; rss: 1403MB	llvm module passes [28]
time: 0.076; rss: 1400MB	llvm module passes [27]
time: 0.064; rss: 1401MB	llvm module passes [29]
time: 0.150; rss: 1403MB	llvm function passes [33]
time: 0.079; rss: 1406MB	codegen passes [35]
time: 0.277; rss: 1403MB	codegen passes [23]
time: 0.132; rss: 1405MB	llvm module passes [11]
time: 0.240; rss: 1405MB	llvm module passes [18]
time: 0.186; rss: 1405MB	llvm module passes [32]
time: 0.690; rss: 1383MB	llvm function passes [14]
time: 0.496; rss: 1385MB	llvm function passes [17]
time: 0.296; rss: 1385MB	llvm function passes [30]
time: 0.115; rss: 1395MB	llvm module passes [33]
time: 0.647; rss: 1394MB	codegen passes [6]
time: 0.043; rss: 1395MB	llvm module passes [17]
time: 0.287; rss: 1397MB	llvm module passes [22]
time: 0.092; rss: 1398MB	llvm module passes [30]
time: 0.348; rss: 1417MB	llvm function passes [34]
time: 0.407; rss: 1423MB	llvm function passes [31]
time: 0.188; rss: 1427MB	llvm module passes [34]
time: 0.476; rss: 1459MB	llvm module passes [31]
time: 1.284; rss: 1457MB	codegen passes [7]
time: 1.104; rss: 1455MB	codegen passes [5]
time: 0.794; rss: 1460MB	llvm module passes [14]
time: 1.181; rss: 1482MB	codegen passes [8]
time: 1.092; rss: 1498MB	codegen passes [28]
time: 1.183; rss: 1497MB	codegen passes [3]
time: 1.563; rss: 1465MB	codegen passes [12]
time: 1.700; rss: 1465MB	codegen passes [16]
time: 1.642; rss: 1466MB	codegen passes [2]
time: 1.159; rss: 1436MB	codegen passes [33]
time: 1.688; rss: 1436MB	codegen passes [26]
time: 1.829; rss: 1432MB	codegen passes [25]
time: 1.884; rss: 1441MB	codegen passes [0]
time: 2.149; rss: 1435MB	codegen passes [1]
time: 1.559; rss: 1435MB	codegen passes [30]
time: 2.535; rss: 1499MB	codegen passes [4]
time: 2.272; rss: 1518MB	codegen passes [32]
time: 2.382; rss: 1510MB	codegen passes [17]
time: 2.745; rss: 1539MB	codegen passes [21]
time: 3.105; rss: 1579MB	codegen passes [20]
time: 3.322; rss: 1553MB	codegen passes [9]
time: 3.792; rss: 1645MB	codegen passes [19]
time: 3.055; rss: 1662MB	codegen passes [18]
time: 3.830; rss: 1657MB	codegen passes [29]
time: 4.017; rss: 1608MB	codegen passes [13]
time: 3.735; rss: 1586MB	codegen passes [24]
time: 4.044; rss: 1590MB	codegen passes [22]
time: 3.951; rss: 1556MB	codegen passes [34]
time: 3.909; rss: 1531MB	codegen passes [31]
time: 4.027; rss: 1501MB	codegen passes [27]
time: 4.606; rss: 1478MB	codegen passes [15]
time: 5.069; rss: 1469MB	codegen passes [10]
time: 5.645; rss: 1417MB	codegen passes [11]
time: 4.946; rss: 1324MB	codegen passes [14]
time: 7.630; rss: 1323MB	LLVM passes
time: 0.000; rss: 1323MB	serialize work products
time: 1.062; rss: 291MB	linking
done
