commit 94ae2a2e6791e0c4ab6fba836b2b09a07f2d3c8a
Merge: 3f9823d 83453bc
Author: bors <bors@rust-lang.org>
Date:   Mon Dec 19 20:07:49 2016 +0000

    Auto merge of #38072 - nikomatsakis:bootstrap-incremental, r=acrichto
    
    add preliminary support for incremental compilation to rustbuild.py
    
    This implements the integration described in #37929. It requires the use of a local nightly as your bootstrap compiler. The setup is described in `src/bootstrap/README.md`.
    
    This does NOT implement the "copy stage0 libs to stage1" optimization described in #37929, just because that seems orthogonal to me.
    
    In local testing, I do not yet see any incremental re-use when building rustc. I'm not sure why that is, more investigation needed.
    
    (For these reasons, this is not marked as fixing the relevant issue.)
    
    r? @alexcrichton -- I included one random cleanup (`Step::noop()`) that turned out to not be especially relevant. Feel free to tell me you liked it better the old way.
rustc: ./syntex-0.42.2@010-incr
find . -name '*.rs' | xargs touch
RUSTFLAGS="-Z incremental=incr" \
    cargo rustc -p syntex_syntax  -- \
    -Ztime-passes -Zinput-stats -Z incremental-info
time: 0.092; rss: 75MB	parsing
Lines of code:             33687
Pre-expansion node count:  223115
time: 0.000; rss: 75MB	recursion limit
time: 0.000; rss: 75MB	crate injection
time: 0.000; rss: 75MB	plugin loading
time: 0.000; rss: 75MB	plugin registration
time: 0.240; rss: 151MB	expansion
time: 0.000; rss: 151MB	maybe building test harness
time: 0.006; rss: 151MB	maybe creating a macro crate
Post-expansion node count: 638863
time: 0.000; rss: 151MB	checking for inline asm in case the target doesn't support it
time: 0.012; rss: 151MB	complete gated feature checking
time: 0.023; rss: 151MB	early lint checks
time: 0.007; rss: 151MB	AST validation
time: 0.076; rss: 166MB	name resolution
time: 0.059; rss: 200MB	lowering ast -> hir
time: 0.010; rss: 192MB	indexing hir
time: 0.006; rss: 192MB	attribute checking
time: 0.002; rss: 154MB	language item collection
time: 0.011; rss: 156MB	lifetime resolution
time: 0.000; rss: 156MB	looking for entry point
time: 0.000; rss: 156MB	looking for plugin registrar
time: 0.047; rss: 177MB	region resolution
time: 0.008; rss: 177MB	loop checking
time: 0.002; rss: 177MB	static item recursion checking
time: 0.381; rss: 178MB	compute_incremental_hashes_map
time: 0.000; rss: 178MB	load_dep_graph
time: 0.009; rss: 178MB	stability index
time: 0.021; rss: 181MB	stability checking
time: 0.057; rss: 190MB	type collecting
time: 0.004; rss: 190MB	variance inference
time: 0.006; rss: 193MB	impl wf inference
time: 0.027; rss: 197MB	coherence checking
time: 0.091; rss: 200MB	wf checking
time: 0.202; rss: 208MB	item-types checking
time: 3.570; rss: 266MB	item-bodies checking
time: 0.000; rss: 266MB	drop-impl checking
time: 0.215; rss: 277MB	const checking
time: 0.059; rss: 277MB	privacy checking
time: 0.021; rss: 284MB	intrinsic checking
time: 0.016; rss: 284MB	effect checking
time: 0.052; rss: 284MB	match checking
time: 0.051; rss: 290MB	liveness checking
time: 0.180; rss: 292MB	rvalue checking
time: 0.366; rss: 482MB	MIR dump
  time: 0.058; rss: 483MB	SimplifyCfg
  time: 0.075; rss: 483MB	QualifyAndPromoteConstants
  time: 0.120; rss: 500MB	TypeckMir
  time: 0.005; rss: 500MB	SimplifyBranches
  time: 0.032; rss: 500MB	SimplifyCfg
time: 0.290; rss: 500MB	MIR cleanup and validation
time: 0.471; rss: 500MB	borrow checking
time: 0.024; rss: 500MB	reachability checking
time: 0.039; rss: 500MB	death checking
time: 0.000; rss: 500MB	unused lib feature checking
time: 0.178; rss: 500MB	lint checking
time: 0.000; rss: 500MB	resolving dependency formats
  time: 0.004; rss: 500MB	NoLandingPads
  time: 0.027; rss: 500MB	SimplifyCfg
  time: 0.065; rss: 509MB	EraseRegions
  time: 0.011; rss: 509MB	AddCallGuards
  time: 0.271; rss: 529MB	ElaborateDrops
  time: 0.004; rss: 529MB	NoLandingPads
  time: 0.053; rss: 529MB	SimplifyCfg
  time: 0.029; rss: 528MB	InstCombine
  time: 0.013; rss: 528MB	Deaggregator
  time: 0.004; rss: 528MB	CopyPropagation
  time: 0.035; rss: 528MB	SimplifyLocals
  time: 0.010; rss: 528MB	AddCallGuards
  time: 0.003; rss: 528MB	PreTrans
time: 0.527; rss: 528MB	MIR optimisations
  time: 0.065; rss: 537MB	write metadata
  time: 0.398; rss: 549MB	translation item collection
  time: 0.073; rss: 554MB	codegen unit partitioning
  time: 0.053; rss: 1455MB	internalize symbols
time: 12.774; rss: 1455MB	translation
time: 0.000; rss: 1455MB	assert dep graph
time: 2.210; rss: 1483MB	serialize dep graph
incremental: re-using 0 out of 50 modules
time: 0.000; rss: 1194MB	llvm function passes [1]
time: 0.000; rss: 1194MB	llvm module passes [1]
time: 0.001; rss: 1201MB	llvm function passes [0]
time: 0.000; rss: 1201MB	llvm module passes [0]
time: 0.002; rss: 1205MB	llvm function passes [2]
time: 0.000; rss: 1205MB	llvm module passes [2]
time: 0.003; rss: 1209MB	llvm function passes [3]
time: 0.003; rss: 1209MB	codegen passes [1]
time: 0.000; rss: 1209MB	llvm module passes [3]
time: 0.004; rss: 1209MB	llvm function passes [5]
time: 0.006; rss: 1211MB	codegen passes [0]
time: 0.001; rss: 1211MB	llvm function passes [0]
time: 0.000; rss: 1211MB	llvm module passes [0]
time: 0.008; rss: 1217MB	codegen passes [2]
time: 0.012; rss: 1217MB	llvm function passes [7]
time: 0.016; rss: 1217MB	llvm function passes [4]
time: 0.013; rss: 1217MB	llvm module passes [5]
time: 0.007; rss: 1217MB	llvm module passes [7]
time: 0.008; rss: 1217MB	llvm module passes [4]
time: 0.021; rss: 1222MB	codegen passes [3]
time: 0.018; rss: 1222MB	llvm function passes [9]
time: 0.009; rss: 1225MB	llvm module passes [9]
time: 0.028; rss: 1225MB	codegen passes [0]
time: 0.023; rss: 1229MB	llvm function passes [8]
time: 0.011; rss: 1242MB	llvm module passes [8]
time: 0.019; rss: 1246MB	llvm function passes [0]
time: 0.008; rss: 1246MB	llvm module passes [0]
time: 0.000; rss: 1252MB	llvm function passes [13]
time: 0.000; rss: 1252MB	llvm module passes [13]
time: 0.001; rss: 1252MB	codegen passes [13]
time: 0.003; rss: 1252MB	llvm function passes [13]
time: 0.001; rss: 1252MB	llvm module passes [13]
time: 0.038; rss: 1252MB	llvm function passes [10]
time: 0.011; rss: 1254MB	llvm module passes [10]
time: 0.096; rss: 1254MB	llvm function passes [2]
time: 0.001; rss: 1267MB	llvm function passes [16]
time: 0.000; rss: 1267MB	llvm module passes [16]
time: 0.006; rss: 1281MB	codegen passes [16]
time: 0.000; rss: 1281MB	llvm function passes [16]
time: 0.000; rss: 1281MB	llvm module passes [16]
time: 0.042; rss: 1281MB	llvm function passes [12]
time: 0.004; rss: 1281MB	codegen passes [16]
time: 0.050; rss: 1287MB	codegen passes [13]
time: 0.000; rss: 1287MB	llvm function passes [13]
time: 0.000; rss: 1287MB	llvm module passes [13]
time: 0.016; rss: 1286MB	llvm function passes [15]
time: 0.000; rss: 1286MB	llvm module passes [15]
time: 0.014; rss: 1286MB	llvm module passes [12]
time: 0.118; rss: 1286MB	codegen passes [5]
time: 0.040; rss: 1286MB	llvm module passes [2]
time: 0.166; rss: 1288MB	llvm function passes [6]
time: 0.037; rss: 1292MB	codegen passes [15]
time: 0.055; rss: 1294MB	llvm function passes [17]
time: 0.062; rss: 1294MB	llvm function passes [16]
time: 0.197; rss: 1294MB	llvm function passes [1]
time: 0.030; rss: 1291MB	llvm module passes [17]
time: 0.033; rss: 1292MB	llvm module passes [16]
time: 0.001; rss: 1291MB	codegen passes [13]
time: 0.100; rss: 1288MB	llvm module passes [6]
time: 0.127; rss: 1287MB	llvm function passes [5]
time: 0.165; rss: 1290MB	llvm function passes [18]
time: 0.040; rss: 1292MB	llvm function passes [23]
time: 0.060; rss: 1293MB	llvm function passes [21]
time: 0.012; rss: 1294MB	llvm module passes [23]
time: 0.090; rss: 1297MB	llvm module passes [5]
time: 0.186; rss: 1297MB	llvm function passes [19]
time: 0.235; rss: 1299MB	llvm function passes [15]
time: 0.294; rss: 1299MB	llvm function passes [14]
time: 0.142; rss: 1299MB	llvm function passes [20]
time: 0.204; rss: 1299MB	llvm function passes [13]
time: 0.249; rss: 1299MB	llvm module passes [1]
time: 0.180; rss: 1300MB	llvm function passes [22]
time: 0.120; rss: 1301MB	llvm module passes [21]
time: 0.111; rss: 1299MB	llvm function passes [25]
time: 0.420; rss: 1302MB	llvm function passes [11]
time: 0.023; rss: 1303MB	llvm module passes [22]
time: 0.004; rss: 1304MB	llvm function passes [35]
time: 0.001; rss: 1304MB	llvm module passes [35]
time: 0.145; rss: 1304MB	llvm function passes [26]
time: 0.076; rss: 1311MB	llvm function passes [32]
time: 0.074; rss: 1311MB	llvm module passes [25]
time: 0.154; rss: 1312MB	llvm function passes [29]
time: 0.002; rss: 1312MB	llvm module passes [29]
time: 0.101; rss: 1315MB	llvm module passes [20]
time: 0.168; rss: 1317MB	llvm module passes [15]
time: 0.106; rss: 1316MB	llvm module passes [26]
time: 0.282; rss: 1316MB	llvm module passes [18]
time: 0.576; rss: 1316MB	llvm function passes [3]
time: 0.006; rss: 1316MB	llvm function passes [37]
time: 0.000; rss: 1316MB	llvm module passes [37]
time: 0.253; rss: 1318MB	llvm module passes [19]
time: 0.024; rss: 1320MB	codegen passes [37]
time: 0.052; rss: 1323MB	llvm function passes [36]
time: 0.054; rss: 1323MB	codegen passes [38]
time: 0.220; rss: 1323MB	llvm module passes [13]
time: 0.282; rss: 1322MB	llvm function passes [28]
time: 0.169; rss: 1326MB	llvm module passes [32]
time: 0.046; rss: 1327MB	llvm module passes [36]
time: 0.288; rss: 1333MB	llvm function passes [30]
time: 0.244; rss: 1333MB	llvm function passes [33]
time: 0.013; rss: 1334MB	llvm module passes [33]
time: 0.038; rss: 1337MB	llvm module passes [30]
time: 0.402; rss: 1345MB	llvm module passes [14]
time: 0.344; rss: 1345MB	llvm function passes [31]
time: 0.742; rss: 1347MB	codegen passes [7]
time: 0.317; rss: 1349MB	codegen passes [29]
time: 0.268; rss: 1354MB	llvm module passes [28]
time: 0.645; rss: 1355MB	llvm function passes [24]
time: 0.580; rss: 1363MB	llvm function passes [27]
time: 0.526; rss: 1366MB	llvm module passes [11]
time: 0.415; rss: 1370MB	llvm module passes [3]
time: 0.507; rss: 1369MB	llvm function passes [34]
time: 0.598; rss: 1369MB	codegen passes [35]
time: 0.370; rss: 1376MB	llvm module passes [27]
time: 0.782; rss: 1377MB	codegen passes [23]
time: 1.218; rss: 1376MB	codegen passes [0]
time: 1.193; rss: 1377MB	codegen passes [4]
time: 0.669; rss: 1383MB	llvm module passes [31]
time: 0.562; rss: 1395MB	llvm module passes [34]
time: 1.395; rss: 1399MB	codegen passes [9]
time: 0.746; rss: 1399MB	llvm module passes [24]
time: 0.918; rss: 1423MB	codegen passes [36]
time: 1.448; rss: 1435MB	codegen passes [22]
time: 1.172; rss: 1419MB	codegen passes [30]
time: 1.984; rss: 1424MB	codegen passes [8]
time: 1.988; rss: 1437MB	codegen passes [10]
time: 1.691; rss: 1443MB	codegen passes [20]
time: 1.817; rss: 1437MB	codegen passes [25]
time: 2.477; rss: 1433MB	codegen passes [12]
time: 2.392; rss: 1420MB	codegen passes [5]
time: 1.898; rss: 1417MB	codegen passes [33]
time: 2.614; rss: 1444MB	codegen passes [17]
time: 2.213; rss: 1432MB	codegen passes [26]
time: 2.790; rss: 1508MB	codegen passes [32]
time: 3.108; rss: 1538MB	codegen passes [21]
time: 3.241; rss: 1542MB	codegen passes [16]
time: 3.067; rss: 1558MB	codegen passes [13]
time: 3.884; rss: 1571MB	codegen passes [2]
time: 3.623; rss: 1654MB	codegen passes [28]
time: 3.799; rss: 1650MB	codegen passes [18]
time: 3.961; rss: 1619MB	codegen passes [14]
time: 4.124; rss: 1616MB	codegen passes [6]
time: 3.874; rss: 1592MB	codegen passes [34]
time: 4.200; rss: 1553MB	codegen passes [19]
time: 4.343; rss: 1529MB	codegen passes [15]
time: 4.404; rss: 1520MB	codegen passes [31]
time: 4.182; rss: 1511MB	codegen passes [27]
time: 4.583; rss: 1472MB	codegen passes [3]
time: 5.071; rss: 1426MB	codegen passes [1]
time: 4.690; rss: 1367MB	codegen passes [24]
time: 5.738; rss: 1307MB	codegen passes [11]
time: 8.501; rss: 1301MB	LLVM passes
time: 0.000; rss: 1301MB	serialize work products
time: 1.057; rss: 271MB	linking
done
