commit aa7a2e9e61cfb9469c7eb88308fa2e1a087ebdb4
Merge: a274617 5bf4d6f
Author: bors <bors@rust-lang.org>
Date:   Wed Dec 14 00:31:48 2016 +0000

    Auto merge of #38181 - jsgf:test-filter-exact, r=alexcrichton
    
    libtest: add --exact to make filter matching exact
    
    Filter matching is by substring by default. This makes it impossible
    to run a single test if its name is a substring of some other test.
    For example, its not possible to run just `mymod::test` with these
    tests:
    
    ```
      mymod::test
      mymod::test1
      mymod::test_module::moretests
    ```
    
    You could declare by convention that no test has a name that's a
    substring of another test, but that's not really practical.
    
    This PR adds the `--exact` flag, to make filter matching exactly
    match the complete name.
rustc: ./syntex-0.42.2@010-incr
find . -name '*.rs' | xargs touch
RUSTFLAGS="-Z incremental=incr" \
    cargo rustc -p syntex_syntax  -- \
    -Ztime-passes -Zinput-stats -Z incremental-info
time: 0.092; rss: 75MB	parsing
Lines of code:             33687
Pre-expansion node count:  223115
time: 0.000; rss: 75MB	recursion limit
time: 0.000; rss: 75MB	crate injection
time: 0.000; rss: 75MB	plugin loading
time: 0.000; rss: 75MB	plugin registration
time: 0.240; rss: 151MB	expansion
time: 0.000; rss: 151MB	maybe building test harness
time: 0.006; rss: 151MB	maybe creating a macro crate
Post-expansion node count: 638863
time: 0.000; rss: 151MB	checking for inline asm in case the target doesn't support it
time: 0.012; rss: 151MB	complete gated feature checking
time: 0.023; rss: 151MB	early lint checks
time: 0.007; rss: 151MB	AST validation
time: 0.075; rss: 166MB	name resolution
time: 0.058; rss: 200MB	lowering ast -> hir
time: 0.010; rss: 192MB	indexing hir
time: 0.006; rss: 192MB	attribute checking
time: 0.002; rss: 154MB	language item collection
time: 0.011; rss: 156MB	lifetime resolution
time: 0.000; rss: 156MB	looking for entry point
time: 0.000; rss: 156MB	looking for plugin registrar
time: 0.046; rss: 177MB	region resolution
time: 0.008; rss: 177MB	loop checking
time: 0.002; rss: 177MB	static item recursion checking
time: 0.381; rss: 178MB	compute_incremental_hashes_map
time: 0.000; rss: 178MB	load_dep_graph
time: 0.009; rss: 178MB	stability index
time: 0.021; rss: 182MB	stability checking
time: 0.056; rss: 190MB	type collecting
time: 0.004; rss: 190MB	variance inference
time: 0.006; rss: 193MB	impl wf inference
time: 0.025; rss: 197MB	coherence checking
time: 0.087; rss: 200MB	wf checking
time: 0.197; rss: 208MB	item-types checking
time: 3.568; rss: 266MB	item-bodies checking
time: 0.000; rss: 266MB	drop-impl checking
time: 0.219; rss: 277MB	const checking
time: 0.057; rss: 277MB	privacy checking
time: 0.019; rss: 284MB	intrinsic checking
time: 0.016; rss: 284MB	effect checking
time: 0.050; rss: 284MB	match checking
time: 0.049; rss: 290MB	liveness checking
time: 0.172; rss: 292MB	rvalue checking
time: 0.360; rss: 482MB	MIR dump
  time: 0.057; rss: 483MB	SimplifyCfg
  time: 0.074; rss: 483MB	QualifyAndPromoteConstants
  time: 0.119; rss: 500MB	TypeckMir
  time: 0.004; rss: 500MB	SimplifyBranches
  time: 0.033; rss: 500MB	SimplifyCfg
time: 0.287; rss: 500MB	MIR cleanup and validation
time: 0.481; rss: 501MB	borrow checking
time: 0.024; rss: 501MB	reachability checking
time: 0.038; rss: 501MB	death checking
time: 0.000; rss: 501MB	unused lib feature checking
time: 0.208; rss: 501MB	lint checking
time: 0.000; rss: 501MB	resolving dependency formats
  time: 0.004; rss: 501MB	NoLandingPads
  time: 0.027; rss: 501MB	SimplifyCfg
  time: 0.064; rss: 509MB	EraseRegions
  time: 0.011; rss: 509MB	AddCallGuards
  time: 0.274; rss: 529MB	ElaborateDrops
  time: 0.004; rss: 529MB	NoLandingPads
  time: 0.052; rss: 529MB	SimplifyCfg
  time: 0.028; rss: 528MB	InstCombine
  time: 0.012; rss: 528MB	Deaggregator
  time: 0.004; rss: 528MB	CopyPropagation
  time: 0.035; rss: 528MB	SimplifyLocals
  time: 0.010; rss: 528MB	AddCallGuards
  time: 0.003; rss: 528MB	PreTrans
time: 0.528; rss: 528MB	MIR optimisations
  time: 0.065; rss: 538MB	write metadata
  time: 0.393; rss: 551MB	translation item collection
  time: 0.071; rss: 555MB	codegen unit partitioning
  time: 0.048; rss: 1457MB	internalize symbols
time: 11.777; rss: 1457MB	translation
time: 0.000; rss: 1457MB	assert dep graph
time: 1.431; rss: 1485MB	serialize dep graph
incremental: re-using 0 out of 50 modules
time: 0.000; rss: 1195MB	llvm function passes [1]
time: 0.000; rss: 1199MB	llvm module passes [1]
time: 0.001; rss: 1201MB	llvm function passes [0]
time: 0.000; rss: 1201MB	llvm module passes [0]
time: 0.002; rss: 1203MB	llvm function passes [6]
time: 0.003; rss: 1207MB	llvm function passes [3]
time: 0.000; rss: 1207MB	llvm module passes [3]
time: 0.004; rss: 1207MB	llvm function passes [4]
time: 0.000; rss: 1207MB	llvm module passes [4]
time: 0.005; rss: 1212MB	llvm module passes [6]
time: 0.009; rss: 1212MB	llvm function passes [5]
time: 0.001; rss: 1214MB	llvm function passes [12]
time: 0.000; rss: 1216MB	llvm module passes [12]
time: 0.015; rss: 1220MB	llvm function passes [2]
time: 0.015; rss: 1226MB	codegen passes [1]
time: 0.010; rss: 1226MB	llvm module passes [5]
time: 0.006; rss: 1226MB	llvm module passes [2]
time: 0.011; rss: 1226MB	llvm function passes [11]
time: 0.005; rss: 1226MB	llvm module passes [11]
time: 0.038; rss: 1235MB	codegen passes [0]
time: 0.000; rss: 1235MB	llvm function passes [0]
time: 0.000; rss: 1235MB	llvm module passes [0]
time: 0.001; rss: 1235MB	codegen passes [0]
time: 0.003; rss: 1235MB	llvm function passes [0]
time: 0.001; rss: 1235MB	llvm module passes [0]
time: 0.031; rss: 1235MB	llvm function passes [1]
time: 0.052; rss: 1241MB	codegen passes [3]
time: 0.029; rss: 1241MB	llvm function passes [13]
time: 0.012; rss: 1247MB	llvm module passes [13]
time: 0.062; rss: 1249MB	llvm function passes [15]
time: 0.027; rss: 1249MB	llvm function passes [16]
time: 0.000; rss: 1256MB	llvm function passes [19]
time: 0.000; rss: 1256MB	llvm module passes [19]
time: 0.000; rss: 1256MB	llvm function passes [18]
time: 0.000; rss: 1256MB	llvm module passes [18]
time: 0.039; rss: 1258MB	llvm module passes [1]
time: 0.014; rss: 1262MB	llvm module passes [16]
time: 0.090; rss: 1268MB	llvm function passes [9]
time: 0.095; rss: 1272MB	codegen passes [12]
time: 0.106; rss: 1272MB	codegen passes [4]
time: 0.000; rss: 1272MB	llvm function passes [4]
time: 0.000; rss: 1272MB	llvm module passes [4]
time: 0.001; rss: 1272MB	codegen passes [4]
time: 0.014; rss: 1272MB	llvm module passes [9]
time: 0.035; rss: 1276MB	codegen passes [18]
time: 0.112; rss: 1276MB	codegen passes [6]
time: 0.035; rss: 1278MB	llvm function passes [12]
time: 0.063; rss: 1287MB	codegen passes [19]
time: 0.059; rss: 1287MB	llvm function passes [20]
time: 0.014; rss: 1289MB	llvm module passes [12]
time: 0.081; rss: 1289MB	llvm module passes [15]
time: 0.166; rss: 1289MB	llvm function passes [7]
time: 0.104; rss: 1289MB	llvm function passes [17]
time: 0.000; rss: 1289MB	llvm module passes [17]
time: 0.032; rss: 1294MB	llvm module passes [20]
time: 0.043; rss: 1299MB	codegen passes [0]
time: 0.021; rss: 1299MB	llvm function passes [22]
time: 0.029; rss: 1309MB	codegen passes [17]
time: 0.012; rss: 1308MB	llvm module passes [22]
time: 0.028; rss: 1322MB	llvm function passes [17]
time: 0.008; rss: 1322MB	llvm module passes [17]
time: 0.097; rss: 1322MB	llvm function passes [19]
time: 0.077; rss: 1322MB	llvm module passes [7]
time: 0.247; rss: 1326MB	llvm function passes [8]
time: 0.011; rss: 1334MB	llvm function passes [23]
time: 0.004; rss: 1334MB	llvm module passes [23]
time: 0.154; rss: 1334MB	llvm function passes [4]
time: 0.032; rss: 1344MB	llvm module passes [19]
time: 0.334; rss: 1363MB	llvm function passes [10]
time: 0.022; rss: 1363MB	llvm function passes [25]
time: 0.012; rss: 1371MB	llvm module passes [25]
time: 0.321; rss: 1371MB	llvm function passes [3]
time: 0.003; rss: 1376MB	llvm function passes [27]
time: 0.002; rss: 1375MB	llvm module passes [27]
time: 0.133; rss: 1375MB	llvm module passes [8]
time: 0.048; rss: 1379MB	llvm function passes [26]
time: 0.259; rss: 1376MB	llvm function passes [18]
time: 0.151; rss: 1377MB	llvm module passes [4]
time: 0.020; rss: 1381MB	llvm module passes [26]
time: 0.038; rss: 1383MB	codegen passes [27]
time: 0.251; rss: 1383MB	llvm function passes [21]
time: 0.113; rss: 1394MB	llvm module passes [10]
time: 0.068; rss: 1405MB	llvm module passes [21]
time: 0.241; rss: 1402MB	llvm function passes [24]
time: 0.018; rss: 1397MB	llvm function passes [35]
time: 0.155; rss: 1397MB	llvm function passes [28]
time: 0.034; rss: 1397MB	llvm function passes [34]
time: 0.013; rss: 1397MB	llvm function passes [36]
time: 0.000; rss: 1397MB	llvm module passes [36]
time: 0.494; rss: 1397MB	llvm function passes [14]
time: 0.136; rss: 1397MB	llvm function passes [29]
time: 0.354; rss: 1399MB	llvm function passes [0]
time: 0.429; rss: 1399MB	llvm function passes [6]
time: 0.011; rss: 1401MB	llvm module passes [34]
time: 0.129; rss: 1403MB	llvm function passes [27]
time: 0.005; rss: 1403MB	codegen passes [36]
time: 0.007; rss: 1403MB	codegen passes [37]
time: 0.284; rss: 1394MB	codegen passes [23]
time: 0.074; rss: 1397MB	llvm module passes [35]
time: 0.083; rss: 1398MB	llvm module passes [28]
time: 0.168; rss: 1400MB	llvm function passes [30]
time: 0.083; rss: 1400MB	llvm module passes [29]
time: 0.125; rss: 1400MB	llvm module passes [24]
time: 0.297; rss: 1391MB	llvm module passes [18]
time: 0.154; rss: 1394MB	llvm module passes [0]
time: 0.156; rss: 1395MB	llvm module passes [27]
time: 0.282; rss: 1400MB	llvm function passes [32]
time: 0.268; rss: 1403MB	llvm function passes [33]
time: 0.019; rss: 1407MB	llvm module passes [32]
time: 0.168; rss: 1417MB	llvm module passes [30]
time: 0.688; rss: 1424MB	codegen passes [5]
time: 0.485; rss: 1432MB	llvm module passes [3]
time: 0.148; rss: 1415MB	llvm module passes [33]
time: 0.321; rss: 1432MB	codegen passes [34]
time: 0.623; rss: 1429MB	llvm function passes [31]
time: 0.862; rss: 1431MB	codegen passes [1]
time: 0.558; rss: 1431MB	llvm module passes [6]
time: 0.740; rss: 1469MB	llvm module passes [14]
time: 0.963; rss: 1460MB	codegen passes [2]
time: 0.770; rss: 1454MB	codegen passes [35]
time: 0.391; rss: 1438MB	llvm module passes [31]
time: 1.048; rss: 1421MB	codegen passes [17]
time: 1.350; rss: 1450MB	codegen passes [11]
time: 1.305; rss: 1427MB	codegen passes [13]
time: 1.489; rss: 1422MB	codegen passes [22]
time: 1.415; rss: 1424MB	codegen passes [25]
time: 1.410; rss: 1438MB	codegen passes [27]
time: 2.284; rss: 1472MB	codegen passes [9]
time: 2.309; rss: 1478MB	codegen passes [12]
time: 2.438; rss: 1512MB	codegen passes [26]
time: 2.527; rss: 1512MB	codegen passes [16]
time: 2.295; rss: 1512MB	codegen passes [32]
time: 2.357; rss: 1501MB	codegen passes [4]
time: 2.275; rss: 1511MB	codegen passes [0]
time: 2.526; rss: 1509MB	codegen passes [19]
time: 2.272; rss: 1497MB	codegen passes [30]
time: 2.709; rss: 1497MB	codegen passes [15]
time: 2.771; rss: 1491MB	codegen passes [20]
time: 3.589; rss: 1679MB	codegen passes [29]
time: 3.737; rss: 1663MB	codegen passes [18]
time: 3.915; rss: 1663MB	codegen passes [3]
time: 4.160; rss: 1655MB	codegen passes [7]
time: 4.076; rss: 1634MB	codegen passes [33]
time: 4.464; rss: 1606MB	codegen passes [21]
time: 4.060; rss: 1632MB	codegen passes [6]
time: 4.581; rss: 1577MB	codegen passes [28]
time: 4.043; rss: 1530MB	codegen passes [31]
time: 5.327; rss: 1543MB	codegen passes [10]
time: 5.027; rss: 1456MB	codegen passes [8]
time: 5.202; rss: 1391MB	codegen passes [24]
time: 4.993; rss: 1320MB	codegen passes [14]
time: 7.608; rss: 1319MB	LLVM passes
time: 0.000; rss: 1319MB	serialize work products
time: 1.058; rss: 295MB	linking
done
