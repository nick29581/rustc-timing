commit d250169cb5a96481a3e7c8f9fe05de49f60e5ae5
Merge: c6d8ab0 96a5fc7
Author: bors <bors@rust-lang.org>
Date:   Fri Dec 16 07:26:41 2016 +0000

    Auto merge of #38359 - alexcrichton:sccache, r=brson
    
    rustbuild: Add sccache support
    
    This commit adds support for sccache, a ccache-like compiler which works on MSVC
    and stores results into an S3 bucket. This also switches over all Travis and
    AppVeyor automation to using sccache to ensure a shared and unified cache over
    time which can be shared across builders.
    
    The support for sccache manifests as a new `--enable-sccache` option which
    instructs us to configure LLVM differently to use a 'sccache' binary instead of
    a 'ccache' binary. All docker images for Travis builds are updated to download
    Mozilla's tooltool builds of sccache onto various containers and systems.
    Additionally a new `rust-lang-ci-sccache` bucket is configured to hold all of
    our ccache goodies.
    
    ---
    
    Note that this does not currently change Windows [due to previously written up issues](https://github.com/rust-lang/rust/issues/38119#issuecomment-266631585). Despite that, however, I was curious to get timings for the builds on Travis to see what ranges we're working with. As a result, this is a WIP PR I'm using to gauge build times and such.
rustc: ./syntex-0.42.2@010-incr
find . -name '*.rs' | xargs touch
RUSTFLAGS="-Z incremental=incr" \
    cargo rustc -p syntex_syntax  -- \
    -Ztime-passes -Zinput-stats -Z incremental-info
time: 0.092; rss: 75MB	parsing
Lines of code:             33687
Pre-expansion node count:  223115
time: 0.000; rss: 75MB	recursion limit
time: 0.000; rss: 75MB	crate injection
time: 0.000; rss: 75MB	plugin loading
time: 0.000; rss: 75MB	plugin registration
time: 0.249; rss: 151MB	expansion
time: 0.000; rss: 151MB	maybe building test harness
time: 0.007; rss: 151MB	maybe creating a macro crate
Post-expansion node count: 638863
time: 0.000; rss: 151MB	checking for inline asm in case the target doesn't support it
time: 0.013; rss: 151MB	complete gated feature checking
time: 0.025; rss: 151MB	early lint checks
time: 0.007; rss: 151MB	AST validation
time: 0.075; rss: 166MB	name resolution
time: 0.058; rss: 200MB	lowering ast -> hir
time: 0.009; rss: 192MB	indexing hir
time: 0.006; rss: 192MB	attribute checking
time: 0.002; rss: 154MB	language item collection
time: 0.011; rss: 156MB	lifetime resolution
time: 0.000; rss: 156MB	looking for entry point
time: 0.000; rss: 156MB	looking for plugin registrar
time: 0.045; rss: 177MB	region resolution
time: 0.007; rss: 177MB	loop checking
time: 0.002; rss: 177MB	static item recursion checking
time: 0.381; rss: 178MB	compute_incremental_hashes_map
time: 0.000; rss: 178MB	load_dep_graph
time: 0.008; rss: 178MB	stability index
time: 0.021; rss: 182MB	stability checking
time: 0.055; rss: 189MB	type collecting
time: 0.004; rss: 189MB	variance inference
time: 0.006; rss: 193MB	impl wf inference
time: 0.026; rss: 197MB	coherence checking
time: 0.089; rss: 199MB	wf checking
time: 0.197; rss: 207MB	item-types checking
time: 3.612; rss: 266MB	item-bodies checking
time: 0.000; rss: 266MB	drop-impl checking
time: 0.215; rss: 276MB	const checking
time: 0.057; rss: 276MB	privacy checking
time: 0.019; rss: 283MB	intrinsic checking
time: 0.013; rss: 283MB	effect checking
time: 0.048; rss: 283MB	match checking
time: 0.046; rss: 290MB	liveness checking
time: 0.176; rss: 292MB	rvalue checking
time: 0.366; rss: 482MB	MIR dump
  time: 0.056; rss: 483MB	SimplifyCfg
  time: 0.073; rss: 483MB	QualifyAndPromoteConstants
  time: 0.124; rss: 500MB	TypeckMir
  time: 0.004; rss: 500MB	SimplifyBranches
  time: 0.033; rss: 500MB	SimplifyCfg
time: 0.292; rss: 500MB	MIR cleanup and validation
time: 0.477; rss: 500MB	borrow checking
time: 0.024; rss: 500MB	reachability checking
time: 0.038; rss: 500MB	death checking
time: 0.000; rss: 500MB	unused lib feature checking
time: 0.177; rss: 500MB	lint checking
time: 0.000; rss: 500MB	resolving dependency formats
  time: 0.004; rss: 500MB	NoLandingPads
  time: 0.027; rss: 500MB	SimplifyCfg
  time: 0.064; rss: 509MB	EraseRegions
  time: 0.011; rss: 509MB	AddCallGuards
  time: 0.271; rss: 529MB	ElaborateDrops
  time: 0.003; rss: 529MB	NoLandingPads
  time: 0.052; rss: 529MB	SimplifyCfg
  time: 0.028; rss: 529MB	InstCombine
  time: 0.012; rss: 529MB	Deaggregator
  time: 0.004; rss: 529MB	CopyPropagation
  time: 0.035; rss: 529MB	SimplifyLocals
  time: 0.010; rss: 529MB	AddCallGuards
  time: 0.003; rss: 529MB	PreTrans
time: 0.523; rss: 529MB	MIR optimisations
  time: 0.065; rss: 538MB	write metadata
  time: 0.393; rss: 551MB	translation item collection
  time: 0.072; rss: 555MB	codegen unit partitioning
  time: 0.048; rss: 1457MB	internalize symbols
time: 11.756; rss: 1457MB	translation
time: 0.000; rss: 1457MB	assert dep graph
time: 1.407; rss: 1485MB	serialize dep graph
incremental: re-using 0 out of 50 modules
time: 0.000; rss: 1199MB	llvm function passes [0]
time: 0.000; rss: 1199MB	llvm module passes [0]
time: 0.001; rss: 1208MB	llvm function passes [1]
time: 0.000; rss: 1210MB	llvm module passes [1]
time: 0.002; rss: 1214MB	llvm function passes [2]
time: 0.000; rss: 1214MB	llvm module passes [2]
time: 0.003; rss: 1214MB	llvm function passes [6]
time: 0.001; rss: 1216MB	llvm function passes [10]
time: 0.007; rss: 1216MB	llvm function passes [3]
time: 0.004; rss: 1218MB	llvm module passes [10]
time: 0.010; rss: 1220MB	llvm function passes [4]
time: 0.000; rss: 1220MB	llvm module passes [4]
time: 0.008; rss: 1222MB	llvm module passes [6]
time: 0.016; rss: 1226MB	codegen passes [1]
time: 0.021; rss: 1226MB	llvm function passes [5]
time: 0.016; rss: 1226MB	llvm module passes [3]
time: 0.018; rss: 1226MB	llvm function passes [12]
time: 0.007; rss: 1226MB	llvm module passes [5]
time: 0.029; rss: 1226MB	codegen passes [0]
time: 0.008; rss: 1226MB	llvm module passes [12]
time: 0.040; rss: 1244MB	llvm function passes [9]
time: 0.040; rss: 1246MB	codegen passes [4]
time: 0.000; rss: 1246MB	llvm function passes [4]
time: 0.000; rss: 1246MB	llvm module passes [4]
time: 0.042; rss: 1248MB	codegen passes [10]
time: 0.001; rss: 1248MB	codegen passes [4]
time: 0.003; rss: 1248MB	llvm function passes [18]
time: 0.001; rss: 1248MB	llvm module passes [18]
time: 0.000; rss: 1250MB	llvm function passes [19]
time: 0.000; rss: 1250MB	llvm module passes [19]
time: 0.001; rss: 1252MB	llvm function passes [20]
time: 0.000; rss: 1252MB	llvm module passes [20]
time: 0.000; rss: 1254MB	llvm function passes [21]
time: 0.000; rss: 1254MB	llvm module passes [21]
time: 0.059; rss: 1258MB	codegen passes [2]
time: 0.029; rss: 1261MB	llvm function passes [11]
time: 0.009; rss: 1261MB	llvm module passes [11]
time: 0.027; rss: 1261MB	llvm module passes [9]
time: 0.004; rss: 1269MB	codegen passes [21]
time: 0.070; rss: 1269MB	codegen passes [6]
time: 0.000; rss: 1270MB	llvm function passes [23]
time: 0.000; rss: 1270MB	llvm module passes [23]
time: 0.001; rss: 1270MB	codegen passes [23]
time: 0.043; rss: 1280MB	codegen passes [20]
time: 0.124; rss: 1280MB	llvm function passes [8]
time: 0.042; rss: 1280MB	llvm function passes [16]
time: 0.112; rss: 1280MB	llvm function passes [1]
time: 0.084; rss: 1286MB	llvm function passes [10]
time: 0.071; rss: 1291MB	codegen passes [19]
time: 0.030; rss: 1291MB	llvm function passes [20]
time: 0.114; rss: 1291MB	llvm function passes [13]
time: 0.024; rss: 1293MB	llvm module passes [10]
time: 0.105; rss: 1293MB	llvm function passes [22]
time: 0.022; rss: 1296MB	llvm module passes [20]
time: 0.050; rss: 1296MB	llvm module passes [16]
time: 0.042; rss: 1296MB	llvm function passes [28]
time: 0.036; rss: 1296MB	llvm module passes [13]
time: 0.004; rss: 1296MB	llvm module passes [28]
time: 0.070; rss: 1296MB	llvm module passes [8]
time: 0.032; rss: 1298MB	llvm module passes [22]
time: 0.114; rss: 1300MB	codegen passes [18]
time: 0.079; rss: 1310MB	llvm function passes [27]
time: 0.108; rss: 1311MB	llvm module passes [1]
time: 0.237; rss: 1311MB	llvm function passes [7]
time: 0.022; rss: 1311MB	llvm module passes [27]
time: 0.132; rss: 1316MB	llvm function passes [25]
time: 0.114; rss: 1316MB	llvm function passes [24]
time: 0.023; rss: 1334MB	llvm module passes [24]
time: 0.029; rss: 1334MB	llvm module passes [25]
time: 0.113; rss: 1347MB	llvm function passes [39]
time: 0.012; rss: 1351MB	llvm module passes [39]
time: 0.272; rss: 1351MB	llvm function passes [2]
time: 0.315; rss: 1351MB	llvm function passes [0]
time: 0.011; rss: 1351MB	llvm function passes [33]
time: 0.009; rss: 1363MB	llvm function passes [34]
time: 0.291; rss: 1372MB	llvm function passes [21]
time: 0.111; rss: 1382MB	llvm function passes [31]
time: 0.008; rss: 1384MB	llvm module passes [31]
time: 0.060; rss: 1392MB	llvm module passes [33]
time: 0.318; rss: 1392MB	llvm function passes [23]
time: 0.048; rss: 1394MB	llvm module passes [34]
time: 0.054; rss: 1400MB	llvm module passes [21]
time: 0.403; rss: 1402MB	llvm function passes [4]
time: 0.131; rss: 1403MB	llvm module passes [0]
time: 0.000; rss: 1405MB	codegen passes [41]
time: 0.274; rss: 1407MB	llvm function passes [29]
time: 0.258; rss: 1405MB	llvm module passes [7]
time: 0.091; rss: 1401MB	llvm module passes [23]
time: 0.292; rss: 1402MB	llvm function passes [30]
time: 0.002; rss: 1402MB	llvm module passes [30]
time: 0.442; rss: 1405MB	llvm function passes [6]
time: 0.266; rss: 1407MB	codegen passes [28]
time: 0.145; rss: 1401MB	codegen passes [34]
time: 0.289; rss: 1401MB	llvm function passes [40]
time: 0.076; rss: 1402MB	llvm module passes [29]
time: 0.447; rss: 1398MB	llvm function passes [19]
time: 0.148; rss: 1401MB	codegen passes [33]
time: 0.250; rss: 1393MB	llvm function passes [45]
time: 0.340; rss: 1393MB	llvm function passes [43]
time: 0.085; rss: 1393MB	llvm module passes [40]
time: 0.314; rss: 1393MB	llvm module passes [2]
time: 0.617; rss: 1384MB	llvm function passes [17]
time: 0.029; rss: 1386MB	llvm module passes [45]
time: 0.367; rss: 1394MB	llvm function passes [32]
time: 0.514; rss: 1399MB	llvm function passes [18]
time: 0.126; rss: 1401MB	llvm module passes [19]
time: 0.016; rss: 1401MB	llvm module passes [32]
time: 0.386; rss: 1401MB	llvm function passes [44]
time: 0.280; rss: 1394MB	llvm module passes [4]
time: 0.707; rss: 1396MB	codegen passes [3]
time: 0.513; rss: 1407MB	llvm function passes [42]
time: 0.246; rss: 1407MB	codegen passes [30]
time: 0.249; rss: 1411MB	llvm module passes [43]
time: 0.370; rss: 1410MB	llvm module passes [6]
time: 0.243; rss: 1413MB	llvm module passes [18]
time: 0.304; rss: 1427MB	llvm module passes [44]
time: 0.455; rss: 1442MB	llvm module passes [17]
time: 0.264; rss: 1441MB	llvm module passes [42]
time: 0.463; rss: 1478MB	codegen passes [45]
time: 1.382; rss: 1514MB	codegen passes [11]
time: 1.190; rss: 1495MB	codegen passes [5]
time: 1.203; rss: 1476MB	codegen passes [27]
time: 1.208; rss: 1473MB	codegen passes [39]
time: 1.511; rss: 1470MB	codegen passes [12]
time: 1.409; rss: 1412MB	codegen passes [10]
time: 1.504; rss: 1414MB	codegen passes [9]
time: 1.586; rss: 1439MB	codegen passes [13]
time: 1.891; rss: 1443MB	codegen passes [31]
time: 1.908; rss: 1434MB	codegen passes [20]
time: 1.904; rss: 1459MB	codegen passes [2]
time: 2.267; rss: 1485MB	codegen passes [16]
time: 1.575; rss: 1471MB	codegen passes [43]
time: 2.144; rss: 1517MB	codegen passes [32]
time: 2.818; rss: 1563MB	codegen passes [24]
time: 2.903; rss: 1537MB	codegen passes [1]
time: 2.844; rss: 1538MB	codegen passes [22]
time: 2.386; rss: 1538MB	codegen passes [18]
time: 3.022; rss: 1536MB	codegen passes [25]
time: 3.783; rss: 1723MB	codegen passes [21]
time: 3.609; rss: 1694MB	codegen passes [42]
time: 4.315; rss: 1763MB	codegen passes [23]
time: 4.126; rss: 1734MB	codegen passes [4]
time: 4.140; rss: 1702MB	codegen passes [8]
time: 4.048; rss: 1692MB	codegen passes [44]
time: 4.154; rss: 1642MB	codegen passes [6]
time: 4.423; rss: 1588MB	codegen passes [40]
time: 4.587; rss: 1543MB	codegen passes [29]
time: 4.909; rss: 1538MB	codegen passes [7]
time: 5.189; rss: 1484MB	codegen passes [0]
time: 5.391; rss: 1441MB	codegen passes [19]
time: 5.081; rss: 1349MB	codegen passes [17]
time: 7.381; rss: 1348MB	LLVM passes
time: 0.000; rss: 1348MB	serialize work products
time: 1.054; rss: 313MB	linking
done
