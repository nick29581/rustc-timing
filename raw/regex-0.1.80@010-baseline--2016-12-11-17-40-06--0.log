commit 3db197aa9d343c7974b06a9b18ae5f78d5c64637
Merge: 6d5ec58 fbc3f11
Author: bors <bors@rust-lang.org>
Date:   Sun Dec 11 21:19:34 2016 +0000

    Auto merge of #38265 - bluss:mir-deaggregator-loop, r=nagisa
    
    Reinstate while loop in deaggregator pass
    
    A previous commit must have removed the `while let` loop here by
    mistake; for each basic block, it should find and deaggregate multiple
    statements in their index order, and the `curr` index tracks the
    progress through the block.
    
    This fixes both the case of deaggregating statements in separate
    basic blocks (preserving `curr` could prevent that) as well
    as multiple times in the same block (missing loop prevented that).
    
    The loop was lost in commit bda46c21fe30377b9587b584c64ffe99da6c14ce.
rustc: ./regex-0.1.80@010-baseline
cargo rustc  -- -Ztime-passes -Zinput-stats
time: 0.024; rss: 50MB	parsing
Lines of code:             10689
Pre-expansion node count:  55396
time: 0.000; rss: 50MB	recursion limit
time: 0.000; rss: 50MB	crate injection
time: 0.000; rss: 50MB	plugin loading
time: 0.000; rss: 50MB	plugin registration
time: 0.044; rss: 82MB	expansion
time: 0.000; rss: 82MB	maybe building test harness
time: 0.001; rss: 82MB	maybe creating a macro crate
Post-expansion node count: 86869
time: 0.000; rss: 82MB	checking for inline asm in case the target doesn't support it
time: 0.001; rss: 82MB	complete gated feature checking
time: 0.003; rss: 82MB	early lint checks
time: 0.001; rss: 82MB	AST validation
time: 0.010; rss: 85MB	name resolution
time: 0.007; rss: 89MB	lowering ast -> hir
time: 0.001; rss: 91MB	indexing hir
time: 0.001; rss: 91MB	attribute checking
time: 0.000; rss: 85MB	language item collection
time: 0.002; rss: 85MB	lifetime resolution
time: 0.000; rss: 85MB	looking for entry point
time: 0.000; rss: 85MB	looking for plugin registrar
time: 0.005; rss: 90MB	region resolution
time: 0.001; rss: 90MB	loop checking
time: 0.000; rss: 90MB	static item recursion checking
time: 0.034; rss: 89MB	compute_incremental_hashes_map
time: 0.000; rss: 89MB	load_dep_graph
time: 0.001; rss: 89MB	stability index
time: 0.002; rss: 89MB	stability checking
time: 0.010; rss: 91MB	type collecting
time: 0.000; rss: 91MB	variance inference
time: 0.000; rss: 91MB	impl wf inference
time: 0.012; rss: 92MB	coherence checking
time: 0.020; rss: 94MB	wf checking
time: 0.114; rss: 99MB	item-types checking
time: 0.285; rss: 106MB	item-bodies checking
time: 0.000; rss: 106MB	drop-impl checking
time: 0.144; rss: 135MB	const checking
time: 0.007; rss: 135MB	privacy checking
time: 0.002; rss: 135MB	intrinsic checking
time: 0.001; rss: 135MB	effect checking
time: 0.005; rss: 135MB	match checking
time: 0.004; rss: 136MB	liveness checking
time: 0.015; rss: 136MB	rvalue checking
time: 0.044; rss: 155MB	MIR dump
  time: 0.006; rss: 156MB	SimplifyCfg
  time: 0.009; rss: 156MB	QualifyAndPromoteConstants
  time: 0.012; rss: 156MB	TypeckMir
  time: 0.000; rss: 156MB	SimplifyBranches
  time: 0.003; rss: 156MB	SimplifyCfg
time: 0.030; rss: 156MB	MIR cleanup and validation
time: 0.045; rss: 156MB	borrow checking
time: 0.001; rss: 156MB	reachability checking
time: 0.004; rss: 156MB	death checking
time: 0.000; rss: 156MB	unused lib feature checking
time: 0.028; rss: 156MB	lint checking
time: 0.000; rss: 156MB	resolving dependency formats
  time: 0.000; rss: 156MB	NoLandingPads
  time: 0.003; rss: 156MB	SimplifyCfg
  time: 0.008; rss: 157MB	EraseRegions
  time: 0.001; rss: 157MB	AddCallGuards
  time: 0.017; rss: 158MB	ElaborateDrops
  time: 0.000; rss: 158MB	NoLandingPads
  time: 0.004; rss: 158MB	SimplifyCfg
  time: 0.003; rss: 158MB	InstCombine
  time: 0.002; rss: 158MB	Deaggregator
  time: 0.000; rss: 158MB	CopyPropagation
  time: 0.004; rss: 158MB	SimplifyLocals
  time: 0.001; rss: 158MB	AddCallGuards
  time: 0.000; rss: 158MB	PreTrans
time: 0.043; rss: 158MB	MIR optimisations
  time: 0.008; rss: 161MB	write metadata
  time: 0.083; rss: 167MB	translation item collection
  time: 0.012; rss: 169MB	codegen unit partitioning
  time: 0.012; rss: 225MB	internalize symbols
time: 0.983; rss: 225MB	translation
time: 0.000; rss: 225MB	assert dep graph
time: 0.000; rss: 225MB	serialize dep graph
  time: 0.086; rss: 140MB	llvm function passes [0]
  time: 0.436; rss: 181MB	llvm module passes [0]
  time: 2.525; rss: 185MB	codegen passes [0]
  time: 0.000; rss: 185MB	codegen passes [0]
time: 3.264; rss: 185MB	LLVM passes
time: 0.000; rss: 185MB	serialize work products
time: 0.120; rss: 94MB	linking
done
