commit aa7a2e9e61cfb9469c7eb88308fa2e1a087ebdb4
Merge: a274617 5bf4d6f
Author: bors <bors@rust-lang.org>
Date:   Wed Dec 14 00:31:48 2016 +0000

    Auto merge of #38181 - jsgf:test-filter-exact, r=alexcrichton
    
    libtest: add --exact to make filter matching exact
    
    Filter matching is by substring by default. This makes it impossible
    to run a single test if its name is a substring of some other test.
    For example, its not possible to run just `mymod::test` with these
    tests:
    
    ```
      mymod::test
      mymod::test1
      mymod::test_module::moretests
    ```
    
    You could declare by convention that no test has a name that's a
    substring of another test, but that's not really practical.
    
    This PR adds the `--exact` flag, to make filter matching exactly
    match the complete name.
rustc: ./syntex-0.42.2@010-incr
find . -name '*.rs' | xargs touch
RUSTFLAGS="-Z incremental=incr" \
    cargo rustc -p syntex_syntax  -- \
    -Ztime-passes -Zinput-stats -Z incremental-info
time: 0.092; rss: 75MB	parsing
Lines of code:             33687
Pre-expansion node count:  223115
time: 0.000; rss: 75MB	recursion limit
time: 0.000; rss: 75MB	crate injection
time: 0.000; rss: 75MB	plugin loading
time: 0.000; rss: 75MB	plugin registration
time: 0.250; rss: 151MB	expansion
time: 0.000; rss: 151MB	maybe building test harness
time: 0.007; rss: 151MB	maybe creating a macro crate
Post-expansion node count: 638863
time: 0.000; rss: 151MB	checking for inline asm in case the target doesn't support it
time: 0.013; rss: 151MB	complete gated feature checking
time: 0.025; rss: 151MB	early lint checks
time: 0.008; rss: 151MB	AST validation
time: 0.081; rss: 166MB	name resolution
time: 0.066; rss: 199MB	lowering ast -> hir
time: 0.011; rss: 192MB	indexing hir
time: 0.007; rss: 192MB	attribute checking
time: 0.002; rss: 153MB	language item collection
time: 0.012; rss: 156MB	lifetime resolution
time: 0.000; rss: 156MB	looking for entry point
time: 0.000; rss: 156MB	looking for plugin registrar
time: 0.050; rss: 176MB	region resolution
time: 0.009; rss: 176MB	loop checking
time: 0.002; rss: 176MB	static item recursion checking
time: 0.381; rss: 178MB	compute_incremental_hashes_map
time: 0.000; rss: 178MB	load_dep_graph
time: 0.009; rss: 178MB	stability index
time: 0.021; rss: 181MB	stability checking
time: 0.056; rss: 189MB	type collecting
time: 0.004; rss: 189MB	variance inference
time: 0.006; rss: 193MB	impl wf inference
time: 0.026; rss: 196MB	coherence checking
time: 0.088; rss: 199MB	wf checking
time: 0.196; rss: 207MB	item-types checking
time: 3.568; rss: 265MB	item-bodies checking
time: 0.000; rss: 265MB	drop-impl checking
time: 0.219; rss: 276MB	const checking
time: 0.057; rss: 276MB	privacy checking
time: 0.020; rss: 283MB	intrinsic checking
time: 0.016; rss: 283MB	effect checking
time: 0.049; rss: 283MB	match checking
time: 0.049; rss: 290MB	liveness checking
time: 0.176; rss: 292MB	rvalue checking
time: 0.372; rss: 481MB	MIR dump
  time: 0.060; rss: 482MB	SimplifyCfg
  time: 0.080; rss: 482MB	QualifyAndPromoteConstants
  time: 0.127; rss: 499MB	TypeckMir
  time: 0.004; rss: 499MB	SimplifyBranches
  time: 0.033; rss: 499MB	SimplifyCfg
time: 0.304; rss: 499MB	MIR cleanup and validation
time: 0.477; rss: 500MB	borrow checking
time: 0.024; rss: 500MB	reachability checking
time: 0.038; rss: 500MB	death checking
time: 0.000; rss: 500MB	unused lib feature checking
time: 0.177; rss: 500MB	lint checking
time: 0.000; rss: 500MB	resolving dependency formats
  time: 0.004; rss: 500MB	NoLandingPads
  time: 0.027; rss: 500MB	SimplifyCfg
  time: 0.064; rss: 509MB	EraseRegions
  time: 0.011; rss: 509MB	AddCallGuards
  time: 0.270; rss: 528MB	ElaborateDrops
  time: 0.003; rss: 528MB	NoLandingPads
  time: 0.052; rss: 528MB	SimplifyCfg
  time: 0.028; rss: 528MB	InstCombine
  time: 0.012; rss: 528MB	Deaggregator
  time: 0.004; rss: 528MB	CopyPropagation
  time: 0.034; rss: 528MB	SimplifyLocals
  time: 0.010; rss: 528MB	AddCallGuards
  time: 0.003; rss: 528MB	PreTrans
time: 0.522; rss: 528MB	MIR optimisations
  time: 0.065; rss: 538MB	write metadata
  time: 0.393; rss: 551MB	translation item collection
  time: 0.072; rss: 555MB	codegen unit partitioning
  time: 0.048; rss: 1457MB	internalize symbols
time: 11.869; rss: 1457MB	translation
time: 0.000; rss: 1457MB	assert dep graph
time: 1.393; rss: 1485MB	serialize dep graph
incremental: re-using 0 out of 50 modules
time: 0.000; rss: 1196MB	llvm function passes [1]
time: 0.000; rss: 1196MB	llvm module passes [1]
time: 0.001; rss: 1202MB	llvm function passes [0]
time: 0.000; rss: 1202MB	llvm module passes [0]
time: 0.001; rss: 1207MB	llvm function passes [2]
time: 0.000; rss: 1207MB	llvm module passes [2]
time: 0.002; rss: 1207MB	llvm function passes [3]
time: 0.000; rss: 1207MB	llvm module passes [3]
time: 0.003; rss: 1207MB	llvm function passes [5]
time: 0.005; rss: 1209MB	codegen passes [1]
time: 0.002; rss: 1209MB	llvm module passes [5]
time: 0.007; rss: 1209MB	codegen passes [0]
time: 0.001; rss: 1209MB	llvm function passes [0]
time: 0.000; rss: 1209MB	llvm module passes [0]
time: 0.014; rss: 1209MB	llvm function passes [4]
time: 0.014; rss: 1209MB	llvm function passes [6]
time: 0.006; rss: 1215MB	llvm module passes [6]
time: 0.007; rss: 1215MB	llvm module passes [4]
time: 0.027; rss: 1221MB	codegen passes [3]
time: 0.018; rss: 1221MB	llvm function passes [9]
time: 0.038; rss: 1225MB	codegen passes [2]
time: 0.009; rss: 1227MB	llvm module passes [9]
time: 0.043; rss: 1235MB	codegen passes [0]
time: 0.000; rss: 1241MB	llvm function passes [13]
time: 0.000; rss: 1241MB	llvm module passes [13]
time: 0.001; rss: 1243MB	codegen passes [13]
time: 0.065; rss: 1243MB	llvm function passes [10]
time: 0.045; rss: 1245MB	llvm function passes [2]
time: 0.000; rss: 1249MB	llvm function passes [15]
time: 0.000; rss: 1249MB	llvm module passes [15]
time: 0.078; rss: 1249MB	codegen passes [5]
time: 0.001; rss: 1249MB	llvm function passes [5]
time: 0.000; rss: 1249MB	llvm module passes [5]
time: 0.008; rss: 1249MB	llvm module passes [2]
time: 0.009; rss: 1249MB	llvm function passes [14]
time: 0.001; rss: 1249MB	llvm module passes [14]
time: 0.071; rss: 1249MB	llvm function passes [8]
time: 0.008; rss: 1249MB	codegen passes [5]
time: 0.000; rss: 1249MB	llvm function passes [5]
time: 0.000; rss: 1249MB	llvm module passes [5]
time: 0.004; rss: 1249MB	codegen passes [5]
time: 0.000; rss: 1253MB	llvm function passes [16]
time: 0.000; rss: 1253MB	llvm module passes [16]
time: 0.001; rss: 1255MB	codegen passes [16]
time: 0.027; rss: 1257MB	codegen passes [15]
time: 0.064; rss: 1257MB	llvm function passes [0]
time: 0.030; rss: 1259MB	llvm module passes [8]
time: 0.019; rss: 1259MB	llvm module passes [0]
time: 0.148; rss: 1267MB	llvm function passes [7]
time: 0.039; rss: 1267MB	llvm function passes [16]
time: 0.022; rss: 1277MB	llvm module passes [16]
time: 0.092; rss: 1281MB	llvm module passes [10]
time: 0.107; rss: 1281MB	llvm function passes [13]
time: 0.093; rss: 1284MB	codegen passes [14]
time: 0.003; rss: 1290MB	llvm function passes [49]
time: 0.069; rss: 1291MB	llvm module passes [7]
time: 0.022; rss: 1291MB	llvm function passes [19]
time: 0.004; rss: 1291MB	llvm module passes [19]
time: 0.047; rss: 1289MB	llvm module passes [13]
time: 0.022; rss: 1289MB	llvm module passes [49]
time: 0.246; rss: 1289MB	llvm function passes [1]
time: 0.156; rss: 1289MB	llvm function passes [41]
time: 0.088; rss: 1289MB	llvm function passes [18]
time: 0.073; rss: 1289MB	llvm function passes [47]
time: 0.103; rss: 1289MB	llvm function passes [17]
time: 0.032; rss: 1296MB	llvm module passes [18]
time: 0.043; rss: 1298MB	llvm module passes [41]
time: 0.034; rss: 1298MB	llvm module passes [47]
time: 0.032; rss: 1298MB	llvm module passes [17]
time: 0.140; rss: 1306MB	llvm function passes [45]
time: 0.221; rss: 1315MB	llvm function passes [15]
time: 0.122; rss: 1342MB	llvm function passes [36]
time: 0.193; rss: 1344MB	llvm function passes [44]
time: 0.261; rss: 1344MB	llvm function passes [5]
time: 0.229; rss: 1350MB	llvm function passes [43]
time: 0.056; rss: 1354MB	llvm module passes [15]
time: 0.049; rss: 1354MB	llvm module passes [36]
time: 0.076; rss: 1363MB	llvm function passes [26]
time: 0.000; rss: 1363MB	llvm module passes [26]
time: 0.063; rss: 1369MB	llvm module passes [44]
time: 0.320; rss: 1369MB	llvm function passes [40]
time: 0.070; rss: 1373MB	llvm module passes [43]
time: 0.122; rss: 1375MB	llvm module passes [45]
time: 0.233; rss: 1377MB	llvm function passes [48]
time: 0.322; rss: 1389MB	llvm function passes [42]
time: 0.116; rss: 1389MB	llvm module passes [5]
time: 0.175; rss: 1389MB	llvm function passes [38]
time: 0.005; rss: 1390MB	llvm module passes [38]
time: 0.000; rss: 1397MB	codegen passes [21]
time: 0.102; rss: 1401MB	llvm module passes [40]
time: 0.091; rss: 1401MB	llvm module passes [48]
time: 0.074; rss: 1399MB	llvm module passes [42]
time: 0.351; rss: 1399MB	llvm function passes [46]
time: 0.293; rss: 1395MB	llvm module passes [1]
time: 0.345; rss: 1398MB	llvm function passes [20]
time: 0.376; rss: 1402MB	llvm function passes [23]
time: 0.202; rss: 1405MB	codegen passes [26]
time: 0.415; rss: 1408MB	llvm function passes [24]
time: 0.080; rss: 1410MB	llvm module passes [20]
time: 0.246; rss: 1410MB	llvm function passes [25]
time: 0.001; rss: 1410MB	llvm module passes [25]
time: 0.336; rss: 1407MB	codegen passes [19]
time: 0.129; rss: 1403MB	llvm module passes [46]
time: 0.483; rss: 1401MB	llvm function passes [14]
time: 0.026; rss: 1405MB	llvm module passes [14]
time: 0.109; rss: 1410MB	llvm module passes [24]
time: 0.695; rss: 1411MB	llvm function passes [12]
time: 0.547; rss: 1413MB	llvm function passes [22]
time: 0.724; rss: 1418MB	codegen passes [6]
time: 0.122; rss: 1427MB	codegen passes [49]
time: 0.306; rss: 1426MB	codegen passes [38]
time: 0.839; rss: 1420MB	llvm function passes [3]
time: 0.138; rss: 1427MB	llvm module passes [22]
time: 0.690; rss: 1427MB	llvm function passes [37]
time: 0.321; rss: 1438MB	codegen passes [25]
time: 0.104; rss: 1439MB	llvm module passes [37]
time: 0.161; rss: 1439MB	llvm module passes [3]
time: 0.667; rss: 1452MB	llvm module passes [23]
time: 0.723; rss: 1448MB	llvm module passes [12]
time: 1.471; rss: 1441MB	codegen passes [4]
time: 1.144; rss: 1472MB	codegen passes [18]
time: 1.573; rss: 1457MB	codegen passes [9]
time: 1.145; rss: 1442MB	codegen passes [17]
time: 1.744; rss: 1459MB	codegen passes [2]
time: 1.536; rss: 1463MB	codegen passes [0]
time: 1.430; rss: 1439MB	codegen passes [8]
time: 1.667; rss: 1455MB	codegen passes [16]
time: 1.756; rss: 1446MB	codegen passes [13]
time: 1.714; rss: 1477MB	codegen passes [14]
time: 2.037; rss: 1474MB	codegen passes [41]
time: 1.616; rss: 1480MB	codegen passes [22]
time: 2.267; rss: 1478MB	codegen passes [47]
time: 2.291; rss: 1492MB	codegen passes [36]
time: 2.030; rss: 1488MB	codegen passes [24]
time: 2.576; rss: 1538MB	codegen passes [45]
time: 2.902; rss: 1609MB	codegen passes [44]
time: 3.118; rss: 1597MB	codegen passes [10]
time: 3.067; rss: 1614MB	codegen passes [5]
time: 3.710; rss: 1692MB	codegen passes [40]
time: 3.677; rss: 1627MB	codegen passes [48]
time: 3.518; rss: 1617MB	codegen passes [15]
time: 3.900; rss: 1674MB	codegen passes [43]
time: 3.695; rss: 1655MB	codegen passes [37]
time: 4.114; rss: 1613MB	codegen passes [7]
time: 4.397; rss: 1596MB	codegen passes [42]
time: 4.044; rss: 1550MB	codegen passes [20]
time: 4.260; rss: 1571MB	codegen passes [23]
time: 4.739; rss: 1527MB	codegen passes [1]
time: 4.774; rss: 1499MB	codegen passes [3]
time: 5.383; rss: 1421MB	codegen passes [46]
time: 4.773; rss: 1352MB	codegen passes [12]
time: 7.519; rss: 1350MB	LLVM passes
time: 0.000; rss: 1350MB	serialize work products
time: 1.059; rss: 315MB	linking
done
