commit 3db197aa9d343c7974b06a9b18ae5f78d5c64637
Merge: 6d5ec58 fbc3f11
Author: bors <bors@rust-lang.org>
Date:   Sun Dec 11 21:19:34 2016 +0000

    Auto merge of #38265 - bluss:mir-deaggregator-loop, r=nagisa
    
    Reinstate while loop in deaggregator pass
    
    A previous commit must have removed the `while let` loop here by
    mistake; for each basic block, it should find and deaggregate multiple
    statements in their index order, and the `curr` index tracks the
    progress through the block.
    
    This fixes both the case of deaggregating statements in separate
    basic blocks (preserving `curr` could prevent that) as well
    as multiple times in the same block (missing loop prevented that).
    
    The loop was lost in commit bda46c21fe30377b9587b584c64ffe99da6c14ce.
rustc: ./syntex-0.42.2@010-incr
find . -name '*.rs' | xargs touch
RUSTFLAGS="-Z incremental=incr" \
    cargo rustc -p syntex_syntax  -- \
    -Ztime-passes -Zinput-stats -Z incremental-info
time: 0.092; rss: 75MB	parsing
Lines of code:             33687
Pre-expansion node count:  223115
time: 0.000; rss: 75MB	recursion limit
time: 0.000; rss: 75MB	crate injection
time: 0.000; rss: 75MB	plugin loading
time: 0.000; rss: 75MB	plugin registration
time: 0.242; rss: 151MB	expansion
time: 0.000; rss: 151MB	maybe building test harness
time: 0.006; rss: 151MB	maybe creating a macro crate
Post-expansion node count: 638863
time: 0.000; rss: 151MB	checking for inline asm in case the target doesn't support it
time: 0.012; rss: 151MB	complete gated feature checking
time: 0.023; rss: 151MB	early lint checks
time: 0.007; rss: 151MB	AST validation
time: 0.075; rss: 166MB	name resolution
time: 0.058; rss: 200MB	lowering ast -> hir
time: 0.010; rss: 192MB	indexing hir
time: 0.006; rss: 192MB	attribute checking
time: 0.002; rss: 154MB	language item collection
time: 0.011; rss: 156MB	lifetime resolution
time: 0.000; rss: 156MB	looking for entry point
time: 0.000; rss: 156MB	looking for plugin registrar
time: 0.046; rss: 177MB	region resolution
time: 0.008; rss: 177MB	loop checking
time: 0.002; rss: 177MB	static item recursion checking
time: 0.381; rss: 178MB	compute_incremental_hashes_map
time: 0.000; rss: 178MB	load_dep_graph
time: 0.009; rss: 178MB	stability index
time: 0.021; rss: 181MB	stability checking
time: 0.056; rss: 190MB	type collecting
time: 0.004; rss: 190MB	variance inference
time: 0.006; rss: 193MB	impl wf inference
time: 0.026; rss: 197MB	coherence checking
time: 0.088; rss: 200MB	wf checking
time: 0.198; rss: 208MB	item-types checking
time: 3.604; rss: 266MB	item-bodies checking
time: 0.000; rss: 266MB	drop-impl checking
time: 0.220; rss: 277MB	const checking
time: 0.060; rss: 277MB	privacy checking
time: 0.021; rss: 284MB	intrinsic checking
time: 0.016; rss: 284MB	effect checking
time: 0.051; rss: 284MB	match checking
time: 0.049; rss: 290MB	liveness checking
time: 0.182; rss: 292MB	rvalue checking
time: 0.501; rss: 474MB	MIR dump
  time: 0.060; rss: 479MB	SimplifyCfg
  time: 0.079; rss: 479MB	QualifyAndPromoteConstants
  time: 0.186; rss: 496MB	TypeckMir
  time: 0.005; rss: 496MB	SimplifyBranches
  time: 0.035; rss: 496MB	SimplifyCfg
time: 0.365; rss: 496MB	MIR cleanup and validation
time: 0.489; rss: 498MB	borrow checking
time: 0.026; rss: 498MB	reachability checking
time: 0.044; rss: 498MB	death checking
time: 0.000; rss: 498MB	unused lib feature checking
time: 0.183; rss: 498MB	lint checking
time: 0.000; rss: 498MB	resolving dependency formats
  time: 0.004; rss: 498MB	NoLandingPads
  time: 0.030; rss: 498MB	SimplifyCfg
  time: 0.073; rss: 507MB	EraseRegions
  time: 0.013; rss: 507MB	AddCallGuards
  time: 0.304; rss: 525MB	ElaborateDrops
  time: 0.004; rss: 525MB	NoLandingPads
  time: 0.058; rss: 525MB	SimplifyCfg
  time: 0.032; rss: 524MB	InstCombine
  time: 0.013; rss: 524MB	Deaggregator
  time: 0.003; rss: 524MB	CopyPropagation
  time: 0.037; rss: 524MB	SimplifyLocals
  time: 0.010; rss: 524MB	AddCallGuards
  time: 0.003; rss: 524MB	PreTrans
time: 0.584; rss: 524MB	MIR optimisations
  time: 0.087; rss: 532MB	write metadata
  time: 0.428; rss: 543MB	translation item collection
  time: 0.074; rss: 548MB	codegen unit partitioning
  time: 0.054; rss: 1445MB	internalize symbols
time: 14.120; rss: 1445MB	translation
time: 0.000; rss: 1445MB	assert dep graph
time: 2.166; rss: 1473MB	serialize dep graph
incremental: re-using 0 out of 50 modules
time: 0.000; rss: 1185MB	llvm function passes [0]
time: 0.000; rss: 1185MB	llvm module passes [0]
time: 0.001; rss: 1200MB	llvm function passes [1]
time: 0.000; rss: 1200MB	llvm module passes [1]
time: 0.001; rss: 1204MB	llvm function passes [2]
time: 0.000; rss: 1207MB	llvm module passes [2]
time: 0.002; rss: 1211MB	llvm function passes [3]
time: 0.000; rss: 1211MB	llvm module passes [3]
time: 0.001; rss: 1217MB	llvm function passes [12]
time: 0.004; rss: 1219MB	llvm function passes [5]
time: 0.002; rss: 1221MB	llvm module passes [5]
time: 0.010; rss: 1221MB	codegen passes [0]
time: 0.015; rss: 1223MB	llvm function passes [8]
time: 0.014; rss: 1223MB	llvm module passes [12]
time: 0.018; rss: 1223MB	llvm function passes [4]
time: 0.019; rss: 1223MB	llvm function passes [11]
time: 0.023; rss: 1223MB	llvm function passes [7]
time: 0.010; rss: 1223MB	llvm module passes [8]
time: 0.008; rss: 1223MB	llvm module passes [4]
time: 0.009; rss: 1223MB	llvm module passes [11]
time: 0.014; rss: 1230MB	llvm module passes [7]
time: 0.013; rss: 1232MB	llvm function passes [13]
time: 0.008; rss: 1244MB	llvm module passes [13]
time: 0.028; rss: 1244MB	llvm function passes [14]
time: 0.067; rss: 1246MB	llvm function passes [6]
time: 0.012; rss: 1248MB	llvm module passes [14]
time: 0.000; rss: 1261MB	llvm function passes [19]
time: 0.000; rss: 1261MB	llvm module passes [19]
time: 0.093; rss: 1263MB	codegen passes [1]
time: 0.014; rss: 1263MB	codegen passes [19]
time: 0.107; rss: 1263MB	codegen passes [12]
time: 0.038; rss: 1260MB	llvm function passes [16]
time: 0.001; rss: 1260MB	llvm module passes [16]
time: 0.143; rss: 1260MB	llvm function passes [9]
time: 0.001; rss: 1261MB	llvm function passes [18]
time: 0.000; rss: 1261MB	llvm module passes [18]
time: 0.154; rss: 1262MB	codegen passes [3]
time: 0.000; rss: 1262MB	llvm function passes [3]
time: 0.000; rss: 1262MB	llvm module passes [3]
time: 0.001; rss: 1262MB	codegen passes [3]
time: 0.072; rss: 1261MB	llvm function passes [1]
time: 0.018; rss: 1259MB	llvm module passes [1]
time: 0.062; rss: 1259MB	llvm function passes [12]
time: 0.195; rss: 1259MB	codegen passes [2]
time: 0.195; rss: 1259MB	llvm function passes [0]
time: 0.011; rss: 1260MB	llvm function passes [20]
time: 0.000; rss: 1260MB	llvm module passes [20]
time: 0.200; rss: 1261MB	codegen passes [5]
time: 0.073; rss: 1262MB	llvm module passes [9]
time: 0.031; rss: 1262MB	llvm module passes [12]
time: 0.029; rss: 1262MB	codegen passes [20]
time: 0.080; rss: 1262MB	llvm function passes [3]
time: 0.173; rss: 1265MB	llvm module passes [6]
time: 0.013; rss: 1265MB	llvm function passes [20]
time: 0.053; rss: 1266MB	llvm function passes [17]
time: 0.000; rss: 1266MB	llvm module passes [17]
time: 0.025; rss: 1267MB	llvm module passes [3]
time: 0.065; rss: 1268MB	llvm function passes [22]
time: 0.096; rss: 1269MB	llvm function passes [5]
time: 0.205; rss: 1270MB	llvm function passes [19]
time: 0.065; rss: 1270MB	llvm module passes [20]
time: 0.317; rss: 1272MB	llvm function passes [10]
time: 0.164; rss: 1272MB	codegen passes [18]
time: 0.011; rss: 1275MB	llvm function passes [18]
time: 0.002; rss: 1275MB	llvm module passes [18]
time: 0.198; rss: 1275MB	codegen passes [16]
time: 0.041; rss: 1276MB	llvm function passes [25]
time: 0.039; rss: 1275MB	llvm function passes [32]
time: 0.031; rss: 1278MB	llvm module passes [25]
time: 0.010; rss: 1275MB	llvm module passes [32]
time: 0.096; rss: 1276MB	llvm module passes [5]
time: 0.136; rss: 1279MB	codegen passes [17]
time: 0.004; rss: 1279MB	llvm function passes [17]
time: 0.006; rss: 1280MB	llvm module passes [17]
time: 0.090; rss: 1281MB	llvm function passes [30]
time: 0.399; rss: 1284MB	llvm function passes [15]
time: 0.010; rss: 1286MB	llvm function passes [37]
time: 0.129; rss: 1287MB	llvm function passes [26]
time: 0.012; rss: 1293MB	llvm module passes [26]
time: 0.020; rss: 1293MB	llvm module passes [37]
time: 0.044; rss: 1293MB	llvm function passes [36]
time: 0.028; rss: 1295MB	llvm module passes [36]
time: 0.139; rss: 1295MB	llvm function passes [34]
time: 0.346; rss: 1295MB	llvm function passes [2]
time: 0.038; rss: 1297MB	codegen passes [37]
time: 0.279; rss: 1297MB	llvm module passes [22]
time: 0.127; rss: 1297MB	llvm module passes [30]
time: 0.080; rss: 1298MB	codegen passes [38]
time: 0.175; rss: 1303MB	llvm function passes [27]
time: 0.183; rss: 1305MB	llvm function passes [33]
time: 0.266; rss: 1310MB	llvm function passes [16]
time: 0.393; rss: 1313MB	llvm function passes [24]
time: 0.065; rss: 1314MB	llvm module passes [27]
time: 0.113; rss: 1316MB	llvm module passes [34]
time: 0.428; rss: 1318MB	llvm function passes [21]
time: 0.142; rss: 1327MB	llvm module passes [33]
time: 0.531; rss: 1327MB	llvm module passes [0]
time: 0.513; rss: 1331MB	llvm function passes [23]
time: 0.204; rss: 1331MB	llvm module passes [2]
time: 0.448; rss: 1330MB	llvm function passes [28]
time: 0.360; rss: 1332MB	llvm function passes [31]
time: 0.328; rss: 1333MB	llvm function passes [35]
time: 0.397; rss: 1333MB	codegen passes [18]
time: 0.707; rss: 1332MB	codegen passes [8]
time: 0.483; rss: 1333MB	llvm module passes [19]
time: 0.193; rss: 1337MB	llvm module passes [24]
time: 0.258; rss: 1342MB	llvm module passes [16]
time: 0.605; rss: 1344MB	llvm function passes [29]
time: 0.473; rss: 1343MB	codegen passes [17]
time: 0.588; rss: 1343MB	llvm module passes [10]
time: 0.895; rss: 1345MB	codegen passes [4]
time: 0.367; rss: 1348MB	llvm module passes [21]
time: 0.358; rss: 1346MB	llvm module passes [23]
time: 0.669; rss: 1348MB	llvm module passes [15]
time: 0.391; rss: 1345MB	llvm module passes [31]
time: 0.500; rss: 1360MB	llvm module passes [28]
time: 0.504; rss: 1362MB	llvm module passes [35]
time: 0.515; rss: 1365MB	llvm module passes [29]
time: 1.285; rss: 1368MB	codegen passes [11]
time: 0.888; rss: 1388MB	codegen passes [36]
time: 1.508; rss: 1388MB	codegen passes [13]
time: 1.087; rss: 1413MB	codegen passes [26]
time: 1.320; rss: 1411MB	codegen passes [20]
time: 1.967; rss: 1434MB	codegen passes [14]
time: 2.106; rss: 1433MB	codegen passes [7]
time: 1.371; rss: 1431MB	codegen passes [30]
time: 1.732; rss: 1436MB	codegen passes [32]
time: 1.767; rss: 1428MB	codegen passes [25]
time: 1.828; rss: 1423MB	codegen passes [3]
time: 2.416; rss: 1434MB	codegen passes [1]
time: 2.469; rss: 1458MB	codegen passes [22]
time: 2.286; rss: 1451MB	codegen passes [34]
time: 2.738; rss: 1485MB	codegen passes [27]
time: 2.556; rss: 1472MB	codegen passes [33]
time: 3.357; rss: 1539MB	codegen passes [5]
time: 2.647; rss: 1534MB	codegen passes [24]
time: 3.255; rss: 1519MB	codegen passes [6]
time: 3.409; rss: 1520MB	codegen passes [12]
time: 3.290; rss: 1577MB	codegen passes [16]
time: 3.436; rss: 1594MB	codegen passes [21]
time: 4.291; rss: 1639MB	codegen passes [19]
time: 4.122; rss: 1609MB	codegen passes [9]
time: 3.857; rss: 1612MB	codegen passes [35]
time: 4.372; rss: 1566MB	codegen passes [2]
time: 3.738; rss: 1493MB	codegen passes [23]
time: 4.424; rss: 1477MB	codegen passes [31]
time: 4.120; rss: 1499MB	codegen passes [28]
time: 4.727; rss: 1439MB	codegen passes [0]
time: 5.283; rss: 1428MB	codegen passes [10]
time: 5.199; rss: 1367MB	codegen passes [15]
time: 4.825; rss: 1300MB	codegen passes [29]
time: 8.500; rss: 1297MB	LLVM passes
time: 0.000; rss: 1297MB	serialize work products
time: 1.057; rss: 267MB	linking
done
