commit cfa668f3bf8156730b419deec51fb980af23b8bb
Merge: 7ad7232 3e15dc1
Author: bors <bors@rust-lang.org>
Date:   Thu Dec 15 06:23:11 2016 +0000

    Auto merge of #37702 - redox-os:redox, r=brson
    
    Redox Support Preview
    
    # Important - This is only a preview of a working `sys::redox`.
    
    Compiling the Redox default distribution with this `libstd` results in a fully functioning distribution. As such, all further changes would be cosmetic or implementing features that have not been used by the default distribution (of which there are only a small number).
    
    I do not expect this to be merged, but would like to discuss how it may be improved and get feedback.
    
    There are a few `unimplemented!()` - `cloexec` for example. I have documented them below. These would be resolved before desiring a merge.
    
    There are also issues with how the Redox syscall library is called - currently I am using a re-export in `libc` but that probably would not be desired.
rustc: ./syntex-0.42.2@000-base
cargo rustc -p syntex_syntax  -- -Ztime-passes -Zinput-stats
time: 0.092; rss: 71MB	parsing
Lines of code:             33687
Pre-expansion node count:  223115
time: 0.000; rss: 71MB	recursion limit
time: 0.000; rss: 71MB	crate injection
time: 0.000; rss: 71MB	plugin loading
time: 0.000; rss: 71MB	plugin registration
time: 0.241; rss: 146MB	expansion
time: 0.000; rss: 146MB	maybe building test harness
time: 0.006; rss: 146MB	maybe creating a macro crate
Post-expansion node count: 638863
time: 0.000; rss: 146MB	checking for inline asm in case the target doesn't support it
time: 0.012; rss: 146MB	complete gated feature checking
time: 0.023; rss: 146MB	early lint checks
time: 0.007; rss: 146MB	AST validation
time: 0.075; rss: 161MB	name resolution
time: 0.058; rss: 195MB	lowering ast -> hir
time: 0.010; rss: 187MB	indexing hir
time: 0.006; rss: 187MB	attribute checking
time: 0.002; rss: 149MB	language item collection
time: 0.011; rss: 149MB	lifetime resolution
time: 0.000; rss: 149MB	looking for entry point
time: 0.000; rss: 149MB	looking for plugin registrar
time: 0.046; rss: 169MB	region resolution
time: 0.007; rss: 169MB	loop checking
time: 0.002; rss: 169MB	static item recursion checking
time: 0.381; rss: 171MB	compute_incremental_hashes_map
time: 0.000; rss: 171MB	load_dep_graph
time: 0.008; rss: 171MB	stability index
time: 0.016; rss: 171MB	stability checking
time: 0.047; rss: 175MB	type collecting
time: 0.001; rss: 175MB	variance inference
time: 0.002; rss: 176MB	impl wf inference
time: 0.017; rss: 178MB	coherence checking
time: 0.082; rss: 180MB	wf checking
time: 0.181; rss: 184MB	item-types checking
time: 3.519; rss: 235MB	item-bodies checking
time: 0.000; rss: 235MB	drop-impl checking
time: 0.277; rss: 244MB	const checking
time: 0.069; rss: 245MB	privacy checking
time: 0.021; rss: 245MB	intrinsic checking
time: 0.018; rss: 245MB	effect checking
time: 0.065; rss: 245MB	match checking
time: 0.058; rss: 251MB	liveness checking
time: 0.180; rss: 251MB	rvalue checking
time: 0.355; rss: 441MB	MIR dump
  time: 0.056; rss: 443MB	SimplifyCfg
  time: 0.072; rss: 443MB	QualifyAndPromoteConstants
  time: 0.105; rss: 443MB	TypeckMir
  time: 0.004; rss: 443MB	SimplifyBranches
  time: 0.030; rss: 443MB	SimplifyCfg
time: 0.268; rss: 443MB	MIR cleanup and validation
time: 0.465; rss: 443MB	borrow checking
time: 0.024; rss: 443MB	reachability checking
time: 0.037; rss: 443MB	death checking
time: 0.000; rss: 443MB	unused lib feature checking
time: 0.172; rss: 443MB	lint checking
time: 0.000; rss: 443MB	resolving dependency formats
  time: 0.003; rss: 443MB	NoLandingPads
  time: 0.026; rss: 443MB	SimplifyCfg
  time: 0.063; rss: 452MB	EraseRegions
  time: 0.011; rss: 452MB	AddCallGuards
  time: 0.268; rss: 474MB	ElaborateDrops
  time: 0.003; rss: 474MB	NoLandingPads
  time: 0.052; rss: 474MB	SimplifyCfg
  time: 0.028; rss: 474MB	InstCombine
  time: 0.012; rss: 474MB	Deaggregator
  time: 0.002; rss: 474MB	CopyPropagation
  time: 0.033; rss: 474MB	SimplifyLocals
  time: 0.009; rss: 474MB	AddCallGuards
  time: 0.002; rss: 474MB	PreTrans
time: 0.512; rss: 474MB	MIR optimisations
  time: 0.064; rss: 482MB	write metadata
  time: 0.377; rss: 495MB	translation item collection
  time: 0.058; rss: 501MB	codegen unit partitioning
  time: 0.046; rss: 756MB	internalize symbols
time: 4.510; rss: 756MB	translation
time: 0.000; rss: 756MB	assert dep graph
time: 0.000; rss: 756MB	serialize dep graph
  time: 0.526; rss: 427MB	llvm function passes [0]
  time: 0.292; rss: 434MB	llvm module passes [0]
  time: 10.348; rss: 429MB	codegen passes [0]
  time: 0.000; rss: 429MB	codegen passes [0]
time: 11.924; rss: 429MB	LLVM passes
time: 0.000; rss: 429MB	serialize work products
time: 0.337; rss: 117MB	linking
done
