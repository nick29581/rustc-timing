commit 833b03ad52f1d5381d65ad866ab79cb9a68b0e7f
Merge: cfa668f 516d105
Author: bors <bors@rust-lang.org>
Date:   Thu Dec 15 09:26:25 2016 +0000

    Auto merge of #38185 - jsgf:test-list, r=alexcrichton
    
    libtest: add --list option to list tests and benchmarks
    
    This option lists all the tests and benchmarks a binary provides without running any of them.
    By default the listing is sent to stdout (intended for human consumption), but if `--logfile` is also specified, it is also written there in an easily parsable form.
    
    If filters are specified, they're applied before the output is emitted. The human output will also include a summary unless `-q` is specified.
rustc: ./syntex-0.42.2@010-incr
find . -name '*.rs' | xargs touch
RUSTFLAGS="-Z incremental=incr" \
    cargo rustc -p syntex_syntax  -- \
    -Ztime-passes -Zinput-stats -Z incremental-info
time: 0.092; rss: 75MB	parsing
Lines of code:             33687
Pre-expansion node count:  223115
time: 0.000; rss: 75MB	recursion limit
time: 0.000; rss: 75MB	crate injection
time: 0.000; rss: 75MB	plugin loading
time: 0.000; rss: 75MB	plugin registration
time: 0.242; rss: 151MB	expansion
time: 0.000; rss: 151MB	maybe building test harness
time: 0.006; rss: 151MB	maybe creating a macro crate
Post-expansion node count: 638863
time: 0.000; rss: 151MB	checking for inline asm in case the target doesn't support it
time: 0.012; rss: 151MB	complete gated feature checking
time: 0.023; rss: 151MB	early lint checks
time: 0.007; rss: 151MB	AST validation
time: 0.076; rss: 166MB	name resolution
time: 0.059; rss: 199MB	lowering ast -> hir
time: 0.010; rss: 192MB	indexing hir
time: 0.006; rss: 192MB	attribute checking
time: 0.002; rss: 154MB	language item collection
time: 0.011; rss: 156MB	lifetime resolution
time: 0.000; rss: 156MB	looking for entry point
time: 0.000; rss: 156MB	looking for plugin registrar
time: 0.046; rss: 176MB	region resolution
time: 0.008; rss: 176MB	loop checking
time: 0.002; rss: 176MB	static item recursion checking
time: 0.381; rss: 178MB	compute_incremental_hashes_map
time: 0.000; rss: 178MB	load_dep_graph
time: 0.009; rss: 178MB	stability index
time: 0.021; rss: 181MB	stability checking
time: 0.056; rss: 189MB	type collecting
time: 0.004; rss: 189MB	variance inference
time: 0.006; rss: 193MB	impl wf inference
time: 0.026; rss: 196MB	coherence checking
time: 0.091; rss: 199MB	wf checking
time: 0.198; rss: 207MB	item-types checking
time: 3.596; rss: 266MB	item-bodies checking
time: 0.000; rss: 266MB	drop-impl checking
time: 0.223; rss: 276MB	const checking
time: 0.069; rss: 277MB	privacy checking
time: 0.022; rss: 283MB	intrinsic checking
time: 0.016; rss: 283MB	effect checking
time: 0.051; rss: 283MB	match checking
time: 0.048; rss: 291MB	liveness checking
time: 0.173; rss: 293MB	rvalue checking
time: 0.371; rss: 481MB	MIR dump
  time: 0.058; rss: 483MB	SimplifyCfg
  time: 0.077; rss: 483MB	QualifyAndPromoteConstants
  time: 0.122; rss: 499MB	TypeckMir
  time: 0.004; rss: 499MB	SimplifyBranches
  time: 0.032; rss: 500MB	SimplifyCfg
time: 0.293; rss: 500MB	MIR cleanup and validation
time: 0.474; rss: 500MB	borrow checking
time: 0.024; rss: 500MB	reachability checking
time: 0.039; rss: 500MB	death checking
time: 0.000; rss: 500MB	unused lib feature checking
time: 0.182; rss: 500MB	lint checking
time: 0.000; rss: 500MB	resolving dependency formats
  time: 0.004; rss: 500MB	NoLandingPads
  time: 0.028; rss: 500MB	SimplifyCfg
  time: 0.065; rss: 509MB	EraseRegions
  time: 0.011; rss: 509MB	AddCallGuards
  time: 0.277; rss: 531MB	ElaborateDrops
  time: 0.004; rss: 531MB	NoLandingPads
  time: 0.054; rss: 531MB	SimplifyCfg
  time: 0.029; rss: 530MB	InstCombine
  time: 0.013; rss: 530MB	Deaggregator
  time: 0.004; rss: 530MB	CopyPropagation
  time: 0.036; rss: 530MB	SimplifyLocals
  time: 0.010; rss: 530MB	AddCallGuards
  time: 0.003; rss: 530MB	PreTrans
time: 0.537; rss: 530MB	MIR optimisations
  time: 0.068; rss: 538MB	write metadata
  time: 0.405; rss: 552MB	translation item collection
  time: 0.072; rss: 554MB	codegen unit partitioning
  time: 0.054; rss: 1455MB	internalize symbols
time: 12.724; rss: 1455MB	translation
time: 0.000; rss: 1455MB	assert dep graph
time: 2.112; rss: 1483MB	serialize dep graph
incremental: re-using 0 out of 50 modules
time: 0.000; rss: 1192MB	llvm function passes [0]
time: 0.000; rss: 1192MB	llvm module passes [0]
time: 0.001; rss: 1202MB	llvm function passes [1]
time: 0.000; rss: 1206MB	llvm module passes [1]
time: 0.001; rss: 1213MB	llvm function passes [2]
time: 0.000; rss: 1213MB	llvm module passes [2]
time: 0.002; rss: 1213MB	llvm function passes [3]
time: 0.000; rss: 1213MB	llvm module passes [3]
time: 0.003; rss: 1213MB	codegen passes [0]
time: 0.004; rss: 1213MB	llvm function passes [6]
time: 0.001; rss: 1213MB	llvm module passes [6]
time: 0.005; rss: 1213MB	codegen passes [1]
time: 0.001; rss: 1213MB	llvm function passes [1]
time: 0.000; rss: 1213MB	llvm module passes [1]
time: 0.011; rss: 1215MB	llvm function passes [5]
time: 0.008; rss: 1215MB	codegen passes [2]
time: 0.016; rss: 1217MB	llvm function passes [4]
time: 0.006; rss: 1217MB	llvm module passes [5]
time: 0.008; rss: 1228MB	llvm module passes [4]
time: 0.015; rss: 1228MB	codegen passes [1]
time: 0.019; rss: 1228MB	codegen passes [3]
time: 0.000; rss: 1228MB	llvm function passes [3]
time: 0.000; rss: 1228MB	llvm module passes [3]
time: 0.001; rss: 1228MB	codegen passes [3]
time: 0.011; rss: 1228MB	llvm function passes [3]
time: 0.001; rss: 1228MB	llvm module passes [3]
time: 0.027; rss: 1230MB	llvm function passes [49]
time: 0.019; rss: 1234MB	llvm function passes [47]
time: 0.008; rss: 1238MB	llvm module passes [47]
time: 0.055; rss: 1240MB	llvm function passes [2]
time: 0.029; rss: 1240MB	llvm module passes [49]
time: 0.060; rss: 1247MB	llvm function passes [48]
time: 0.014; rss: 1247MB	llvm module passes [2]
time: 0.076; rss: 1249MB	codegen passes [6]
time: 0.046; rss: 1249MB	codegen passes [3]
time: 0.000; rss: 1253MB	llvm function passes [45]
time: 0.000; rss: 1253MB	llvm module passes [45]
time: 0.000; rss: 1253MB	llvm function passes [13]
time: 0.005; rss: 1253MB	codegen passes [45]
time: 0.012; rss: 1255MB	llvm module passes [13]
time: 0.005; rss: 1259MB	codegen passes [13]
time: 0.062; rss: 1263MB	llvm function passes [12]
time: 0.000; rss: 1263MB	llvm module passes [12]
time: 0.125; rss: 1265MB	llvm function passes [7]
time: 0.101; rss: 1267MB	llvm function passes [9]
time: 0.095; rss: 1269MB	llvm function passes [25]
time: 0.059; rss: 1269MB	llvm module passes [48]
time: 0.056; rss: 1269MB	llvm function passes [46]
time: 0.000; rss: 1269MB	llvm module passes [46]
time: 0.016; rss: 1273MB	llvm module passes [25]
time: 0.030; rss: 1277MB	codegen passes [12]
time: 0.032; rss: 1277MB	llvm module passes [9]
time: 0.021; rss: 1277MB	llvm function passes [17]
time: 0.008; rss: 1277MB	llvm module passes [17]
time: 0.043; rss: 1277MB	llvm function passes [16]
time: 0.011; rss: 1277MB	llvm module passes [16]
time: 0.095; rss: 1281MB	llvm function passes [45]
time: 0.019; rss: 1281MB	llvm function passes [42]
time: 0.005; rss: 1281MB	llvm module passes [42]
time: 0.208; rss: 1281MB	llvm function passes [0]
time: 0.022; rss: 1281MB	llvm module passes [45]
time: 0.100; rss: 1281MB	llvm module passes [7]
time: 0.107; rss: 1281MB	codegen passes [46]
time: 0.146; rss: 1283MB	llvm function passes [43]
time: 0.243; rss: 1284MB	llvm function passes [11]
time: 0.069; rss: 1284MB	llvm function passes [46]
time: 0.024; rss: 1284MB	llvm module passes [43]
time: 0.243; rss: 1284MB	llvm function passes [6]
time: 0.016; rss: 1282MB	llvm module passes [46]
time: 0.207; rss: 1282MB	llvm function passes [15]
time: 0.003; rss: 1287MB	llvm function passes [40]
time: 0.002; rss: 1288MB	llvm module passes [40]
time: 0.285; rss: 1290MB	llvm function passes [3]
time: 0.166; rss: 1289MB	llvm module passes [0]
time: 0.028; rss: 1289MB	llvm module passes [15]
time: 0.004; rss: 1286MB	llvm function passes [30]
time: 0.001; rss: 1286MB	llvm module passes [30]
time: 0.009; rss: 1287MB	llvm function passes [21]
time: 0.000; rss: 1287MB	llvm function passes [26]
time: 0.000; rss: 1287MB	llvm module passes [26]
time: 0.000; rss: 1287MB	codegen passes [20]
time: 0.030; rss: 1291MB	llvm module passes [21]
time: 0.049; rss: 1291MB	llvm function passes [27]
time: 0.075; rss: 1292MB	llvm module passes [3]
time: 0.013; rss: 1291MB	llvm module passes [27]
time: 0.338; rss: 1292MB	llvm function passes [44]
time: 0.037; rss: 1292MB	codegen passes [26]
time: 0.195; rss: 1296MB	llvm function passes [41]
time: 0.166; rss: 1302MB	llvm module passes [6]
time: 0.396; rss: 1301MB	llvm function passes [14]
time: 0.352; rss: 1301MB	llvm function passes [12]
time: 0.508; rss: 1302MB	llvm function passes [1]
time: 0.168; rss: 1303MB	llvm function passes [18]
time: 0.431; rss: 1302MB	llvm function passes [13]
time: 0.546; rss: 1307MB	llvm function passes [10]
time: 0.236; rss: 1311MB	llvm function passes [39]
time: 0.244; rss: 1318MB	llvm function passes [8]
time: 0.169; rss: 1318MB	llvm module passes [41]
time: 0.025; rss: 1321MB	llvm module passes [8]
time: 0.391; rss: 1323MB	llvm function passes [19]
time: 0.308; rss: 1324MB	llvm function passes [38]
time: 0.161; rss: 1324MB	llvm module passes [13]
time: 0.190; rss: 1330MB	llvm module passes [18]
time: 0.160; rss: 1328MB	llvm module passes [39]
time: 0.281; rss: 1332MB	llvm module passes [14]
time: 0.443; rss: 1339MB	llvm function passes [33]
time: 0.435; rss: 1337MB	llvm module passes [44]
time: 0.603; rss: 1340MB	llvm module passes [11]
time: 0.218; rss: 1339MB	llvm module passes [38]
time: 0.815; rss: 1334MB	codegen passes [5]
time: 0.452; rss: 1339MB	codegen passes [30]
time: 0.418; rss: 1335MB	codegen passes [40]
time: 0.469; rss: 1329MB	llvm module passes [1]
time: 0.346; rss: 1334MB	llvm module passes [19]
time: 0.492; rss: 1336MB	llvm module passes [10]
time: 0.572; rss: 1336MB	llvm module passes [12]
time: 0.852; rss: 1341MB	codegen passes [42]
time: 0.321; rss: 1350MB	llvm module passes [33]
time: 0.632; rss: 1353MB	codegen passes [21]
time: 1.219; rss: 1359MB	codegen passes [4]
time: 1.548; rss: 1423MB	codegen passes [47]
time: 1.314; rss: 1422MB	codegen passes [17]
time: 1.588; rss: 1410MB	codegen passes [49]
time: 1.384; rss: 1443MB	codegen passes [18]
time: 1.573; rss: 1439MB	codegen passes [9]
time: 2.137; rss: 1431MB	codegen passes [2]
time: 1.601; rss: 1413MB	codegen passes [41]
time: 1.988; rss: 1393MB	codegen passes [16]
time: 2.156; rss: 1388MB	codegen passes [27]
time: 2.082; rss: 1404MB	codegen passes [46]
time: 2.471; rss: 1425MB	codegen passes [25]
time: 2.520; rss: 1453MB	codegen passes [3]
time: 2.729; rss: 1479MB	codegen passes [45]
time: 2.392; rss: 1471MB	codegen passes [8]
time: 2.903; rss: 1481MB	codegen passes [43]
time: 2.834; rss: 1510MB	codegen passes [15]
time: 2.927; rss: 1498MB	codegen passes [6]
time: 3.830; rss: 1521MB	codegen passes [48]
time: 3.410; rss: 1564MB	codegen passes [39]
time: 3.595; rss: 1604MB	codegen passes [11]
time: 3.567; rss: 1592MB	codegen passes [14]
time: 3.868; rss: 1628MB	codegen passes [38]
time: 4.000; rss: 1592MB	codegen passes [13]
time: 4.354; rss: 1562MB	codegen passes [7]
time: 3.918; rss: 1525MB	codegen passes [44]
time: 4.360; rss: 1554MB	codegen passes [33]
time: 4.477; rss: 1498MB	codegen passes [19]
time: 4.295; rss: 1460MB	codegen passes [10]
time: 4.982; rss: 1412MB	codegen passes [0]
time: 5.595; rss: 1362MB	codegen passes [12]
time: 5.965; rss: 1296MB	codegen passes [1]
time: 8.679; rss: 1295MB	LLVM passes
time: 0.000; rss: 1295MB	serialize work products
time: 1.051; rss: 267MB	linking
done
