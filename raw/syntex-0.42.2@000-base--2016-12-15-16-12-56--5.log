commit 8f02c429ad3e2ad687a222d1daae2e04bb9bb876
Merge: f70ad0a 67ae4ab
Author: bors <bors@rust-lang.org>
Date:   Thu Dec 15 19:43:28 2016 +0000

    Auto merge of #38394 - alexcrichton:fix-nightlies, r=brson
    
    rustbuild: Package rust-mingw by default
    
    This fixes the `make dist` step on MinGW to package the `rust-mingw` component
    by default. This should hopefully be the last step in fixing nightlies.
rustc: ./syntex-0.42.2@000-base
cargo rustc -p syntex_syntax  -- -Ztime-passes -Zinput-stats
time: 0.092; rss: 71MB	parsing
Lines of code:             33687
Pre-expansion node count:  223115
time: 0.000; rss: 71MB	recursion limit
time: 0.000; rss: 71MB	crate injection
time: 0.000; rss: 71MB	plugin loading
time: 0.000; rss: 71MB	plugin registration
time: 0.240; rss: 147MB	expansion
time: 0.000; rss: 147MB	maybe building test harness
time: 0.006; rss: 147MB	maybe creating a macro crate
Post-expansion node count: 638863
time: 0.000; rss: 147MB	checking for inline asm in case the target doesn't support it
time: 0.012; rss: 147MB	complete gated feature checking
time: 0.023; rss: 147MB	early lint checks
time: 0.007; rss: 147MB	AST validation
time: 0.075; rss: 161MB	name resolution
time: 0.102; rss: 194MB	lowering ast -> hir
time: 0.010; rss: 186MB	indexing hir
time: 0.006; rss: 186MB	attribute checking
time: 0.002; rss: 149MB	language item collection
time: 0.011; rss: 149MB	lifetime resolution
time: 0.000; rss: 149MB	looking for entry point
time: 0.000; rss: 149MB	looking for plugin registrar
time: 0.086; rss: 168MB	region resolution
time: 0.008; rss: 168MB	loop checking
time: 0.002; rss: 168MB	static item recursion checking
time: 0.382; rss: 170MB	compute_incremental_hashes_map
time: 0.000; rss: 170MB	load_dep_graph
time: 0.009; rss: 170MB	stability index
time: 0.017; rss: 170MB	stability checking
time: 0.048; rss: 175MB	type collecting
time: 0.001; rss: 175MB	variance inference
time: 0.002; rss: 175MB	impl wf inference
time: 0.018; rss: 177MB	coherence checking
time: 0.083; rss: 179MB	wf checking
time: 0.186; rss: 183MB	item-types checking
time: 3.513; rss: 226MB	item-bodies checking
time: 0.000; rss: 226MB	drop-impl checking
time: 0.309; rss: 238MB	const checking
time: 0.057; rss: 239MB	privacy checking
time: 0.016; rss: 239MB	intrinsic checking
time: 0.014; rss: 239MB	effect checking
time: 0.047; rss: 239MB	match checking
time: 0.049; rss: 243MB	liveness checking
time: 0.175; rss: 243MB	rvalue checking
time: 0.572; rss: 418MB	MIR dump
  time: 0.059; rss: 424MB	SimplifyCfg
  time: 0.075; rss: 424MB	QualifyAndPromoteConstants
  time: 0.109; rss: 424MB	TypeckMir
  time: 0.004; rss: 424MB	SimplifyBranches
  time: 0.031; rss: 424MB	SimplifyCfg
time: 0.277; rss: 424MB	MIR cleanup and validation
time: 0.481; rss: 427MB	borrow checking
time: 0.024; rss: 428MB	reachability checking
time: 0.038; rss: 428MB	death checking
time: 0.000; rss: 428MB	unused lib feature checking
time: 0.179; rss: 428MB	lint checking
time: 0.000; rss: 428MB	resolving dependency formats
  time: 0.003; rss: 428MB	NoLandingPads
  time: 0.027; rss: 428MB	SimplifyCfg
  time: 0.080; rss: 435MB	EraseRegions
  time: 0.011; rss: 435MB	AddCallGuards
  time: 0.310; rss: 457MB	ElaborateDrops
  time: 0.003; rss: 457MB	NoLandingPads
  time: 0.054; rss: 458MB	SimplifyCfg
  time: 0.029; rss: 458MB	InstCombine
  time: 0.012; rss: 458MB	Deaggregator
  time: 0.002; rss: 458MB	CopyPropagation
  time: 0.035; rss: 458MB	SimplifyLocals
  time: 0.010; rss: 458MB	AddCallGuards
  time: 0.002; rss: 458MB	PreTrans
time: 0.577; rss: 458MB	MIR optimisations
  time: 0.082; rss: 466MB	write metadata
  time: 0.407; rss: 479MB	translation item collection
  time: 0.064; rss: 485MB	codegen unit partitioning
  time: 0.054; rss: 741MB	internalize symbols
time: 5.156; rss: 741MB	translation
time: 0.000; rss: 741MB	assert dep graph
time: 0.000; rss: 741MB	serialize dep graph
  time: 0.535; rss: 425MB	llvm function passes [0]
  time: 0.301; rss: 432MB	llvm module passes [0]
  time: 10.531; rss: 428MB	codegen passes [0]
  time: 0.000; rss: 428MB	codegen passes [0]
time: 12.244; rss: 428MB	LLVM passes
time: 0.000; rss: 428MB	serialize work products
time: 0.347; rss: 116MB	linking
done
