commit b197e4a45f31849c29bf6de260531a8f85ba1bf5
Merge: 4cda3b6 e080804
Author: bors <bors@rust-lang.org>
Date:   Wed Dec 14 17:36:01 2016 +0000

    Auto merge of #38295 - dylanmckay:llvm-4.0-di-globalvar, r=michaelwoerister
    
    [LLVM 4.0] Update LLVM global variable debug info API for 4.0
    
    This teaches Rust about an LLVM 4.0 API change for creating debug info
    for global variables.
    
    This change was made in upstream LLVM patch https://reviews.llvm.org/D20147
    
    This is almost a 1:1 copy of how clang did it in http://reviews.llvm.org/D20415
rustc: ./syntex-0.42.2@000-base
cargo rustc -p syntex_syntax  -- -Ztime-passes -Zinput-stats
time: 0.091; rss: 71MB	parsing
Lines of code:             33687
Pre-expansion node count:  223115
time: 0.000; rss: 71MB	recursion limit
time: 0.000; rss: 71MB	crate injection
time: 0.000; rss: 71MB	plugin loading
time: 0.000; rss: 71MB	plugin registration
time: 0.241; rss: 147MB	expansion
time: 0.000; rss: 147MB	maybe building test harness
time: 0.006; rss: 147MB	maybe creating a macro crate
Post-expansion node count: 638863
time: 0.000; rss: 147MB	checking for inline asm in case the target doesn't support it
time: 0.012; rss: 147MB	complete gated feature checking
time: 0.023; rss: 147MB	early lint checks
time: 0.007; rss: 147MB	AST validation
time: 0.075; rss: 161MB	name resolution
time: 0.058; rss: 195MB	lowering ast -> hir
time: 0.009; rss: 187MB	indexing hir
time: 0.006; rss: 187MB	attribute checking
time: 0.002; rss: 150MB	language item collection
time: 0.011; rss: 150MB	lifetime resolution
time: 0.000; rss: 150MB	looking for entry point
time: 0.000; rss: 150MB	looking for plugin registrar
time: 0.045; rss: 169MB	region resolution
time: 0.007; rss: 169MB	loop checking
time: 0.002; rss: 169MB	static item recursion checking
time: 0.381; rss: 171MB	compute_incremental_hashes_map
time: 0.000; rss: 171MB	load_dep_graph
time: 0.008; rss: 171MB	stability index
time: 0.016; rss: 171MB	stability checking
time: 0.046; rss: 176MB	type collecting
time: 0.001; rss: 176MB	variance inference
time: 0.002; rss: 176MB	impl wf inference
time: 0.017; rss: 178MB	coherence checking
time: 0.082; rss: 180MB	wf checking
time: 0.182; rss: 184MB	item-types checking
time: 3.374; rss: 235MB	item-bodies checking
time: 0.000; rss: 235MB	drop-impl checking
time: 0.208; rss: 245MB	const checking
time: 0.054; rss: 245MB	privacy checking
time: 0.016; rss: 245MB	intrinsic checking
time: 0.013; rss: 245MB	effect checking
time: 0.046; rss: 245MB	match checking
time: 0.045; rss: 252MB	liveness checking
time: 0.169; rss: 252MB	rvalue checking
time: 0.357; rss: 442MB	MIR dump
  time: 0.056; rss: 443MB	SimplifyCfg
  time: 0.072; rss: 443MB	QualifyAndPromoteConstants
  time: 0.106; rss: 443MB	TypeckMir
  time: 0.004; rss: 443MB	SimplifyBranches
  time: 0.030; rss: 444MB	SimplifyCfg
time: 0.267; rss: 444MB	MIR cleanup and validation
time: 0.473; rss: 444MB	borrow checking
time: 0.024; rss: 444MB	reachability checking
time: 0.037; rss: 444MB	death checking
time: 0.000; rss: 444MB	unused lib feature checking
time: 0.179; rss: 444MB	lint checking
time: 0.000; rss: 444MB	resolving dependency formats
  time: 0.003; rss: 444MB	NoLandingPads
  time: 0.026; rss: 444MB	SimplifyCfg
  time: 0.063; rss: 453MB	EraseRegions
  time: 0.011; rss: 453MB	AddCallGuards
  time: 0.268; rss: 474MB	ElaborateDrops
  time: 0.003; rss: 474MB	NoLandingPads
  time: 0.052; rss: 474MB	SimplifyCfg
  time: 0.027; rss: 474MB	InstCombine
  time: 0.012; rss: 474MB	Deaggregator
  time: 0.002; rss: 474MB	CopyPropagation
  time: 0.033; rss: 474MB	SimplifyLocals
  time: 0.009; rss: 474MB	AddCallGuards
  time: 0.002; rss: 474MB	PreTrans
time: 0.512; rss: 474MB	MIR optimisations
  time: 0.063; rss: 483MB	write metadata
  time: 0.380; rss: 496MB	translation item collection
  time: 0.059; rss: 502MB	codegen unit partitioning
  time: 0.046; rss: 756MB	internalize symbols
time: 4.497; rss: 756MB	translation
time: 0.000; rss: 756MB	assert dep graph
time: 0.000; rss: 756MB	serialize dep graph
  time: 0.524; rss: 431MB	llvm function passes [0]
  time: 0.292; rss: 437MB	llvm module passes [0]
  time: 10.425; rss: 430MB	codegen passes [0]
  time: 0.000; rss: 430MB	codegen passes [0]
time: 11.992; rss: 430MB	LLVM passes
time: 0.000; rss: 430MB	serialize work products
time: 0.338; rss: 118MB	linking
done
